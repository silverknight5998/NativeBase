// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Actionsheet Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Custom Backdrop 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet DisableOverlay 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Actionsheet Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Actionsheet
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      bg="#cffafe"
      borderRadius="md"
      flexDirection="row"
      justifyContent="flex-start"
      p={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#cffafe",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "flex-start",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={24}
          bbWidth={24}
          color={4278630100}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          size={6}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Array [
                Object {
                  "color": "#06b6d4",
                  "height": 24,
                  "width": 24,
                },
              ],
              Object {
                "flex": 0,
                "height": 24,
                "width": 24,
              },
            ]
          }
          tintColor={4278630100}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 12,
            },
          ]
        }
        width={3}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight="bold"
          lineHeight={5}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "700",
                "lineHeight": 20,
              },
            ]
          }
        >
          Alert Title
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 12,
            },
          ]
        }
        width={3}
      />
      <View
        flexShrink={1}
        style={
          Array [
            Object {
              "flexShrink": 1,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="sm"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Alert Description should be a brief about the Alert Message.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert ColorScheme 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={3}
      style={
        Array [
          Object {
            "marginLeft": 12,
            "marginRight": 12,
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        alignItems="center"
        bg="#ccfbf1"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ccfbf1",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4279548070}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#14b8a6",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4279548070}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
              Object {
                "flexDirection": "row",
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            This is a 
            teal
             alert
          </Text>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="#fee2e2"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fee2e2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4293870660}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#ef4444",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4293870660}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
              Object {
                "flexDirection": "row",
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            This is a 
            red
             alert
          </Text>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="#fef9c3"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fef9c3",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4293571336}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#eab308",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4293571336}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
              Object {
                "flexDirection": "row",
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            This is a 
            yellow
             alert
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView>
      <View>
        <View
          my={3}
          style={
            Array [
              Object {
                "marginBottom": 12,
                "marginTop": 12,
                "width": "100%",
              },
            ]
          }
          w="100%"
        >
          <View
            alignItems="center"
            borderColor="gray.200"
            borderRadius="md"
            borderWidth={1}
            display="flex"
            flexDirection="column"
            justifyContent="center"
            p={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderColor": "#e4e4e7",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "display": "flex",
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                },
              ]
            }
            textColor="#15803d"
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={40}
                bbWidth={40}
                boxSize="40px"
                color={4280468830}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                mr={0}
                size={6}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#22c55e",
                        "height": 40,
                        "marginRight": 0,
                        "width": 40,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 40,
                      "width": 40,
                    },
                  ]
                }
                tintColor={4280468830}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              mb={2}
              mt={2}
              style={
                Array [
                  Object {
                    "marginBottom": 8,
                    "marginTop": 8,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                lineHeight={5}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                      "lineHeight": 20,
                    },
                  ]
                }
              >
                This is a success alert
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              flexShrink={1}
              style={
                Array [
                  Object {
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
              </Text>
            </View>
          </View>
          <View
            height={5}
            style={
              Array [
                Object {
                  "height": 20,
                },
              ]
            }
          />
          <View
            alignItems="center"
            bg="#dcfce7"
            borderRadius="md"
            display="flex"
            flexDirection="column"
            justifyContent="center"
            p={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#dcfce7",
                  "borderRadius": 4,
                  "display": "flex",
                  "flexDirection": "column",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={40}
                bbWidth={40}
                boxSize="40px"
                color={4280468830}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                mr={0}
                size={6}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#22c55e",
                        "height": 40,
                        "marginRight": 0,
                        "width": 40,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 40,
                      "width": 40,
                    },
                  ]
                }
                tintColor={4280468830}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              mb={2}
              mt={2}
              style={
                Array [
                  Object {
                    "marginBottom": 8,
                    "marginTop": 8,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                lineHeight={5}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                      "lineHeight": 20,
                    },
                  ]
                }
              >
                This is a success alert
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              flexShrink={1}
              style={
                Array [
                  Object {
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
              </Text>
            </View>
          </View>
          <View
            height={5}
            style={
              Array [
                Object {
                  "height": 20,
                },
              ]
            }
          />
          <View
            alignItems="center"
            bg="#dcfce7"
            borderRadius="md"
            flexDirection="row"
            justifyContent="flex-start"
            p={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#dcfce7",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4280468830}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                size={6}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#22c55e",
                        "height": 24,
                        "width": 24,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4280468830}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              flex={1}
              ml={2}
              style={
                Array [
                  Object {
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "marginLeft": 8,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  color="muted.700"
                  fontSize="md"
                  fontStyle="normal"
                  fontWeight="bold"
                  lineHeight={5}
                  style={
                    Array [
                      Object {
                        "color": "#404040",
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "700",
                        "lineHeight": 20,
                      },
                    ]
                  }
                >
                  This is a success alert
                </Text>
              </View>
              <View
                flexShrink={1}
                mt={2}
                style={
                  Array [
                    Object {
                      "flexShrink": 1,
                      "marginTop": 8,
                    },
                  ]
                }
              >
                <Text
                  color="muted.700"
                  fontSize="sm"
                  fontStyle="normal"
                  fontWeight={400}
                  style={
                    Array [
                      Object {
                        "color": "#404040",
                        "fontSize": 14,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                      },
                    ]
                  }
                >
                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              _text={
                Object {
                  "color": "lightText",
                }
              }
              accessible={true}
              bg="transparent"
              borderRadius="lg"
              colorScheme="primary"
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              p={2}
              position="absolute"
              right={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 6,
                    "paddingBottom": 8,
                    "paddingLeft": 8,
                    "paddingRight": 8,
                    "paddingTop": 8,
                    "position": "absolute",
                    "right": 4,
                    "top": 2,
                  },
                ]
              }
              top={0.5}
              variant="ghost"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4280468830}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#22c55e",
                        "height": 16,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4280468830}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={3}
      style={
        Array [
          Object {
            "marginLeft": 12,
            "marginRight": 12,
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        actionProps={
          Object {
            "alignSelf": "center",
          }
        }
        alignItems="center"
        bg="#fee2e2"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fee2e2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4293870660}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#ef4444",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4293870660}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            Error Alert
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Description 
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          alignSelf="center"
          ml="auto"
          style={
            Array [
              Object {
                "alignSelf": "center",
                "marginLeft": "auto",
              },
            ]
          }
        >
          <View
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessible={true}
            bg="transparent"
            borderRadius="lg"
            colorScheme="primary"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={2}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 6,
                  "paddingBottom": 8,
                  "paddingLeft": 8,
                  "paddingRight": 8,
                  "paddingTop": 8,
                },
              ]
            }
            variant="ghost"
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={12}
              bbWidth={12}
              color={4280690214}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              size={3}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Array [
                    Object {
                      "color": "#262626",
                      "height": 12,
                      "width": 12,
                    },
                  ],
                  Object {
                    "flex": 0,
                    "height": 12,
                    "width": 12,
                  },
                ]
              }
              tintColor={4280690214}
              vbHeight={24}
              vbWidth={24}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGPath
                    d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Status 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        alignItems="center"
        bg="#fee2e2"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fee2e2",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
              "width": "100%",
            },
          ]
        }
        w="100%"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4293870660}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#ef4444",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4293870660}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            This is an error alert
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="#ffedd5"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffedd5",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
              "width": "100%",
            },
          ]
        }
        w="100%"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4294538006}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#f97316",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4294538006}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            This is an warning alert
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="#e0f2fe"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#e0f2fe",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
              "width": "100%",
            },
          ]
        }
        w="100%"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4279150057}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#0ea5e9",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4279150057}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            This is an info alert
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="#dcfce7"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#dcfce7",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
              "width": "100%",
            },
          ]
        }
        w="100%"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4280468830}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#22c55e",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4280468830}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            This is an success alert
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert Variant 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={3}
      style={
        Array [
          Object {
            "marginLeft": 12,
            "marginRight": 12,
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        alignItems="center"
        bg="#2dd4bf"
        borderColor="transparent"
        borderRadius="md"
        borderWidth={6}
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#2dd4bf",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderWidth": 6,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
        textColor="white"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4294967295}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4294967295}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            Alert Solid Variant
          </Text>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="#dcfce7"
        borderColor="transparent"
        borderLeftColor="success.600"
        borderRadius="md"
        borderWidth={4}
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#dcfce7",
              "borderColor": "transparent",
              "borderLeftColor": "#16a34a",
              "borderRadius": 4,
              "borderWidth": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
        textColor="success.600"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4280468830}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#22c55e",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4280468830}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            Alert Left Accent Variant
          </Text>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="#fee2e2"
        borderColor="transparent"
        borderRadius="md"
        borderTopColor="error.600"
        borderWidth={4}
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#fee2e2",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderTopColor": "#dc2626",
              "borderWidth": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
        textColor="error.600"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4293870660}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#ef4444",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4293870660}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            Alert Top Accent Variant
          </Text>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="#ffedd5"
        borderRadius="md"
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ffedd5",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4294538006}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#f97316",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4294538006}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            Alert Default/Subtle Variant
          </Text>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        borderColor="info.600"
        borderRadius="md"
        borderWidth={1}
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "#0284c7",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
        textColor="#0369a1"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4279150057}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#0ea5e9",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4279150057}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            Alert Outline Variant
          </Text>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        borderColor="rgba(2, 132, 199, 0.2)"
        borderRadius="md"
        borderWidth={1}
        flexDirection="row"
        justifyContent="flex-start"
        p={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "rgba(2, 132, 199, 0.2)",
              "borderRadius": 4,
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
        textColor="#0c4a6e"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={24}
            bbWidth={24}
            color={4279150057}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={6}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#0ea5e9",
                    "height": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 24,
                  "width": 24,
                },
              ]
            }
            tintColor={4279150057}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          flexShrink={1}
          style={
            Array [
              Object {
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            lineHeight={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "lineHeight": 20,
                },
              ]
            }
          >
            Alert Outline Light Variant
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Alert action 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        overflow="hidden"
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Object {
              "height": undefined,
            },
          ]
        }
      >
        <View
          onLayout={[Function]}
          overflow="scroll"
          style={
            Array [
              Object {
                "overflow": "scroll",
              },
            ]
          }
        >
          <View
            actionProps={
              Object {
                "alignSelf": "center",
              }
            }
            alignItems="center"
            bg="#fee2e2"
            borderRadius="md"
            flexDirection="row"
            justifyContent="flex-start"
            p={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fee2e2",
                  "borderRadius": 4,
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                  "paddingBottom": 12,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 12,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4293870660}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                size={6}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#ef4444",
                        "height": 24,
                        "width": 24,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4293870660}
                vbHeight={24}
                vbWidth={24}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                lineHeight={5}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                      "lineHeight": 20,
                    },
                  ]
                }
              >
                Error Alert
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              flexShrink={1}
              style={
                Array [
                  Object {
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                description goes here
              </Text>
            </View>
            <View
              style={
                Array [
                  Object {
                    "width": 12,
                  },
                ]
              }
              width={3}
            />
            <View
              alignSelf="center"
              ml="auto"
              style={
                Array [
                  Object {
                    "alignSelf": "center",
                    "marginLeft": "auto",
                  },
                ]
              }
            >
              <View
                _text={
                  Object {
                    "color": "lightText",
                  }
                }
                accessible={true}
                bg="transparent"
                borderRadius="lg"
                colorScheme="primary"
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onHoverIn={[Function]}
                onHoverOut={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                p={2}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderRadius": 6,
                      "paddingBottom": 8,
                      "paddingLeft": 8,
                      "paddingRight": 8,
                      "paddingTop": 8,
                    },
                  ]
                }
                variant="ghost"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4280690214}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={4}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#262626",
                          "height": 16,
                          "width": 16,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 16,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4280690214}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        mx="auto"
        my={2}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={2}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 8,
              "marginLeft": "auto",
              "marginRight": "auto",
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 8,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="sm"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Re-Open
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AlertDialog Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        _focusVisible={
          Object {
            "style": Object {},
          }
        }
        _hover={
          Object {
            "bg": "danger.600",
          }
        }
        _pressed={
          Object {
            "bg": "danger.700",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="danger"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f43f5e",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Delete Customer
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots AlertDialog Transition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "display": "flex",
          "justifyContent": "center",
        }
      }
    >
      <View
        _focusVisible={
          Object {
            "style": Object {},
          }
        }
        _hover={
          Object {
            "bg": "primary.600",
          }
        }
        _pressed={
          Object {
            "bg": "primary.700",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 4,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 8,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#FFFFFF",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Discard
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar AvatarBadge 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      mx="auto"
      style={
        Array [
          Object {
            "flexDirection": "row",
            "marginLeft": "auto",
            "marginRight": "auto",
          },
        ]
      }
    >
      <View
        alignItems="center"
        bg="teal.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#0d9488",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://alpha.nativebase.io/img/native-base-icon.png",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
        <View
          bg="red.200"
          borderColor="light.50"
          borderRadius="full"
          borderWidth={2}
          bottom={0}
          height={3}
          position="absolute"
          right={0}
          style={
            Array [
              Object {
                "backgroundColor": "#fecaca",
                "borderColor": "#fafaf9",
                "borderRadius": 9999,
                "borderWidth": 2,
                "bottom": 0,
                "height": 12,
                "position": "absolute",
                "right": 0,
                "width": 12,
              },
            ]
          }
          width={3}
        />
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        alignItems="center"
        bg="red.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#dc2626",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://alpha.nativebase.io/img/native-base-icon.png",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
        <View
          bg="tomato"
          borderColor="papayawhip"
          borderRadius="full"
          borderWidth={2}
          bottom={0}
          height={3}
          position="absolute"
          right={0}
          style={
            Array [
              Object {
                "backgroundColor": "tomato",
                "borderColor": "papayawhip",
                "borderRadius": 9999,
                "borderWidth": 2,
                "bottom": 0,
                "height": 12,
                "position": "absolute",
                "right": 0,
                "width": 12,
              },
            ]
          }
          width={3}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar AvatarGroup 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      display="flex"
      flexDirection="row-reverse"
      style={
        Array [
          Object {
            "display": "flex",
            "flexDirection": "row-reverse",
          },
        ]
      }
    >
      <View
        alignItems="center"
        bg="gray.600"
        borderColor="light.50"
        borderRadius="full"
        borderWidth={2}
        fontSize="xl"
        height="16"
        justifyContent="center"
        ml={-4}
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#52525b",
              "borderColor": "#fafaf9",
              "borderRadius": 9999,
              "borderWidth": 2,
              "fontSize": 20,
              "height": 64,
              "justifyContent": "center",
              "marginLeft": -16,
              "position": "relative",
              "width": 64,
            },
          ]
        }
        width="16"
      >
        <Text
          color="lightText"
          fontSize="md"
          fontStyle="normal"
          fontWeight={600}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "600",
              },
            ]
          }
        >
          + 5
        </Text>
      </View>
      <View
        alignItems="center"
        bg="cyan.600"
        borderColor="light.50"
        borderRadius="full"
        borderWidth={2}
        fontSize="xl"
        height="16"
        justifyContent="center"
        ml={-4}
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderColor": "#fafaf9",
              "borderRadius": 9999,
              "borderWidth": 2,
              "fontSize": 20,
              "height": 64,
              "justifyContent": "center",
              "marginLeft": -16,
              "position": "relative",
              "width": 64,
            },
          ]
        }
        width="16"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1352844693151731713/HKO7cnlW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        alignItems="center"
        bg="red.600"
        borderColor="light.50"
        borderRadius="full"
        borderWidth={2}
        fontSize="xl"
        height="16"
        justifyContent="center"
        ml={-4}
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#dc2626",
              "borderColor": "#fafaf9",
              "borderRadius": 9999,
              "borderWidth": 2,
              "fontSize": 20,
              "height": 64,
              "justifyContent": "center",
              "marginLeft": -16,
              "position": "relative",
              "width": 64,
            },
          ]
        }
        width="16"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1309797238651060226/18cm6VhQ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        alignItems="center"
        bg="teal.600"
        borderColor="light.50"
        borderRadius="full"
        borderWidth={2}
        fontSize="xl"
        height="16"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#0d9488",
              "borderColor": "#fafaf9",
              "borderRadius": 9999,
              "borderWidth": 2,
              "fontSize": 20,
              "height": 64,
              "justifyContent": "center",
              "position": "relative",
              "width": 64,
            },
          ]
        }
        width="16"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1369921787568422915/hoyvrUpc_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Fallback 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      mx="auto"
      style={
        Array [
          Object {
            "flexDirection": "row",
            "marginLeft": "auto",
            "marginRight": "auto",
          },
        ]
      }
    >
      <View
        alignItems="center"
        bg="teal.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        mr={1}
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#0d9488",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "marginRight": 4,
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        alignItems="center"
        bg="red.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#dc2626",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        alignItems="center"
        bg="green.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#16a34a",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://bit.ly/broken-link",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      bg="teal.600"
      borderColor="black"
      borderRadius={999}
      borderWidth={2}
      fontSize="lg"
      height="12"
      justifyContent="center"
      name="avatar"
      position="relative"
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#0d9488",
            "borderColor": "#000000",
            "borderRadius": 999,
            "borderWidth": 2,
            "fontSize": 18,
            "height": 48,
            "justifyContent": "center",
            "position": "relative",
            "width": 48,
          },
        ]
      }
      width="12"
    >
      <Image
        accessibilityLabel="--"
        alt="--"
        borderRadius={999}
        maxWidth="100%"
        onError={[Function]}
        source={
          Object {
            "uri": "https://alpha.nativebase.io/img/native-base-icon.png",
          }
        }
        style={
          Array [
            Object {
              "borderRadius": 999,
              "maxWidth": "100%",
            },
            undefined,
            Object {
              "height": "100%",
              "width": "100%",
            },
          ]
        }
      />
      <View
        bg="red.200"
        borderColor="light.50"
        borderRadius="full"
        borderWidth={2}
        bottom={0}
        height={5}
        position="absolute"
        right={0}
        style={
          Array [
            Object {
              "backgroundColor": "#fecaca",
              "borderColor": "#fafaf9",
              "borderRadius": 9999,
              "borderWidth": 2,
              "bottom": 0,
              "height": 20,
              "position": "absolute",
              "right": 0,
              "width": 20,
            },
          ]
        }
        width={5}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      flexDirection="column"
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "column",
          },
        ]
      }
    >
      <View
        alignItems="center"
        bg="teal.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="sm"
        height="6"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#0d9488",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 14,
              "height": 24,
              "justifyContent": "center",
              "position": "relative",
              "width": 24,
            },
          ]
        }
        width="6"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1188747996843761665/8CiUdKZW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        height={1}
        style={
          Array [
            Object {
              "height": 4,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="red.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="md"
        height="8"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#dc2626",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 16,
              "height": 32,
              "justifyContent": "center",
              "position": "relative",
              "width": 32,
            },
          ]
        }
        width="8"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/929409889788510208/gRr2f7rZ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        height={1}
        style={
          Array [
            Object {
              "height": 4,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="blue.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#2563eb",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1352844693151731713/HKO7cnlW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        height={1}
        style={
          Array [
            Object {
              "height": 4,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="green.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="xl"
        height="16"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#16a34a",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 20,
              "height": 64,
              "justifyContent": "center",
              "position": "relative",
              "width": 64,
            },
          ]
        }
        width="16"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1309797238651060226/18cm6VhQ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        height={1}
        style={
          Array [
            Object {
              "height": 4,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="yellow.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="2xl"
        height="24"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#ca8a04",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 24,
              "height": 96,
              "justifyContent": "center",
              "position": "relative",
              "width": 96,
            },
          ]
        }
        width="24"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1177303899243343872/B0sUJIH0_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        height={1}
        style={
          Array [
            Object {
              "height": 4,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="cyan.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="3xl"
        height="32"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#0891b2",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 30,
              "height": 128,
              "justifyContent": "center",
              "position": "relative",
              "width": 128,
            },
          ]
        }
        width="32"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1320985200663293952/lE_Kg6vr_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Avatar Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        alignItems="center"
        bg="teal.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#0d9488",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1188747996843761665/8CiUdKZW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        alignItems="center"
        bg="blue.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#2563eb",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1177303899243343872/B0sUJIH0_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        alignItems="center"
        bg="red.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#dc2626",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1352844693151731713/HKO7cnlW_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        alignItems="center"
        bg="amber.600"
        borderColor="gray.800"
        borderRadius="full"
        fontSize="lg"
        height="12"
        justifyContent="center"
        name="avatar"
        position="relative"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#d97706",
              "borderColor": "#27272a",
              "borderRadius": 9999,
              "fontSize": 18,
              "height": 48,
              "justifyContent": "center",
              "position": "relative",
              "width": 48,
            },
          ]
        }
        width="12"
      >
        <Image
          accessibilityLabel="--"
          alt="--"
          borderRadius="full"
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://pbs.twimg.com/profile_images/1309797238651060226/18cm6VhQ_400x400.jpg",
            }
          }
          style={
            Array [
              Object {
                "borderRadius": 9999,
                "maxWidth": "100%",
              },
              undefined,
              Object {
                "height": "100%",
                "width": "100%",
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      mx="auto"
      style={
        Array [
          Object {
            "flexDirection": "row",
            "marginLeft": "auto",
            "marginRight": "auto",
          },
        ]
      }
    >
      <View
        bg="success.300"
        borderColor="transparent"
        borderWidth={1}
        colorScheme="success"
        px={1}
        style={
          Array [
            Object {
              "backgroundColor": "#86efac",
              "borderColor": "transparent",
              "borderWidth": 1,
              "paddingLeft": 4,
              "paddingRight": 4,
            },
          ]
        }
        variant="subtle"
      >
        <Text
          color="success.900"
          fontSize="xs"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#14532d",
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          SUCCESS
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        bg="danger.300"
        borderColor="transparent"
        borderWidth={1}
        colorScheme="danger"
        px={1}
        style={
          Array [
            Object {
              "backgroundColor": "#fda4af",
              "borderColor": "transparent",
              "borderWidth": 1,
              "paddingLeft": 4,
              "paddingRight": 4,
            },
          ]
        }
        variant="subtle"
      >
        <Text
          color="danger.900"
          fontSize="xs"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#881337",
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          DANGER
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        bg="info.300"
        borderColor="transparent"
        borderWidth={1}
        colorScheme="info"
        px={1}
        style={
          Array [
            Object {
              "backgroundColor": "#7dd3fc",
              "borderColor": "transparent",
              "borderWidth": 1,
              "paddingLeft": 4,
              "paddingRight": 4,
            },
          ]
        }
        variant="subtle"
      >
        <Text
          color="info.900"
          fontSize="xs"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#0c4a6e",
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          INFO
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        bg="dark.300"
        borderColor="transparent"
        borderWidth={1}
        colorScheme="dark"
        px={1}
        style={
          Array [
            Object {
              "backgroundColor": "#52525b",
              "borderColor": "transparent",
              "borderWidth": 1,
              "paddingLeft": 4,
              "paddingRight": 4,
            },
          ]
        }
        variant="subtle"
      >
        <Text
          color="dark.900"
          fontSize="xs"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#fafafa",
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          DARK
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mx="auto"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginLeft": "auto",
            "marginRight": "auto",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Notifications
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 8,
              },
            ]
          }
          width={2}
        />
        <View
          bg="secondary.300"
          borderColor="transparent"
          borderWidth={1}
          color="lightText"
          colorScheme="secondary"
          fontSize="md"
          fontWeight={600}
          ml={1}
          px={1}
          rounded="md"
          style={
            Array [
              Object {
                "backgroundColor": "#f9a8d4",
                "borderColor": "transparent",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontWeight": "600",
                "marginLeft": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="secondary.900"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#831843",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            10
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      bg="success.500"
      borderColor="transparent"
      borderWidth={1}
      colorScheme="success"
      px={1}
      style={
        Array [
          Object {
            "backgroundColor": "#22c55e",
            "borderColor": "transparent",
            "borderWidth": 1,
            "paddingLeft": 4,
            "paddingRight": 4,
          },
        ]
      }
      variant="subtle"
    >
      <Text
        color="lightText"
        fontSize="xs"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        NATIVEBASE
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      bg="muted.300"
      borderColor="transparent"
      borderWidth={1}
      colorScheme="muted"
      px={1}
      style={
        Array [
          Object {
            "backgroundColor": "#d4d4d4",
            "borderColor": "transparent",
            "borderWidth": 1,
            "paddingLeft": 4,
            "paddingRight": 4,
          },
        ]
      }
      variant="subtle"
    >
      <Text
        color="muted.900"
        fontSize="xs"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#171717",
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        NEW FEATURE
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Badge Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      mx="auto"
      style={
        Array [
          Object {
            "flexDirection": "row",
            "marginLeft": "auto",
            "marginRight": "auto",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          bg="muted.500"
          borderColor="transparent"
          borderWidth={1}
          colorScheme="muted"
          px={1}
          style={
            Array [
              Object {
                "backgroundColor": "#737373",
                "borderColor": "transparent",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="lightText"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            DEFAULT
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          bg="success.500"
          borderColor="transparent"
          borderWidth={1}
          colorScheme="success"
          px={1}
          style={
            Array [
              Object {
                "backgroundColor": "#22c55e",
                "borderColor": "transparent",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="lightText"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            SUCCESS
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          bg="danger.500"
          borderColor="transparent"
          borderWidth={1}
          colorScheme="danger"
          px={1}
          style={
            Array [
              Object {
                "backgroundColor": "#f43f5e",
                "borderColor": "transparent",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="lightText"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            DANGER
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          bg="info.500"
          borderColor="transparent"
          borderWidth={1}
          colorScheme="info"
          px={1}
          style={
            Array [
              Object {
                "backgroundColor": "#0ea5e9",
                "borderColor": "transparent",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="lightText"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            INFO
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          borderColor="muted.500"
          borderWidth={1}
          colorScheme="muted"
          px={1}
          style={
            Array [
              Object {
                "borderColor": "#737373",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="muted.500"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#737373",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            DEFAULT
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          borderColor="success.500"
          borderWidth={1}
          colorScheme="success"
          px={1}
          style={
            Array [
              Object {
                "borderColor": "#22c55e",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="success.500"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#22c55e",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            SUCCESS
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          borderColor="danger.500"
          borderWidth={1}
          colorScheme="danger"
          px={1}
          style={
            Array [
              Object {
                "borderColor": "#f43f5e",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="danger.500"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#f43f5e",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            DANGER
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          borderColor="info.500"
          borderWidth={1}
          colorScheme="info"
          px={1}
          style={
            Array [
              Object {
                "borderColor": "#0ea5e9",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="info.500"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#0ea5e9",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            INFO
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          bg="muted.300"
          borderColor="transparent"
          borderWidth={1}
          colorScheme="muted"
          px={1}
          style={
            Array [
              Object {
                "backgroundColor": "#d4d4d4",
                "borderColor": "transparent",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="muted.900"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#171717",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            DEFAULT
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          bg="success.300"
          borderColor="transparent"
          borderWidth={1}
          colorScheme="success"
          px={1}
          style={
            Array [
              Object {
                "backgroundColor": "#86efac",
                "borderColor": "transparent",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="success.900"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#14532d",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            SUCCESS
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          bg="danger.300"
          borderColor="transparent"
          borderWidth={1}
          colorScheme="danger"
          px={1}
          style={
            Array [
              Object {
                "backgroundColor": "#fda4af",
                "borderColor": "transparent",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="danger.900"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#881337",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            DANGER
          </Text>
        </View>
        <View
          height={1}
          style={
            Array [
              Object {
                "height": 4,
              },
            ]
          }
        />
        <View
          bg="info.300"
          borderColor="transparent"
          borderWidth={1}
          colorScheme="info"
          px={1}
          style={
            Array [
              Object {
                "backgroundColor": "#7dd3fc",
                "borderColor": "transparent",
                "borderWidth": 1,
                "paddingLeft": 4,
                "paddingRight": 4,
              },
            ]
          }
          variant="subtle"
        >
          <Text
            color="info.900"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#0c4a6e",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            INFO
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box Basic Box 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      bg="primary.400"
      p={4}
      style={
        Array [
          Object {
            "backgroundColor": "#22d3ee",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <Text
        color="white"
        fontSize="md"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        This is a Box
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      backgroundColor="gray.50"
      style={
        Array [
          Object {
            "backgroundColor": "#fafafa",
            "width": 288,
          },
          Object {
            "elevation": 2,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 1.41,
          },
        ]
      }
      width={72}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "aspectRatio": 1.7777777777777777,
              },
            ]
          }
        >
          <Image
            accessibilityLabel="image"
            alt="image"
            maxWidth="100%"
            onError={[Function]}
            roundedTop="lg"
            source={
              Object {
                "uri": "https://www.holidify.com/images/cmsuploads/compressed/Bangalore_citycover_20190613234056.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderTopLeftRadius": 6,
                  "borderTopRightRadius": 6,
                  "maxWidth": "100%",
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
          />
        </View>
        <View
          alignItems="center"
          bg="red.500"
          bottom={0}
          display="flex"
          justifyContent="center"
          position="absolute"
          px={2}
          py={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ef4444",
                "bottom": 0,
                "display": "flex",
                "justifyContent": "center",
                "paddingBottom": 4,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 4,
                "position": "absolute",
              },
            ]
          }
        >
          <Text
            color="white"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="700"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            PHOTOS
          </Text>
        </View>
        <View
          alignItems="center"
          bg="red.500"
          boxSize={10}
          display="flex"
          justifyContent="center"
          m={2}
          p={1}
          position="absolute"
          right={0}
          rounded="full"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ef4444",
                "borderRadius": 9999,
                "display": "flex",
                "height": 40,
                "justifyContent": "center",
                "marginBottom": 8,
                "marginLeft": 8,
                "marginRight": 8,
                "marginTop": 8,
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
                "position": "absolute",
                "right": 0,
                "width": 40,
              },
            ]
          }
        >
          <Text
            color="white"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="700"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textAlign": "center",
                },
              ]
            }
            textAlign="center"
          >
            27 MAR
          </Text>
        </View>
      </View>
      <View
        p={4}
        style={
          Array [
            Object {
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="xl"
            fontStyle="normal"
            fontWeight="bold"
            ml={-1}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "marginLeft": -4,
                },
              ]
            }
          >
            The Garden City
          </Text>
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <Text
            color="red.500"
            fontSize="sm"
            fontStyle="normal"
            fontWeight="500"
            ml={-0.5}
            mt={-1}
            style={
              Array [
                Object {
                  "color": "#ef4444",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "marginLeft": -2,
                  "marginTop": -4,
                },
              ]
            }
          >
            The Silicon Valley of India.
          </Text>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          lineHeight={6}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "lineHeight": 24,
              },
            ]
          }
        >
          Bengaluru (also called Bangalore) is the center of India's high-tech industry. The city is also known for its parks and nightlife.
        </Text>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          alignItems="center"
          flexDirection="row"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text />
            <View
              style={
                Array [
                  Object {},
                ]
              }
            />
            <Text
              color="gray.500"
              fontSize="md"
              fontStyle="normal"
              fontWeight="500"
              ml={1}
              style={
                Array [
                  Object {
                    "color": "#71717a",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "marginLeft": 4,
                  },
                ]
              }
            >
              6 mins ago
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "width": 16,
                },
              ]
            }
            width={4}
          />
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text />
            <View
              style={
                Array [
                  Object {},
                ]
              }
            />
            <Text
              color="gray.500"
              fontSize="md"
              fontStyle="normal"
              fontWeight="500"
              ml={1}
              style={
                Array [
                  Object {
                    "color": "#71717a",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "marginLeft": 4,
                  },
                ]
              }
            >
              39 comments
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box Composition Card 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      p={5}
      rounded="xl"
      style={
        Array [
          Object {
            "borderRadius": 8,
            "paddingBottom": 20,
            "paddingLeft": 20,
            "paddingRight": 20,
            "paddingTop": 20,
            "width": "100%",
          },
          Object {
            "elevation": 5,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 3.84,
          },
        ]
      }
      w="100%"
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          alignItems="center"
          bg="teal.500"
          borderColor="gray.800"
          borderRadius="full"
          fontSize="md"
          height="8"
          justifyContent="center"
          name="avatar"
          position="relative"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#14b8a6",
                "borderColor": "#27272a",
                "borderRadius": 9999,
                "fontSize": 16,
                "height": 32,
                "justifyContent": "center",
                "position": "relative",
                "width": 32,
              },
            ]
          }
          width="8"
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            borderRadius="full"
            maxWidth="100%"
            onError={[Function]}
            source={
              Object {
                "uri": "https://i.pinimg.com/originals/4d/72/97/4d7297dad94265c0acbc3b677d418935.jpg",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          height={6}
          style={
            Array [
              Object {
                "height": 24,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="blueGray.700"
            fontSize="2xl"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#334155",
                  "fontSize": 24,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            Dressing room
          </Text>
          <View
            height={3}
            style={
              Array [
                Object {
                  "height": 12,
                },
              ]
            }
          />
          <Text
            color="blueGray.500"
            fontSize="xs"
            fontStyle="normal"
            fontWeight="medium"
            style={
              Array [
                Object {
                  "color": "#64748b",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                },
              ]
            }
          >
            Design the new dressing room for the upcoming tour.
          </Text>
        </View>
        <View
          height={6}
          style={
            Array [
              Object {
                "height": 24,
              },
            ]
          }
        />
        <View
          alignItems="flex-end"
          flexDirection="row"
          flexShrink={1}
          justifyContent="space-between"
          style={
            Array [
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
                "flexShrink": 1,
                "justifyContent": "space-between",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <View
              alignItems="center"
              flexDirection="row"
              flexShrink={1}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text />
              <View
                style={
                  Array [
                    Object {
                      "width": 12,
                    },
                  ]
                }
                width={3}
              />
              <Text
                color="blueGray.500"
                flexShrink={1}
                fontSize="md"
                fontStyle="normal"
                fontWeight="medium"
                style={
                  Array [
                    Object {
                      "color": "#64748b",
                      "flexShrink": 1,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                    },
                  ]
                }
              >
                Task: KitchenSink
              </Text>
            </View>
            <View
              height={3}
              style={
                Array [
                  Object {
                    "height": 12,
                  },
                ]
              }
            />
            <View
              alignItems="center"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <Text />
              <View
                style={
                  Array [
                    Object {
                      "width": 12,
                    },
                  ]
                }
                width={3}
              />
              <Text
                color="blueGray.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight="medium"
                style={
                  Array [
                    Object {
                      "color": "#64748b",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "500",
                    },
                  ]
                }
              >
                Date: 10.04.2021
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        alignItems="center"
        flexDirection="row"
        position="absolute"
        right={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "position": "absolute",
              "right": 12,
              "top": 12,
            },
          ]
        }
        top={3}
      >
        <Text />
        <View
          style={
            Array [
              Object {
                "width": 8,
              },
            ]
          }
          width={2}
        />
        <RNSVGSvgView
          accessibilityRole="image"
          bbHeight={32}
          bbWidth={32}
          color={4281549141}
          focusable={false}
          name="more-horiz"
          size={8}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Array [
                Object {
                  "color": "#334155",
                  "height": 32,
                  "width": 32,
                },
              ],
              Object {
                "flex": 0,
                "height": 32,
                "width": 32,
              },
            ]
          }
          tintColor={4281549141}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={
                Array [
                  2,
                ]
              }
              strokeWidth="1.5"
            >
              <RNSVGPath
                d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                fill={null}
                propList={
                  Array [
                    "fill",
                    "strokeLinecap",
                  ]
                }
                strokeLinecap={1}
              />
              <RNSVGPath
                d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                fill={null}
                propList={
                  Array [
                    "fill",
                    "strokeLinecap",
                  ]
                }
                strokeLinecap={1}
              />
              <RNSVGCircle
                cx="12"
                cy="12"
                fill={null}
                propList={
                  Array [
                    "fill",
                    "strokeMiterlimit",
                  ]
                }
                r="11.25"
                strokeMiterlimit={10}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box Composition Shoes Card 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="column"
      overflow="hidden"
      rounded="xl"
      style={
        Array [
          Object {
            "borderRadius": 8,
            "flexDirection": "column",
            "overflow": "hidden",
            "width": "100%",
          },
          Object {
            "elevation": 5,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 3.84,
          },
        ]
      }
      w="100%"
    >
      <View
        height={32}
        style={
          Array [
            Object {
              "height": 128,
            },
          ]
        }
      >
        <Image
          accessibilityLabel="Shoes"
          alt="Shoes"
          height={32}
          maxWidth="100%"
          onError={[Function]}
          source={
            Object {
              "uri": "https://static.nike.com/a/images/f_auto/dpr_2.0/w_1328,c_limit/b56d1e9b-3861-4c89-995d-b8fb6240a762/nike-just-do-it.jpg",
            }
          }
          style={
            Array [
              Object {
                "height": 128,
                "maxWidth": "100%",
              },
            ]
          }
        />
      </View>
      <View
        minW={32}
        p={3}
        style={
          Array [
            Object {
              "minWidth": 128,
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
      >
        <Text
          color="red.400"
          fontSize="xs"
          fontStyle="normal"
          fontWeight="semibold"
          style={
            Array [
              Object {
                "color": "#f87171",
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "600",
              },
            ]
          }
        >
          Just In
        </Text>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            Jordan MA2
          </Text>
          <View
            height={1}
            style={
              Array [
                Object {
                  "height": 4,
                },
              ]
            }
          />
          <Text
            color="blueGray.600"
            fontSize="md"
            fontStyle="normal"
            fontWeight="medium"
            style={
              Array [
                Object {
                  "color": "#475569",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                },
              ]
            }
          >
            Older Kids' Shoe
          </Text>
          <View
            height={1}
            style={
              Array [
                Object {
                  "height": 4,
                },
              ]
            }
          />
          <Text
            color="blueGray.600"
            fontSize="md"
            fontStyle="normal"
            fontWeight="medium"
            style={
              Array [
                Object {
                  "color": "#475569",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                },
              ]
            }
          >
            2 colors
          </Text>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <Text
          color="blueGray.600"
          fontSize="md"
          fontStyle="normal"
          fontWeight="semibold"
          style={
            Array [
              Object {
                "color": "#475569",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "600",
              },
            ]
          }
        >
          $ 150
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box CompositionCard1 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx="auto"
      rounded="25"
      style={
        Array [
          Object {
            "borderRadius": 25,
            "marginLeft": "auto",
            "marginRight": "auto",
            "width": "100%",
          },
          Object {
            "elevation": 5,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 3.84,
          },
        ]
      }
      w="100%"
    >
      <Image
        accessibilityLabel="NativeBase Card"
        alt="NativeBase Card"
        h={56}
        maxWidth="100%"
        onError={[Function]}
        roundedTop="25"
        source={
          Object {
            "uri": "https://image.freepik.com/free-photo/clown-anemonefish-amphiprion-swimming-among-tentacles-its-anemone-home_211453-2.jpg",
          }
        }
        style={
          Array [
            Object {
              "borderTopLeftRadius": 25,
              "borderTopRightRadius": 25,
              "height": 224,
              "maxWidth": "100%",
            },
          ]
        }
      />
      <View
        p={4}
        style={
          Array [
            Object {
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
          ]
        }
      >
        <Text
          color="blueGray.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#334155",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          Clownfish
        </Text>
        <View
          height={3}
          style={
            Array [
              Object {
                "height": 12,
              },
            ]
          }
        />
        <Text
          color="blueGray.500"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#64748b",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Bright orange with three distinctive white bars, clown anemonefish are among the most recognizable at all reef-dwellers.
        </Text>
        <View
          height={3}
          style={
            Array [
              Object {
                "height": 12,
              },
            ]
          }
        />
        <View
          flexDirection="row"
          style={
            Array [
              Object {
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            alignItems="center"
            bg="transparent"
            borderRadius="lg"
            colorScheme="blue"
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            minH={0}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={0}
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 6,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "minHeight": 0,
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 0,
                },
              ]
            }
            variant="solid"
          >
            <View
              alignItems="center"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  color="blue.500"
                  fontSize="md"
                  fontStyle="normal"
                  fontWeight={600}
                  style={
                    Array [
                      Object {
                        "color": "#3b82f6",
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "600",
                      },
                    ]
                  }
                >
                  SHARE
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "width": 16,
                },
              ]
            }
            width={4}
          />
          <View
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            alignItems="center"
            bg="transparent"
            borderRadius="lg"
            colorScheme="blue"
            flexDirection="row"
            focusable={true}
            justifyContent="center"
            minH={0}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            p={0}
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderRadius": 6,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "minHeight": 0,
                  "paddingBottom": 0,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                  "paddingTop": 0,
                },
              ]
            }
            variant="solid"
          >
            <View
              alignItems="center"
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {},
                  ]
                }
              >
                <Text
                  color="blue.500"
                  fontSize="md"
                  fontStyle="normal"
                  fontWeight={600}
                  style={
                    Array [
                      Object {
                        "color": "#3b82f6",
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "600",
                      },
                    ]
                  }
                >
                  LEARN MORE
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box CompositionCard2 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx="auto"
      rounded="25"
      style={
        Array [
          Object {
            "borderRadius": 25,
            "marginLeft": "auto",
            "marginRight": "auto",
            "width": "100%",
          },
          Object {
            "elevation": 5,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 3.84,
          },
        ]
      }
      w="100%"
    >
      <Image
        accessibilityLabel="NativeBase Card"
        alt="NativeBase Card"
        h={64}
        maxWidth="100%"
        onError={[Function]}
        roundedTop="25"
        source={
          Object {
            "uri": "https://image.freepik.com/free-photo/silhouette-person-standing-top-hill-beautiful-colorful-sky-morning_181624-24501.jpg",
          }
        }
        style={
          Array [
            Object {
              "borderTopLeftRadius": 25,
              "borderTopRightRadius": 25,
              "height": 256,
              "maxWidth": "100%",
            },
          ]
        }
      />
      <View
        p={4}
        style={
          Array [
            Object {
              "paddingBottom": 16,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 16,
            },
          ]
        }
      >
        <Text
          color="blueGray.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#334155",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          Adventure
        </Text>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <Text
          color="blueGray.500"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#64748b",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          An exciting experience that is typically bold, sometimes risky, undertaking...
          <Text
            color="blueGray.500"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#64748b",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            more
          </Text>
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box CompositionCard3 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx="auto"
      rounded="25"
      style={
        Array [
          Object {
            "borderRadius": 25,
            "marginLeft": "auto",
            "marginRight": "auto",
            "width": "100%",
          },
          Object {
            "elevation": 5,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 3.84,
          },
        ]
      }
      w="100%"
    >
      <Image
        accessibilityLabel="NativeBase Card"
        alt="NativeBase Card"
        h={64}
        maxWidth="100%"
        onError={[Function]}
        rounded="25"
        source={
          Object {
            "uri": "https://image.freepik.com/free-photo/pathway-middle-green-leafed-trees-with-sun-shining-through-branches_181624-4539.jpg",
          }
        }
        style={
          Array [
            Object {
              "borderRadius": 25,
              "height": 256,
              "maxWidth": "100%",
              "width": "100%",
            },
          ]
        }
        w="100%"
      />
      <View
        alignItems="center"
        display="flex"
        height="100%"
        justifyContent="center"
        position="absolute"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "height": "100%",
              "justifyContent": "center",
              "position": "absolute",
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <Text />
      </View>
      <View
        alignItems="center"
        bottom={4}
        flexDirection="row"
        justifyContent="space-between"
        position="absolute"
        px={4}
        style={
          Array [
            Object {
              "alignItems": "center",
              "bottom": 16,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingLeft": 16,
              "paddingRight": 16,
              "position": "absolute",
              "width": 256,
            },
          ]
        }
        w={64}
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="gray.200"
            fontSize="xl"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#e4e4e7",
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            Sacred Grove
          </Text>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <Text
            color="gray.200"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#e4e4e7",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Meghalaya
          </Text>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <Text />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box LinearGradient Box 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <ViewManagerAdapter_ExpoLinearGradient
      proxiedProperties={
        Object {
          "colors": Array [
            4286436348,
            4284162486,
          ],
          "endPoint": Array [
            1,
            0,
          ],
          "locations": undefined,
          "p": 12,
          "rounded": "lg",
          "startPoint": Array [
            0,
            0,
          ],
        }
      }
      style={
        Array [
          Object {
            "borderRadius": 6,
            "paddingBottom": 48,
            "paddingLeft": 48,
            "paddingRight": 48,
            "paddingTop": 48,
          },
        ]
      }
    >
      <Text
        color="white"
        fontSize="md"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        This is a Box with Linear Gradient
      </Text>
    </ViewManagerAdapter_ExpoLinearGradient>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Box With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      bg="primary.400"
      p={4}
      style={
        Array [
          Object {
            "backgroundColor": "#22d3ee",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
            "width": "90%",
          },
          Object {
            "elevation": 3,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 1,
              "width": 0,
            },
            "shadowOpacity": 0.22,
            "shadowRadius": 2.22,
          },
        ]
      }
      width="90%"
    >
      <Text
        color="white"
        fontSize="md"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        This is a Box
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Default Breadcrumb
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#ef4444",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Collapsible 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb Collapsible
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "marginTop": 12,
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                direction="row"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#262626",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "marginRight": 4,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "material",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#404040",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Home
              </Text>
            </View>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          setCollapsed={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
            }
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "color": "#262626",
                  "height": 16,
                  "width": 16,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={32.055}
            vbWidth={32.055}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGPath
                    d="M3.968,12.061C1.775,12.061,0,13.835,0,16.027c0,2.192,1.773,3.967,3.968,3.967c2.189,0,3.966-1.772,3.966-3.967   C7.934,13.835,6.157,12.061,3.968,12.061z M16.233,12.061c-2.188,0-3.968,1.773-3.968,3.965c0,2.192,1.778,3.967,3.968,3.967   s3.97-1.772,3.97-3.967C20.201,13.835,18.423,12.061,16.233,12.061z M28.09,12.061c-2.192,0-3.969,1.774-3.969,3.967   c0,2.19,1.774,3.965,3.969,3.965c2.188,0,3.965-1.772,3.965-3.965S30.278,12.061,28.09,12.061z"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                direction="row"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#ef4444",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "marginRight": 4,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "anticon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#ef4444",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Github (This is currently active)
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "marginTop": 12,
        }
      }
    >
      <View
        _focusVisible={
          Object {
            "_text": Object {
              "color": "gray.700",
            },
            "bg": "rgba(228, 228, 231, 0.5)",
            "borderColor": "gray.700",
            "style": Object {},
          }
        }
        _hover={
          Object {
            "_text": Object {
              "color": "gray.700",
            },
            "bg": "rgba(228, 228, 231, 0.5)",
            "borderColor": "gray.700",
          }
        }
        _pressed={
          Object {
            "_text": Object {
              "color": "gray.800",
            },
            "bg": "rgba(212, 212, 216, 0.5)",
            "borderColor": "gray.700",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="gray"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#52525b",
            "borderRadius": 6,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#52525b",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                  "textDecorationLine": undefined,
                }
              }
            >
              Expand
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb ComponentSeparator 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb with Custom Separator
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "none",
                }
              }
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          allowFontScaling={false}
          orientation="vertical"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#262626",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "marginLeft": 4,
                "marginRight": 4,
                "width": 20,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "none",
                }
              }
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          allowFontScaling={false}
          orientation="vertical"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#262626",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "marginLeft": 4,
                "marginRight": 4,
                "width": 20,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "none",
                }
              }
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb Composition
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                direction="row"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#262626",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "marginRight": 4,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "material",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#404040",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Home
              </Text>
            </View>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              allowFontScaling={false}
              direction="row"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#262626",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontSize": 16,
                    "fontWeight": "700",
                    "height": 16,
                    "lineHeight": 16,
                    "marginRight": 4,
                    "width": 16,
                  },
                  Object {
                    "fontFamily": "material-community",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              wrap="wrap"
            >
              󰈙
            </Text>
            <Text
              direction="row"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text />
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#404040",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "height": "auto",
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Github (This is currently active)
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Separators 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb with String Separator
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        bold={true}
        italic={true}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          isCurrentPage={true}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            isCurrentPage={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "none",
                }
              }
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          -
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "none",
                }
              }
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#404040",
              "fontFamily": undefined,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          -
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#404040",
                  "fontFamily": undefined,
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "none",
                }
              }
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 2.5,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Default Breadcrumb
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#ef4444",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              direction="row"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Collapsible 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 2.5,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb Collapsible
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "marginTop": 12,
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                direction="row"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#262626",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "marginRight": 4,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "material",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Home
              </Text>
            </View>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          setCollapsed={[Function]}
          style={
            Object {
              "backgroundColor": "transparent",
            }
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={16}
            bbWidth={16}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Object {
                  "color": "#262626",
                  "height": 16,
                  "width": 16,
                },
                Object {
                  "flex": 0,
                  "height": 16,
                  "width": 16,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={32.055}
            vbWidth={32.055}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGPath
                    d="M3.968,12.061C1.775,12.061,0,13.835,0,16.027c0,2.192,1.773,3.967,3.968,3.967c2.189,0,3.966-1.772,3.966-3.967   C7.934,13.835,6.157,12.061,3.968,12.061z M16.233,12.061c-2.188,0-3.968,1.773-3.968,3.965c0,2.192,1.778,3.967,3.968,3.967   s3.97-1.772,3.97-3.967C20.201,13.835,18.423,12.061,16.233,12.061z M28.09,12.061c-2.192,0-3.969,1.774-3.969,3.967   c0,2.19,1.774,3.965,3.969,3.965c2.188,0,3.965-1.772,3.965-3.965S30.278,12.061,28.09,12.061z"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                direction="row"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#ef4444",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "marginRight": 4,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "anticon",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#ef4444",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Github (This is currently active)
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "marginTop": 12,
        }
      }
    >
      <View
        _focusVisible={
          Object {
            "_text": Object {
              "color": "gray.700",
            },
            "bg": "rgba(228, 228, 231, 0.5)",
            "borderColor": "gray.700",
            "style": Object {},
          }
        }
        _hover={
          Object {
            "_text": Object {
              "color": "gray.700",
            },
            "bg": "rgba(228, 228, 231, 0.5)",
            "borderColor": "gray.700",
          }
        }
        _pressed={
          Object {
            "_text": Object {
              "color": "gray.800",
            },
            "bg": "rgba(212, 212, 216, 0.5)",
            "borderColor": "gray.700",
          }
        }
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        colorScheme="gray"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderColor": "#52525b",
            "borderRadius": 4,
            "borderWidth": 0,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#52525b",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Expand
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb ComponentSeparator 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 2.5,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb with Custom Separator
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          allowFontScaling={false}
          orientation="vertical"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#262626",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "marginLeft": 4,
                "marginRight": 4,
                "width": 20,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          allowFontScaling={false}
          orientation="vertical"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Object {
                "color": "#262626",
                "fontSize": 20,
                "height": 20,
                "lineHeight": 20,
                "marginLeft": 4,
                "marginRight": 4,
                "width": 20,
              },
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 2.5,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb Composition
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text
                allowFontScaling={false}
                direction="row"
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Object {
                      "color": "#262626",
                      "display": "flex",
                      "flexDirection": "row",
                      "fontSize": 16,
                      "height": 16,
                      "lineHeight": 16,
                      "marginRight": 4,
                      "width": 16,
                    },
                    Object {
                      "fontFamily": "material",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
                wrap="wrap"
              >
                
              </Text>
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Home
              </Text>
            </View>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              allowFontScaling={false}
              direction="row"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#262626",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontSize": 16,
                    "fontWeight": "700",
                    "height": 16,
                    "lineHeight": 16,
                    "marginRight": 4,
                    "width": 16,
                  },
                  Object {
                    "fontFamily": "material-community",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
              wrap="wrap"
            >
              󰈙
            </Text>
            <Text
              direction="row"
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "display": "flex",
                  "flexDirection": "row",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": "auto",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                  "width": "auto",
                }
              }
              wrap="wrap"
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          /
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <Text />
              <View
                style={Object {}}
              />
              <Text
                direction="row"
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "display": "flex",
                    "flexDirection": "row",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                    "height": "auto",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                    "width": "auto",
                  }
                }
                wrap="wrap"
              >
                Github (This is currently active)
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Breadcrumb Separators 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={Object {}}
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#404040",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 2.5,
            "marginBottom": 16,
            "textDecorationLine": undefined,
          }
        }
      >
        Breadcrumb with String Separator
      </Text>
      <View
        accessibilityLabel="Breadcrumb"
        bold={true}
        italic={true}
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "height": "auto",
            "width": "auto",
          }
        }
        wrap="wrap"
      >
        <View
          isCurrentPage={true}
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            isCurrentPage={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Home (This is currently active)
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          -
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Docs
            </Text>
          </View>
        </View>
        <Text
          orientation="vertical"
          style={
            Object {
              "backgroundColor": undefined,
              "color": "#1f2937",
              "fontFamily": undefined,
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 21,
              "marginLeft": 8,
              "marginRight": 8,
              "textDecorationLine": undefined,
            }
          }
        >
          -
        </Text>
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Github
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            PRIMARY
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      border="2px"
      borderColor="green.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      height="48px"
      justifyContent="center"
      mx="auto"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderColor": "#22c55e",
            "borderRadius": 6,
            "borderStyle": "solid",
            "borderWidth": 2,
            "flexDirection": "row",
            "height": 48,
            "justifyContent": "center",
            "marginLeft": "auto",
            "marginRight": "auto",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
            "width": 200,
          },
        ]
      }
      variant="solid"
      width="200px"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            BUTTON
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Icons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="column"
      style={
        Array [
          Object {
            "flexDirection": "column",
          },
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            fontSize="20px"
            fontWeight={600}
            lineHeight="20px"
            style={
              Array [
                Object {
                  "color": "lightText",
                  "fontSize": 5,
                },
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 20,
                    "fontWeight": "600",
                    "height": 20,
                    "lineHeight": 20,
                    "width": 20,
                  },
                ],
                Object {
                  "fontFamily": "material-community",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            󰇮
          </Text>
          <View
            style={
              Array [
                Object {
                  "width": 8,
                },
              ]
            }
            width={2}
          />
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Email
            </Text>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="transparent"
        border="1px solid"
        borderColor="primary.300"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#67e8f9",
              "borderRadius": 6,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="primary.500"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#06b6d4",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Call us
            </Text>
          </View>
          <View
            style={
              Array [
                Object {
                  "width": 8,
                },
              ]
            }
            width={2}
          />
          <Text
            allowFontScaling={false}
            fontSize="16px"
            fontWeight={600}
            lineHeight="16px"
            style={
              Array [
                Object {
                  "color": "primary.500",
                  "fontSize": 4,
                },
                Array [
                  Object {
                    "color": "#06b6d4",
                    "fontSize": 16,
                    "fontWeight": "600",
                    "height": 16,
                    "lineHeight": 16,
                    "width": 16,
                  },
                ],
                Object {
                  "fontFamily": "ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Loading 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      flexDirection="column"
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "column",
          },
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        isLoading={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        opacity={0.5}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 0.5,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#FFFFFF"
            hidesWhenStopped={true}
            size="small"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "width": 8,
                },
              ]
            }
            width={2}
          />
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Button
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        isLoading={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        opacity={0.5}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 0.5,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#FFFFFF"
            hidesWhenStopped={true}
            size="small"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "width": 8,
                },
              ]
            }
            width={2}
          />
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Submitting
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="transparent"
        border="1px solid"
        borderColor="primary.300"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        isLoading={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        opacity={0.5}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#67e8f9",
              "borderRadius": 6,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 0.5,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <ActivityIndicator
            accessibilityLabel="loading"
            accessible={true}
            animating={true}
            color="#06b6d4"
            hidesWhenStopped={true}
            size="small"
            style={
              Array [
                Object {
                  "color": "#06b6d4",
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "width": 8,
                },
              ]
            }
            width={2}
          />
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="primary.500"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#06b6d4",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Submitting
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      flexDirection="column"
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "column",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={2}
          py={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 4,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 4,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="xs"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={1}
        style={
          Array [
            Object {
              "height": 4,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={1}
        style={
          Array [
            Object {
              "height": 4,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={1}
        style={
          Array [
            Object {
              "height": 4,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={6}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 24,
                "paddingRight": 24,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="lg"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 18,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      px={2}
      style={
        Array [
          Object {
            "paddingLeft": 8,
            "paddingRight": 8,
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Solid
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="column"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "column",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                PRIMARY
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="secondary.500"
          borderRadius="lg"
          colorScheme="secondary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ec4899",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                SECONDARY
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="muted.300"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          isDisabled={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          opacity={0.5}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#d4d4d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "opacity": 0.5,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="darkText"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                DISABLED
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Outline
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="column"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "column",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          border="1px solid"
          borderColor="primary.300"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#67e8f9",
                "borderRadius": 6,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="primary.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#06b6d4",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                PRIMARY
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          border="1px solid"
          borderColor="secondary.300"
          borderRadius="lg"
          colorScheme="secondary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#f9a8d4",
                "borderRadius": 6,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="secondary.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#ec4899",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                SECONDARY
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          border="1px solid"
          borderColor="muted.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          isDisabled={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          opacity={0.5}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#737373",
                "borderRadius": 6,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "opacity": 0.5,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#737373",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                DISABLED
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Link
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="column"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "column",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="primary.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#06b6d4",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textDecorationLine": "underline",
                    },
                  ]
                }
                textDecorationLine="underline"
              >
                PRIMARY
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="secondary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="secondary.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#ec4899",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textDecorationLine": "underline",
                    },
                  ]
                }
                textDecorationLine="underline"
              >
                SECONDARY
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          isDisabled={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          opacity={0.5}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "opacity": 0.5,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#737373",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textDecorationLine": "underline",
                    },
                  ]
                }
                textDecorationLine="underline"
              >
                DISABLED
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Ghost
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="column"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "column",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="primary.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#06b6d4",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                PRIMARY
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="secondary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="secondary.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#ec4899",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                SECONDARY
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          isDisabled={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          opacity={0.5}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "opacity": 0.5,
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#737373",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                DISABLED
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Unstyled
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="column"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "column",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Unstyled
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Button WithRef 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={2}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 8,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 8,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            BUTTON
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      mx="auto"
      style={
        Array [
          Object {
            "flexDirection": "row",
            "marginLeft": "auto",
            "marginRight": "auto",
          },
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="teal.500"
        borderRadius="lg"
        colorScheme="teal"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#14b8a6",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Save
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="danger.500"
        borderRadius="lg"
        colorScheme="danger"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f43f5e",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      flexDirection="row"
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={2}
          py={1}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 4,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 4,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="xs"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 4,
            },
          ]
        }
        width={1}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 8,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 4,
            },
          ]
        }
        width={1}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 4,
            },
          ]
        }
        width={1}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={6}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 24,
                "paddingRight": 24,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="lg"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 18,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                BUTTON
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      px={2}
      style={
        Array [
          Object {
            "paddingLeft": 8,
            "paddingRight": 8,
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Solid
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="teal.500"
          borderRadius="lg"
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#14b8a6",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 8,
              },
            ]
          }
          width={2}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="danger.500"
          borderRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f43f5e",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Outline
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          border="1px solid"
          borderColor="teal.300"
          borderRadius="lg"
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#5eead4",
                "borderRadius": 6,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="teal.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#14b8a6",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 8,
              },
            ]
          }
          width={2}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          border="1px solid"
          borderColor="danger.300"
          borderRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#fda4af",
                "borderRadius": 6,
                "borderStyle": "solid",
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="danger.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#f43f5e",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Link
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="teal.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#14b8a6",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textDecorationLine": "underline",
                    },
                  ]
                }
                textDecorationLine="underline"
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 8,
              },
            ]
          }
          width={2}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="danger.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#f43f5e",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textDecorationLine": "underline",
                    },
                  ]
                }
                textDecorationLine="underline"
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Ghost
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="teal.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#14b8a6",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 8,
              },
            ]
          }
          width={2}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="danger.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#f43f5e",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Unstyled
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          borderRadius="lg"
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 8,
              },
            ]
          }
          width={2}
        />
        <View
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          borderRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup direction 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      px={2}
      style={
        Array [
          Object {
            "paddingLeft": 8,
            "paddingRight": 8,
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Row
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="teal.500"
          borderRadius="lg"
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#14b8a6",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 8,
              },
            ]
          }
          width={2}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="danger.500"
          borderRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f43f5e",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Column
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="column"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "column",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="teal.500"
          borderRadius="lg"
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#14b8a6",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="danger.500"
          borderRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f43f5e",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ButtonGroup isAttached 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      px={2}
      style={
        Array [
          Object {
            "paddingLeft": 8,
            "paddingRight": 8,
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Solid
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="teal.500"
          borderLeftRadius="lg"
          borderRadius={0}
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#14b8a6",
                "borderBottomLeftRadius": 6,
                "borderRadius": 0,
                "borderTopLeftRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 0,
              },
            ]
          }
          width={0}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="danger.500"
          borderLeftWidth={0}
          borderRadius={0}
          borderRightRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f43f5e",
                "borderBottomRightRadius": 6,
                "borderLeftWidth": 0,
                "borderRadius": 0,
                "borderTopRightRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Outline
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          border="1px solid"
          borderColor="teal.300"
          borderLeftRadius="lg"
          borderRadius={0}
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomLeftRadius": 6,
                "borderColor": "#5eead4",
                "borderRadius": 0,
                "borderStyle": "solid",
                "borderTopLeftRadius": 6,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="teal.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#14b8a6",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 0,
              },
            ]
          }
          width={0}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          border="1px solid"
          borderColor="danger.300"
          borderLeftWidth={0}
          borderRadius={0}
          borderRightRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomRightRadius": 6,
                "borderColor": "#fda4af",
                "borderLeftWidth": 0,
                "borderRadius": 0,
                "borderStyle": "solid",
                "borderTopRightRadius": 6,
                "borderWidth": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="danger.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#f43f5e",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Link
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderLeftRadius="lg"
          borderRadius={0}
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomLeftRadius": 6,
                "borderRadius": 0,
                "borderTopLeftRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="teal.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#14b8a6",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textDecorationLine": "underline",
                    },
                  ]
                }
                textDecorationLine="underline"
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 0,
              },
            ]
          }
          width={0}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderLeftWidth={0}
          borderRadius={0}
          borderRightRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomRightRadius": 6,
                "borderLeftWidth": 0,
                "borderRadius": 0,
                "borderTopRightRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="danger.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#f43f5e",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                      "textDecorationLine": "underline",
                    },
                  ]
                }
                textDecorationLine="underline"
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Ghost
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderLeftRadius="lg"
          borderRadius={0}
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomLeftRadius": 6,
                "borderRadius": 0,
                "borderTopLeftRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="teal.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#14b8a6",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 0,
              },
            ]
          }
          width={0}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="transparent"
          borderLeftWidth={0}
          borderRadius={0}
          borderRightRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomRightRadius": 6,
                "borderLeftWidth": 0,
                "borderRadius": 0,
                "borderTopRightRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="danger.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#f43f5e",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
              "textAlign": "left",
            },
          ]
        }
        textAlign="left"
      >
        Unstyled
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        mx="auto"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          borderLeftRadius="lg"
          borderRadius={0}
          colorScheme="teal"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderBottomLeftRadius": 6,
                "borderRadius": 0,
                "borderTopLeftRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Save
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 0,
              },
            ]
          }
          width={0}
        />
        <View
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          borderLeftWidth={0}
          borderRadius={0}
          borderRightRadius="lg"
          colorScheme="danger"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderBottomRightRadius": 6,
                "borderLeftWidth": 0,
                "borderRadius": 0,
                "borderTopRightRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Cancel
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Card Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      bg="gray.100"
      borderRadius="md"
      overflow="hidden"
      p={6}
      padding={4}
      py={8}
      style={
        Array [
          Object {
            "backgroundColor": "#f4f4f5",
            "borderRadius": 4,
            "overflow": "hidden",
            "paddingBottom": 32,
            "paddingLeft": 24,
            "paddingRight": 24,
            "paddingTop": 32,
            "width": 256,
          },
          Object {
            "elevation": 5,
            "shadowColor": "#000000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 3.84,
          },
        ]
      }
      width={64}
    >
      <View
        alignItems="center"
        style={
          Array [
            Object {
              "alignItems": "center",
            },
          ]
        }
      >
        <View
          alignItems="center"
          bg="teal.600"
          borderColor="gray.800"
          borderRadius="full"
          fontSize="3xl"
          height="32"
          justifyContent="center"
          name="avatar"
          position="relative"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0d9488",
                "borderColor": "#27272a",
                "borderRadius": 9999,
                "fontSize": 30,
                "height": 128,
                "justifyContent": "center",
                "position": "relative",
                "width": 128,
              },
            ]
          }
          width="32"
        >
          <Image
            accessibilityLabel="--"
            alt="--"
            borderRadius="full"
            maxWidth="100%"
            onError={[Function]}
            source={
              Object {
                "uri": "https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500",
              }
            }
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "maxWidth": "100%",
                },
                undefined,
                Object {
                  "height": "100%",
                  "width": "100%",
                },
              ]
            }
          />
        </View>
        <View
          height={5}
          style={
            Array [
              Object {
                "height": 20,
              },
            ]
          }
        />
        <Text
          color="blueGray.700"
          fontSize="2xl"
          fontStyle="normal"
          fontWeight={500}
          mx="auto"
          style={
            Array [
              Object {
                "color": "#334155",
                "fontSize": 24,
                "fontStyle": "normal",
                "fontWeight": "500",
                "marginLeft": "auto",
                "marginRight": "auto",
              },
            ]
          }
        >
          About Me
        </Text>
        <View
          height={5}
          style={
            Array [
              Object {
                "height": 20,
              },
            ]
          }
        />
        <Text
          color="blueGray.500"
          fontSize={12}
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#64748b",
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "textAlign": "center",
              },
            ]
          }
          textAlign="center"
        >
          Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      bg="primary.400"
      display="flex"
      height={200}
      justifyContent="center"
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "display": "flex",
            "height": 200,
            "justifyContent": "center",
            "width": 200,
          },
        ]
      }
      width={200}
    >
      <Text
        color="white"
        fontSize="md"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        This is the Center
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center SquareCircle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        alignItems="center"
        bg="secondary.400"
        display="flex"
        justifyContent="center"
        rounded="full"
        size={98}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f472b6",
              "borderRadius": 9999,
              "display": "flex",
              "height": 98,
              "justifyContent": "center",
              "width": 98,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 12,
            },
          ]
        }
        width={3}
      />
      <View
        alignItems="center"
        bg="primary.400"
        display="flex"
        height={24}
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#22d3ee",
              "display": "flex",
              "height": 96,
              "justifyContent": "center",
              "width": 96,
            },
          ]
        }
        width={24}
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="white"
            fontSize="lg"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            20
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Center WithIcons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        alignItems="center"
        bg="primary.400"
        display="flex"
        h="40px"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#22d3ee",
              "display": "flex",
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
        w="40px"
      >
        <Text
          allowFontScaling={false}
          fontSize="24px"
          lineHeight="24px"
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 24,
                  "height": 24,
                  "lineHeight": 24,
                  "width": 24,
                },
              ],
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 4,
            },
          ]
        }
        width={1}
      />
      <View
        alignItems="center"
        bg="secondary.400"
        display="flex"
        h="40px"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f472b6",
              "display": "flex",
              "height": 40,
              "justifyContent": "center",
              "width": 40,
            },
          ]
        }
        w="40px"
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="white"
            fontSize="lg"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            20
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        accessibilityLabel="This is a dummy checkbox"
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="primary"
        defaultIsChecked={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="test"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              accessibilityLabel="This is a dummy checkbox"
              alignItems="center"
              bg="muted.50"
              borderColor="muted.300"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="primary"
              defaultIsChecked={false}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="test"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 0,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 24,
            },
          ]
        }
        width={6}
      />
      <View
        accessibilityLabel="This is a dummy checkbox"
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="primary"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="test"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              accessibilityLabel="This is a dummy checkbox"
              alignItems="center"
              bg="primary.600"
              borderColor="primary.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="primary"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderColor": "#0891b2",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="test"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 1,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Checkbox Group 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      display="flex"
      justifyContent="space-between"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
        ]
      }
    >
      <View
        alignItems="baseline"
        flexDirection="row"
        mb={3}
        style={
          Array [
            Object {
              "alignItems": "baseline",
              "flexDirection": "row",
              "marginBottom": 12,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          mt={3}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
                "marginTop": 12,
              },
            ]
          }
        >
          CheckboxGroup 
        </Text>
      </View>
      <View
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        defaultValue="Item 3"
        onChange={[Function]}
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
      >
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          colorScheme="green"
          defaultIsChecked={false}
          focusable={true}
          isDisabled={false}
          isReadOnly={false}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          readOnly={false}
          state={
            Object {
              "addValue": [Function],
              "isDisabled": false,
              "isReadOnly": false,
              "isSelected": [Function],
              "removeValue": [Function],
              "setValue": [Function],
              "toggleValue": [Function],
              "value": Array [
                "Item 1",
                "Item 3",
              ],
            }
          }
          style={
            Array [
              Object {},
            ]
          }
          value="Item 1"
        >
          <View
            alignItems="center"
            borderRadius="full"
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                _focus={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(187, 247, 208, 0.5)",
                    },
                  }
                }
                _hover={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(229, 229, 229, 0.3)",
                    },
                  }
                }
                alignItems="center"
                bg="green.600"
                borderColor="green.600"
                borderRadius="sm"
                borderWidth={2}
                colorScheme="green"
                defaultIsChecked={false}
                display="flex"
                justifyContent="center"
                state={
                  Object {
                    "addValue": [Function],
                    "isDisabled": false,
                    "isReadOnly": false,
                    "isSelected": [Function],
                    "removeValue": [Function],
                    "setValue": [Function],
                    "toggleValue": [Function],
                    "value": Array [
                      "Item 1",
                      "Item 3",
                    ],
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#16a34a",
                      "borderColor": "#16a34a",
                      "borderRadius": 2,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
                value="Item 1"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  name="check"
                  size={4}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "opacity": 1,
                          "width": 16,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Item 1
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="green"
          defaultIsChecked={false}
          focusable={true}
          isDisabled={false}
          isReadOnly={false}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          readOnly={false}
          state={
            Object {
              "addValue": [Function],
              "isDisabled": false,
              "isReadOnly": false,
              "isSelected": [Function],
              "removeValue": [Function],
              "setValue": [Function],
              "toggleValue": [Function],
              "value": Array [
                "Item 1",
                "Item 3",
              ],
            }
          }
          style={
            Array [
              Object {},
            ]
          }
          value="Item 2"
        >
          <View
            alignItems="center"
            borderRadius="full"
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                _focus={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(187, 247, 208, 0.5)",
                    },
                  }
                }
                _hover={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(229, 229, 229, 0.3)",
                    },
                  }
                }
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="sm"
                borderWidth={2}
                colorScheme="green"
                defaultIsChecked={false}
                display="flex"
                justifyContent="center"
                state={
                  Object {
                    "addValue": [Function],
                    "isDisabled": false,
                    "isReadOnly": false,
                    "isSelected": [Function],
                    "removeValue": [Function],
                    "setValue": [Function],
                    "toggleValue": [Function],
                    "value": Array [
                      "Item 1",
                      "Item 3",
                    ],
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 2,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
                value="Item 2"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  name="check"
                  size={4}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "opacity": 0,
                          "width": 16,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Item 2
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          colorScheme="green"
          defaultIsChecked={false}
          focusable={true}
          isDisabled={false}
          isReadOnly={false}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          readOnly={false}
          state={
            Object {
              "addValue": [Function],
              "isDisabled": false,
              "isReadOnly": false,
              "isSelected": [Function],
              "removeValue": [Function],
              "setValue": [Function],
              "toggleValue": [Function],
              "value": Array [
                "Item 1",
                "Item 3",
              ],
            }
          }
          style={
            Array [
              Object {},
            ]
          }
          value="Item 3"
        >
          <View
            alignItems="center"
            borderRadius="full"
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                _focus={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(187, 247, 208, 0.5)",
                    },
                  }
                }
                _hover={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(229, 229, 229, 0.3)",
                    },
                  }
                }
                alignItems="center"
                bg="green.600"
                borderColor="green.600"
                borderRadius="sm"
                borderWidth={2}
                colorScheme="green"
                defaultIsChecked={false}
                display="flex"
                justifyContent="center"
                state={
                  Object {
                    "addValue": [Function],
                    "isDisabled": false,
                    "isReadOnly": false,
                    "isSelected": [Function],
                    "removeValue": [Function],
                    "setValue": [Function],
                    "toggleValue": [Function],
                    "value": Array [
                      "Item 1",
                      "Item 3",
                    ],
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#16a34a",
                      "borderColor": "#16a34a",
                      "borderRadius": 2,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
                value="Item 3"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  name="check"
                  size={4}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "opacity": 1,
                          "width": 16,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Item 3
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="checkbox"
          accessibilityState={
            Object {
              "checked": "mixed",
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="orange"
          defaultIsChecked={false}
          focusable={true}
          isDisabled={false}
          isIndeterminate={true}
          isReadOnly={false}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          readOnly={false}
          state={
            Object {
              "addValue": [Function],
              "isDisabled": false,
              "isReadOnly": false,
              "isSelected": [Function],
              "removeValue": [Function],
              "setValue": [Function],
              "toggleValue": [Function],
              "value": Array [
                "Item 1",
                "Item 3",
              ],
            }
          }
          style={
            Array [
              Object {},
            ]
          }
          value="Indeterminate Item"
        >
          <View
            alignItems="center"
            borderRadius="full"
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                _focus={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(254, 215, 170, 0.5)",
                    },
                  }
                }
                _hover={
                  Object {
                    "_interactionBox": Object {
                      "bg": "rgba(229, 229, 229, 0.3)",
                    },
                  }
                }
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="sm"
                borderWidth={2}
                colorScheme="orange"
                defaultIsChecked={false}
                display="flex"
                isIndeterminate={true}
                justifyContent="center"
                state={
                  Object {
                    "addValue": [Function],
                    "isDisabled": false,
                    "isReadOnly": false,
                    "isSelected": [Function],
                    "removeValue": [Function],
                    "setValue": [Function],
                    "toggleValue": [Function],
                    "value": Array [
                      "Item 1",
                      "Item 3",
                    ],
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 2,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
                value="Indeterminate Item"
              >
                <RNSVGSvgView
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4294638330}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  name="check"
                  size={4}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "opacity": 0,
                          "width": 16,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4294638330}
                  vbHeight={14}
                  vbWidth={14}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGGroup
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGPath
                          d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Indeterminate Item
            </Text>
          </View>
        </View>
      </View>
      <View
        mt={3}
        style={
          Array [
            Object {
              "marginTop": 12,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Selected Values: 
          </Text>
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            [Item 1, Item 3]
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Controlled checkbox 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      alignItems="flex-start"
      onChange={[Function]}
      style={
        Array [
          Object {
            "alignItems": "flex-start",
          },
        ]
      }
      value={Array []}
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="primary"
        defaultIsChecked={false}
        focusable={true}
        isDisabled={false}
        isReadOnly={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        readOnly={false}
        state={
          Object {
            "addValue": [Function],
            "isDisabled": false,
            "isReadOnly": false,
            "isSelected": [Function],
            "removeValue": [Function],
            "setValue": [Function],
            "toggleValue": [Function],
            "value": Array [],
          }
        }
        style={
          Array [
            Object {},
          ]
        }
        value="one"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          my={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="muted.50"
              borderColor="muted.300"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="primary"
              defaultIsChecked={false}
              display="flex"
              justifyContent="center"
              state={
                Object {
                  "addValue": [Function],
                  "isDisabled": false,
                  "isReadOnly": false,
                  "isSelected": [Function],
                  "removeValue": [Function],
                  "setValue": [Function],
                  "toggleValue": [Function],
                  "value": Array [],
                }
              }
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="one"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 0,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            One
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="primary"
        defaultIsChecked={false}
        focusable={true}
        isDisabled={false}
        isReadOnly={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        readOnly={false}
        state={
          Object {
            "addValue": [Function],
            "isDisabled": false,
            "isReadOnly": false,
            "isSelected": [Function],
            "removeValue": [Function],
            "setValue": [Function],
            "toggleValue": [Function],
            "value": Array [],
          }
        }
        style={
          Array [
            Object {},
          ]
        }
        value="two"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="muted.50"
              borderColor="muted.300"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="primary"
              defaultIsChecked={false}
              display="flex"
              justifyContent="center"
              state={
                Object {
                  "addValue": [Function],
                  "isDisabled": false,
                  "isReadOnly": false,
                  "isSelected": [Function],
                  "removeValue": [Function],
                  "setValue": [Function],
                  "toggleValue": [Function],
                  "value": Array [],
                }
              }
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="two"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 0,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Two
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Custom Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="flex-start"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
          },
        ]
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="danger"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="danger"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 205, 211, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="danger.600"
              borderColor="danger.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="danger"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#e11d48",
                    "borderColor": "#e11d48",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="danger"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 1,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Danger
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="info"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="info"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(186, 230, 253, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="info.600"
              borderColor="info.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="info"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0284c7",
                    "borderColor": "#0284c7",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="info"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 1,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Info
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="orange"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="orange"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 215, 170, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="orange.600"
              borderColor="orange.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="orange"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ea580c",
                    "borderColor": "#ea580c",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="orange"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 1,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Orange
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="purple"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="purple"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(233, 213, 255, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="purple.600"
              borderColor="purple.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="purple"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#9333ea",
                    "borderColor": "#9333ea",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="purple"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 1,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Purple
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Custom Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="flex-start"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
          },
        ]
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="orange"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="orange"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 215, 170, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="orange.600"
              borderColor="orange.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="orange"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ea580c",
                    "borderColor": "#ea580c",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="orange"
            >
              <Text
                allowFontScaling={false}
                fontSize="20px"
                lineHeight="20px"
                style={
                  Array [
                    Object {
                      "color": "muted.50",
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "fontSize": 20,
                        "height": 20,
                        "lineHeight": 20,
                        "width": 20,
                      },
                    ],
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰗝
              </Text>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="lg"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Darts
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="dark"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="dark"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(63, 63, 70, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="dark.600"
              borderColor="dark.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="dark"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#d4d4d8",
                    "borderColor": "#d4d4d8",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="dark"
            >
              <Text
                allowFontScaling={false}
                fontSize="20px"
                lineHeight="20px"
                style={
                  Array [
                    Object {
                      "color": "muted.50",
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "fontSize": 20,
                        "height": 20,
                        "lineHeight": 20,
                        "width": 20,
                      },
                    ],
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰭟
              </Text>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="lg"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Movie
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="red"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="red"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 202, 202, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="red.600"
              borderColor="red.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="red"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#dc2626",
                    "borderColor": "#dc2626",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="red"
            >
              <Text
                allowFontScaling={false}
                fontSize="20px"
                lineHeight="20px"
                style={
                  Array [
                    Object {
                      "color": "muted.50",
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "fontSize": 20,
                        "height": 20,
                        "lineHeight": 20,
                        "width": 20,
                      },
                    ],
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰻝
              </Text>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="lg"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Camping
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="blue"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="blue"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(191, 219, 254, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="blue.600"
              borderColor="blue.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="blue"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#2563eb",
                    "borderColor": "#2563eb",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="blue"
            >
              <Text
                allowFontScaling={false}
                fontSize="20px"
                lineHeight="20px"
                style={
                  Array [
                    Object {
                      "color": "muted.50",
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "fontSize": 20,
                        "height": 20,
                        "lineHeight": 20,
                        "width": 20,
                      },
                    ],
                    Object {
                      "fontFamily": "material-community",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                󰡘
              </Text>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="lg"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Chess
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": true,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="primary"
        defaultIsChecked={false}
        focusable={true}
        isDisabled={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="one"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              bg="transparent"
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              _interactionBox={
                Object {
                  "bg": "transparent",
                }
              }
              alignItems="center"
              bg="muted.50"
              borderColor="muted.300"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="primary"
              defaultIsChecked={false}
              display="flex"
              isDisabled={true}
              justifyContent="center"
              opacity={0.4}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 0.4,
                  },
                ]
              }
              value="one"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 0,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Checkbox
          </Text>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": true,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="primary"
        defaultIsChecked={true}
        focusable={true}
        isDisabled={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="two"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              bg="transparent"
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              _interactionBox={
                Object {
                  "bg": "transparent",
                }
              }
              alignItems="center"
              bg="primary.600"
              borderColor="primary.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="primary"
              defaultIsChecked={true}
              display="flex"
              isDisabled={true}
              justifyContent="center"
              opacity={0.4}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderColor": "#0891b2",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                    "opacity": 0.4,
                  },
                ]
              }
              value="two"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 1,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Checkbox
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="flex-start"
      maxWidth="80%"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "maxWidth": "80%",
          },
        ]
      }
    >
      <View
        isInvalid={true}
        isRequired={true}
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          flexDirection="row"
          justifyContent="flex-start"
          mb={2}
          mr={3}
          nativeID="field-react-aria-0-2-label"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Select Item
          </Text>
          <Text
            color="error.400"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            *
          </Text>
        </View>
        <View
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          alignItems="flex-start"
          defaultValue="Item 3"
          onChange={[Function]}
          style={
            Array [
              Object {
                "alignItems": "flex-start",
              },
            ]
          }
        >
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": false,
              }
            }
            accessible={true}
            checked={true}
            colorScheme="green"
            defaultIsChecked={false}
            feedbackId="field-react-aria-0-2-feedback"
            focusable={true}
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isReadOnly={false}
            isRequired={true}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            readOnly={false}
            required={true}
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            state={
              Object {
                "addValue": [Function],
                "isDisabled": false,
                "isReadOnly": false,
                "isSelected": [Function],
                "removeValue": [Function],
                "setValue": [Function],
                "toggleValue": [Function],
                "value": Array [
                  "Item 1",
                  "Item 3",
                ],
              }
            }
            style={
              Array [
                Object {},
              ]
            }
            value="Item 1"
          >
            <View
              alignItems="center"
              borderRadius="full"
              display="flex"
              flexDirection="row"
              justifyContent="center"
              my={1}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                display="flex"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  borderRadius="full"
                  height="100%"
                  p={5}
                  position="absolute"
                  style={
                    Array [
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      },
                    ]
                  }
                  w="100%"
                  zIndex={-1}
                />
                <View
                  _focus={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(187, 247, 208, 0.5)",
                      },
                    }
                  }
                  _hover={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      },
                    }
                  }
                  alignItems="center"
                  bg="green.600"
                  borderColor="error.600"
                  borderRadius="sm"
                  borderWidth={2}
                  colorScheme="green"
                  defaultIsChecked={false}
                  display="flex"
                  feedbackId="field-react-aria-0-2-feedback"
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isRequired={true}
                  justifyContent="center"
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  state={
                    Object {
                      "addValue": [Function],
                      "isDisabled": false,
                      "isReadOnly": false,
                      "isSelected": [Function],
                      "removeValue": [Function],
                      "setValue": [Function],
                      "toggleValue": [Function],
                      "value": Array [
                        "Item 1",
                        "Item 3",
                      ],
                    }
                  }
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#16a34a",
                        "borderColor": "#dc2626",
                        "borderRadius": 2,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                      },
                    ]
                  }
                  value="Item 1"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    name="check"
                    size={4}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Array [
                          Object {
                            "color": "#fafafa",
                            "height": 16,
                            "opacity": 1,
                            "width": 16,
                          },
                        ],
                        Object {
                          "flex": 0,
                          "height": 16,
                          "opacity": 1,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                color="darkText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                ml={3}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "marginLeft": 12,
                    },
                  ]
                }
              >
                Item 1
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="green"
            defaultIsChecked={false}
            feedbackId="field-react-aria-0-2-feedback"
            focusable={true}
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isReadOnly={false}
            isRequired={true}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            readOnly={false}
            required={true}
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            state={
              Object {
                "addValue": [Function],
                "isDisabled": false,
                "isReadOnly": false,
                "isSelected": [Function],
                "removeValue": [Function],
                "setValue": [Function],
                "toggleValue": [Function],
                "value": Array [
                  "Item 1",
                  "Item 3",
                ],
              }
            }
            style={
              Array [
                Object {},
              ]
            }
            value="Item 2"
          >
            <View
              alignItems="center"
              borderRadius="full"
              display="flex"
              flexDirection="row"
              justifyContent="center"
              my={1}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                display="flex"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  borderRadius="full"
                  height="100%"
                  p={5}
                  position="absolute"
                  style={
                    Array [
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      },
                    ]
                  }
                  w="100%"
                  zIndex={-1}
                />
                <View
                  _focus={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(187, 247, 208, 0.5)",
                      },
                    }
                  }
                  _hover={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      },
                    }
                  }
                  alignItems="center"
                  bg="muted.50"
                  borderColor="error.600"
                  borderRadius="sm"
                  borderWidth={2}
                  colorScheme="green"
                  defaultIsChecked={false}
                  display="flex"
                  feedbackId="field-react-aria-0-2-feedback"
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isRequired={true}
                  justifyContent="center"
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  state={
                    Object {
                      "addValue": [Function],
                      "isDisabled": false,
                      "isReadOnly": false,
                      "isSelected": [Function],
                      "removeValue": [Function],
                      "setValue": [Function],
                      "toggleValue": [Function],
                      "value": Array [
                        "Item 1",
                        "Item 3",
                      ],
                    }
                  }
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#dc2626",
                        "borderRadius": 2,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                      },
                    ]
                  }
                  value="Item 2"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    name="check"
                    size={4}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Array [
                          Object {
                            "color": "#fafafa",
                            "height": 16,
                            "opacity": 0,
                            "width": 16,
                          },
                        ],
                        Object {
                          "flex": 0,
                          "height": 16,
                          "opacity": 0,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                color="darkText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                ml={3}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "marginLeft": 12,
                    },
                  ]
                }
              >
                Item 2
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": false,
              }
            }
            accessible={true}
            checked={true}
            colorScheme="green"
            defaultIsChecked={false}
            feedbackId="field-react-aria-0-2-feedback"
            focusable={true}
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isReadOnly={false}
            isRequired={true}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            readOnly={false}
            required={true}
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            state={
              Object {
                "addValue": [Function],
                "isDisabled": false,
                "isReadOnly": false,
                "isSelected": [Function],
                "removeValue": [Function],
                "setValue": [Function],
                "toggleValue": [Function],
                "value": Array [
                  "Item 1",
                  "Item 3",
                ],
              }
            }
            style={
              Array [
                Object {},
              ]
            }
            value="Item 3"
          >
            <View
              alignItems="center"
              borderRadius="full"
              display="flex"
              flexDirection="row"
              justifyContent="center"
              my={1}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                display="flex"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  borderRadius="full"
                  height="100%"
                  p={5}
                  position="absolute"
                  style={
                    Array [
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      },
                    ]
                  }
                  w="100%"
                  zIndex={-1}
                />
                <View
                  _focus={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(187, 247, 208, 0.5)",
                      },
                    }
                  }
                  _hover={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      },
                    }
                  }
                  alignItems="center"
                  bg="green.600"
                  borderColor="error.600"
                  borderRadius="sm"
                  borderWidth={2}
                  colorScheme="green"
                  defaultIsChecked={false}
                  display="flex"
                  feedbackId="field-react-aria-0-2-feedback"
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isRequired={true}
                  justifyContent="center"
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  state={
                    Object {
                      "addValue": [Function],
                      "isDisabled": false,
                      "isReadOnly": false,
                      "isSelected": [Function],
                      "removeValue": [Function],
                      "setValue": [Function],
                      "toggleValue": [Function],
                      "value": Array [
                        "Item 1",
                        "Item 3",
                      ],
                    }
                  }
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#16a34a",
                        "borderColor": "#dc2626",
                        "borderRadius": 2,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                      },
                    ]
                  }
                  value="Item 3"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    name="check"
                    size={4}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Array [
                          Object {
                            "color": "#fafafa",
                            "height": 16,
                            "opacity": 1,
                            "width": 16,
                          },
                        ],
                        Object {
                          "flex": 0,
                          "height": 16,
                          "opacity": 1,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                color="darkText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                ml={3}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "marginLeft": 12,
                    },
                  ]
                }
              >
                Item 3
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": "mixed",
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="orange"
            defaultIsChecked={false}
            feedbackId="field-react-aria-0-2-feedback"
            focusable={true}
            hasFeedbackText={false}
            hasHelpText={false}
            helpTextId="field-react-aria-0-2-helptext"
            isDisabled={false}
            isIndeterminate={true}
            isReadOnly={false}
            isRequired={true}
            labelId="field-react-aria-0-2-label"
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            readOnly={false}
            required={true}
            setHasFeedbackText={[Function]}
            setHasHelpText={[Function]}
            state={
              Object {
                "addValue": [Function],
                "isDisabled": false,
                "isReadOnly": false,
                "isSelected": [Function],
                "removeValue": [Function],
                "setValue": [Function],
                "toggleValue": [Function],
                "value": Array [
                  "Item 1",
                  "Item 3",
                ],
              }
            }
            style={
              Array [
                Object {},
              ]
            }
            value="Indeterminate Item"
          >
            <View
              alignItems="center"
              borderRadius="full"
              display="flex"
              flexDirection="row"
              justifyContent="center"
              my={1}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
            >
              <View
                alignItems="center"
                display="flex"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  borderRadius="full"
                  height="100%"
                  p={5}
                  position="absolute"
                  style={
                    Array [
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      },
                    ]
                  }
                  w="100%"
                  zIndex={-1}
                />
                <View
                  _focus={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(254, 215, 170, 0.5)",
                      },
                    }
                  }
                  _hover={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      },
                    }
                  }
                  alignItems="center"
                  bg="muted.50"
                  borderColor="error.600"
                  borderRadius="sm"
                  borderWidth={2}
                  colorScheme="orange"
                  defaultIsChecked={false}
                  display="flex"
                  feedbackId="field-react-aria-0-2-feedback"
                  hasFeedbackText={false}
                  hasHelpText={false}
                  helpTextId="field-react-aria-0-2-helptext"
                  isDisabled={false}
                  isIndeterminate={true}
                  isRequired={true}
                  justifyContent="center"
                  labelId="field-react-aria-0-2-label"
                  nativeID="field-react-aria-0-2"
                  setHasFeedbackText={[Function]}
                  setHasHelpText={[Function]}
                  state={
                    Object {
                      "addValue": [Function],
                      "isDisabled": false,
                      "isReadOnly": false,
                      "isSelected": [Function],
                      "removeValue": [Function],
                      "setValue": [Function],
                      "toggleValue": [Function],
                      "value": Array [
                        "Item 1",
                        "Item 3",
                      ],
                    }
                  }
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#dc2626",
                        "borderRadius": 2,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                      },
                    ]
                  }
                  value="Indeterminate Item"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    name="check"
                    size={4}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Array [
                          Object {
                            "color": "#fafafa",
                            "height": 16,
                            "opacity": 0,
                            "width": 16,
                          },
                        ],
                        Object {
                          "flex": 0,
                          "height": 16,
                          "opacity": 0,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                color="darkText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                ml={3}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "marginLeft": 12,
                    },
                  ]
                }
              >
                Indeterminate Item
              </Text>
            </View>
          </View>
        </View>
        <View
          mt={2}
          nativeID="field-react-aria-0-2-feedback"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="muted.500"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#737373",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            We'll keep this between us.
          </Text>
        </View>
        <View
          mt={2}
          nativeID="field-react-aria-0-2-helptext"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="error.400"
            fontSize="xs"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Something is wrong.
          </Text>
        </View>
      </View>
      <View
        alignItems="baseline"
        mt={4}
        style={
          Array [
            Object {
              "alignItems": "baseline",
              "marginTop": 16,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Selected Values: 
        </Text>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          [Item 1, Item 3]
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Invalid 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="checkbox"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": undefined,
        }
      }
      accessible={true}
      checked={false}
      colorScheme="primary"
      defaultIsChecked={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {},
        ]
      }
      value="invalid"
    >
      <View
        alignItems="center"
        borderRadius="full"
        display="flex"
        flexDirection="row"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 9999,
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          alignItems="center"
          display="flex"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            borderRadius="full"
            height="100%"
            p={5}
            position="absolute"
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                },
              ]
            }
            w="100%"
            zIndex={-1}
          />
          <View
            _focus={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(165, 243, 252, 0.5)",
                },
              }
            }
            _hover={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(229, 229, 229, 0.3)",
                },
              }
            }
            alignItems="center"
            bg="muted.50"
            borderColor="error.600"
            borderRadius="sm"
            borderWidth={2}
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#dc2626",
                  "borderRadius": 2,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
            value="invalid"
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4294638330}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              name="check"
              size={4}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Array [
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "opacity": 0,
                      "width": 16,
                    },
                  ],
                  Object {
                    "flex": 0,
                    "height": 16,
                    "opacity": 0,
                    "width": 16,
                  },
                ]
              }
              tintColor={4294638330}
              vbHeight={14}
              vbWidth={14}
            >
              <RNSVGGroup
                opacity={0}
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGGroup
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGPath
                      d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Text
          color="darkText"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          ml={3}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "marginLeft": 12,
              },
            ]
          }
        >
          Checkbox
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      display="flex"
      justifyContent="space-between"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
        ]
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": false,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="success"
        defaultIsChecked={false}
        focusable={true}
        isChecked={true}
        isDisabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="Cool"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(187, 247, 208, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="success.600"
              borderColor="success.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="success"
              defaultIsChecked={false}
              display="flex"
              isChecked={true}
              isDisabled={false}
              justifyContent="center"
              onChange={[Function]}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#16a34a",
                    "borderColor": "#16a34a",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="Cool"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={5}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 20,
                        "opacity": 1,
                        "width": 20,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 20,
                      "opacity": 1,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="lg"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Are you Awesome?
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="red"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="red"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 202, 202, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="red.600"
              borderColor="red.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="red"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#dc2626",
                    "borderColor": "#dc2626",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="red"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 1,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 1,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Checkbox
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="green"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="green"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(187, 247, 208, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="green.600"
              borderColor="green.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="green"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#16a34a",
                    "borderColor": "#16a34a",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="green"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={20}
                bbWidth={20}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={5}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 20,
                        "opacity": 1,
                        "width": 20,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 20,
                      "opacity": 1,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="lg"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Checkbox
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": true,
            "disabled": undefined,
          }
        }
        accessible={true}
        checked={true}
        colorScheme="yellow"
        defaultIsChecked={true}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {},
          ]
        }
        value="yellow"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(254, 240, 138, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="yellow.600"
              borderColor="yellow.600"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="yellow"
              defaultIsChecked={true}
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ca8a04",
                    "borderColor": "#ca8a04",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="yellow"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={24}
                bbWidth={24}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={6}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 24,
                        "opacity": 1,
                        "width": 24,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 24,
                      "opacity": 1,
                      "width": 24,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={1}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="xl"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Checkbox
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox Uncontrolled checkbox 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityState={
        Object {
          "disabled": undefined,
        }
      }
      alignItems="flex-start"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
          },
        ]
      }
    >
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="primary"
        defaultIsChecked={false}
        focusable={true}
        isDisabled={false}
        isReadOnly={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        readOnly={false}
        state={
          Object {
            "addValue": [Function],
            "isDisabled": false,
            "isReadOnly": false,
            "isSelected": [Function],
            "removeValue": [Function],
            "setValue": [Function],
            "toggleValue": [Function],
            "value": Array [],
          }
        }
        style={
          Array [
            Object {},
          ]
        }
        value="one"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          my={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
                "marginBottom": 8,
                "marginTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="muted.50"
              borderColor="muted.300"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="primary"
              defaultIsChecked={false}
              display="flex"
              justifyContent="center"
              state={
                Object {
                  "addValue": [Function],
                  "isDisabled": false,
                  "isReadOnly": false,
                  "isSelected": [Function],
                  "removeValue": [Function],
                  "setValue": [Function],
                  "toggleValue": [Function],
                  "value": Array [],
                }
              }
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="one"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 0,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Hello world
          </Text>
        </View>
      </View>
      <View
        accessibilityRole="checkbox"
        accessibilityState={
          Object {
            "checked": false,
            "disabled": false,
          }
        }
        accessible={true}
        checked={false}
        colorScheme="primary"
        defaultIsChecked={false}
        focusable={true}
        isDisabled={false}
        isReadOnly={false}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        readOnly={false}
        state={
          Object {
            "addValue": [Function],
            "isDisabled": false,
            "isReadOnly": false,
            "isSelected": [Function],
            "removeValue": [Function],
            "setValue": [Function],
            "toggleValue": [Function],
            "value": Array [],
          }
        }
        style={
          Array [
            Object {},
          ]
        }
        value="two"
      >
        <View
          alignItems="center"
          borderRadius="full"
          display="flex"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderRadius": 9999,
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            display="flex"
            justifyContent="center"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
          >
            <View
              borderRadius="full"
              height="100%"
              p={5}
              position="absolute"
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "height": "100%",
                    "paddingBottom": 20,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 20,
                    "position": "absolute",
                    "width": "100%",
                    "zIndex": -1,
                  },
                ]
              }
              w="100%"
              zIndex={-1}
            />
            <View
              _focus={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  },
                }
              }
              _hover={
                Object {
                  "_interactionBox": Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  },
                }
              }
              alignItems="center"
              bg="muted.50"
              borderColor="muted.300"
              borderRadius="sm"
              borderWidth={2}
              colorScheme="primary"
              defaultIsChecked={false}
              display="flex"
              justifyContent="center"
              state={
                Object {
                  "addValue": [Function],
                  "isDisabled": false,
                  "isReadOnly": false,
                  "isSelected": [Function],
                  "removeValue": [Function],
                  "setValue": [Function],
                  "toggleValue": [Function],
                  "value": Array [],
                }
              }
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#fafafa",
                    "borderColor": "#d4d4d4",
                    "borderRadius": 2,
                    "borderWidth": 2,
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
              value="two"
            >
              <RNSVGSvgView
                accessibilityRole="image"
                align="xMidYMid"
                bbHeight={16}
                bbWidth={16}
                color={4294638330}
                focusable={false}
                meetOrSlice={0}
                minX={0}
                minY={0}
                name="check"
                size={4}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#fafafa",
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 16,
                      "opacity": 0,
                      "width": 16,
                    },
                  ]
                }
                tintColor={4294638330}
                vbHeight={14}
                vbWidth={14}
              >
                <RNSVGGroup
                  opacity={0}
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGGroup
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGPath
                        d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            ml={3}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "marginLeft": 12,
                },
              ]
            }
          >
            Hello world
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Checkbox With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="checkbox"
      accessibilityState={
        Object {
          "checked": false,
          "disabled": undefined,
        }
      }
      accessible={true}
      checked={false}
      colorScheme="success"
      defaultIsChecked={false}
      focusable={true}
      onBlur={[Function]}
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {},
        ]
      }
      value="success"
    >
      <View
        alignItems="center"
        borderRadius="full"
        display="flex"
        flexDirection="row"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderRadius": 9999,
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          alignItems="center"
          display="flex"
          justifyContent="center"
          style={
            Array [
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            borderRadius="full"
            height="100%"
            p={5}
            position="absolute"
            style={
              Array [
                Object {
                  "borderRadius": 9999,
                  "height": "100%",
                  "paddingBottom": 20,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 20,
                  "position": "absolute",
                  "width": "100%",
                  "zIndex": -1,
                },
              ]
            }
            w="100%"
            zIndex={-1}
          />
          <View
            _focus={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(187, 247, 208, 0.5)",
                },
              }
            }
            _hover={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(229, 229, 229, 0.3)",
                },
              }
            }
            alignItems="center"
            bg="muted.50"
            borderColor="muted.300"
            borderRadius="sm"
            borderWidth={2}
            colorScheme="success"
            defaultIsChecked={false}
            display="flex"
            justifyContent="center"
            onChange={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#fafafa",
                  "borderColor": "#d4d4d4",
                  "borderRadius": 2,
                  "borderWidth": 2,
                  "display": "flex",
                  "justifyContent": "center",
                },
              ]
            }
            value="success"
          >
            <RNSVGSvgView
              accessibilityRole="image"
              align="xMidYMid"
              bbHeight={16}
              bbWidth={16}
              color={4294638330}
              focusable={false}
              meetOrSlice={0}
              minX={0}
              minY={0}
              name="check"
              size={4}
              stroke=""
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  Array [
                    Object {
                      "color": "#fafafa",
                      "height": 16,
                      "opacity": 0,
                      "width": 16,
                    },
                  ],
                  Object {
                    "flex": 0,
                    "height": 16,
                    "opacity": 0,
                    "width": 16,
                  },
                ]
              }
              tintColor={4294638330}
              vbHeight={14}
              vbWidth={14}
            >
              <RNSVGGroup
                opacity={0}
                propList={
                  Array [
                    "stroke",
                  ]
                }
                stroke={null}
              >
                <RNSVGGroup>
                  <RNSVGGroup
                    fill={
                      Array [
                        2,
                      ]
                    }
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGPath
                      d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <Text
          color="darkText"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          ml={3}
          style={
            Array [
              Object {
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "marginLeft": 12,
              },
            ]
          }
        >
          Label
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Column Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        bg="green.500"
        h="50"
        style={
          Array [
            Object {
              "backgroundColor": "#22c55e",
              "height": 50,
              "width": 100,
            },
          ]
        }
        w="100"
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        bg="blue.300"
        h="50"
        style={
          Array [
            Object {
              "backgroundColor": "#93c5fd",
              "height": 50,
              "width": 100,
            },
          ]
        }
        w="100"
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        bg="tomato"
        h="50"
        style={
          Array [
            Object {
              "backgroundColor": "tomato",
              "height": 50,
              "width": 100,
            },
          ]
        }
        w="100"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Container CenteringChildren 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      maxWidth="80%"
      style={
        Array [
          Object {
            "alignItems": "center",
            "maxWidth": "80%",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Benefits
      </Text>
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        There are many benefits to a joint design and development system. Not only does it bring benefits to the design team, but it also brings benefits to engineering teams. It makes sure that our experiences have a consistent look and feel, not just in our design specs, but in production
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Container Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      maxWidth="80%"
      style={
        Array [
          Object {
            "alignItems": "center",
            "maxWidth": "80%",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Benefits to a joint design and development system
      </Text>
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        There are many benefits to a joint design and development system. Not only does it bring benefits to the design team, but it also brings benefits to engineering teams. It makes sure that our experiences have a consistent look and feel, not just in our design specs, but in production
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Container Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="flex-start"
      maxWidth="80%"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "maxWidth": "80%",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Benefits to a joint design and development system
      </Text>
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        There are many benefits to a joint design and development system. Not only does it bring benefits to the design team, but it also brings benefits to engineering teams. It makes sure that our experiences have a consistent look and feel, not just in our design specs, but in production
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Divider Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": 190,
          },
        ]
      }
      w={190}
    >
      <Text
        alignItems="center"
        color="muted.700"
        d="flex"
        flexDirection="row"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        mx={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "color": "#404040",
              "display": "flex",
              "flexDirection": "row",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
              "marginLeft": 12,
              "marginRight": 12,
            },
          ]
        }
      >
        Chrome 
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          ml="auto"
          style={
            Array [
              Object {
                "color": "muted.800",
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#262626",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "marginLeft": "auto",
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </Text>
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        my={2}
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <Text
        alignItems="center"
        color="muted.700"
        d="flex"
        flexDirection="row"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        mx={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "color": "#404040",
              "display": "flex",
              "flexDirection": "row",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
              "marginLeft": 12,
              "marginRight": 12,
            },
          ]
        }
      >
        Firefox 
          
        <Text />
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Divider Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      display="flex"
      flexDirection="row"
      p={4}
      style={
        Array [
          Object {
            "display": "flex",
            "flexDirection": "row",
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Simple
      </Text>
      <View
        aria-orientation="vertical"
        bg="red.500"
        height="100%"
        mx={4}
        style={
          Array [
            Object {
              "backgroundColor": "#ef4444",
              "height": "100%",
              "marginLeft": 16,
              "marginRight": 16,
              "width": 3,
            },
          ]
        }
        width="3px"
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Easy
      </Text>
      <View
        aria-orientation="vertical"
        bg="blue.500"
        height="100%"
        mx={4}
        style={
          Array [
            Object {
              "backgroundColor": "#3b82f6",
              "height": "100%",
              "marginLeft": 16,
              "marginRight": 16,
              "width": 3,
            },
          ]
        }
        width="3px"
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Beautiful
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Divider Orientation 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": 160,
          },
        ]
      }
      w={160}
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        mx="auto"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
              "marginLeft": "auto",
              "marginRight": "auto",
            },
          ]
        }
      >
        Browser
      </Text>
      <View
        aria-orientation="horizontal"
        bg="muted.200"
        height="1px"
        my={2}
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "height": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "width": "100%",
            },
          ]
        }
        width="100%"
      />
      <View
        display="flex"
        flexDirection="row"
        justifyContent="space-evenly"
        mx={3}
        style={
          Array [
            Object {
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-evenly",
              "marginLeft": 12,
              "marginRight": 12,
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          style={
            Array [
              Object {
                "color": "muted.800",
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#262626",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          aria-orientation="vertical"
          bg="muted.200"
          height="100%"
          style={
            Array [
              Object {
                "backgroundColor": "#e5e5e5",
                "height": "100%",
                "width": 1,
              },
            ]
          }
          width="1px"
        />
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          style={
            Array [
              Object {
                "color": "muted.800",
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#262626",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Signin Screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "maxWidth": 290,
          "paddingBottom": 32,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 32,
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "600",
            "letterSpacing": 0,
            "lineHeight": 2.5,
            "textDecorationLine": undefined,
          }
        }
      >
        Welcome
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#4b5563",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 17.5,
            "marginTop": 4,
            "textDecorationLine": undefined,
          }
        }
      >
        Sign in to continue!
      </Text>
      <View
        style={
          Object {
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            nativeID="field-react-aria-0-2-label"
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Email ID
            </Text>
          </View>
          <TextInput
            accessible={true}
            allowFontScaling={true}
            background="transparent"
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={false}
            style={
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            nativeID="field-react-aria-0-3-label"
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Password
            </Text>
          </View>
          <TextInput
            accessible={true}
            allowFontScaling={true}
            background="transparent"
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-3"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={true}
            style={
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignSelf": "flex-end",
                "flexDirection": "row",
                "height": "auto",
                "marginTop": 4,
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#6366f1",
                  "fontFamily": undefined,
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 18,
                  "textDecorationLine": "none",
                }
              }
            >
              Forget Password?
            </Text>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          _focus={
            Object {
              "bg": "indigo.700",
            }
          }
          _focusVisible={
            Object {
              "style": Object {},
            }
          }
          _hover={
            Object {
              "bg": "indigo.600",
            }
          }
          _pressed={
            Object {
              "bg": "indigo.700",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#6366f1",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Sign in
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 24,
            }
          }
        >
          <Text
            style={
              Object {
                "backgroundColor": undefined,
                "color": "#404040",
                "fontFamily": undefined,
                "fontSize": 14,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0,
                "lineHeight": 21,
                "textDecorationLine": undefined,
              }
            }
          >
            I'm a new user.
             
          </Text>
          <View
            style={Object {}}
          />
          <View
            accessibilityRole="link"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flexDirection": "row",
                "height": "auto",
                "width": "auto",
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#6366f1",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": "none",
                }
              }
            >
              Sign Up
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Signup Screen 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "maxWidth": 290,
          "paddingBottom": 32,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 32,
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#1f2937",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "600",
            "letterSpacing": 0,
            "lineHeight": 2.5,
            "textDecorationLine": undefined,
          }
        }
      >
        Welcome
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#4b5563",
            "fontFamily": undefined,
            "fontSize": 14,
            "fontStyle": "normal",
            "fontWeight": "500",
            "letterSpacing": 0,
            "lineHeight": 17.5,
            "marginTop": 4,
            "textDecorationLine": undefined,
          }
        }
      >
        Sign up to continue!
      </Text>
      <View
        style={
          Object {
            "marginTop": 20,
          }
        }
      >
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            nativeID="field-react-aria-0-2-label"
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Email
            </Text>
          </View>
          <TextInput
            accessible={true}
            allowFontScaling={true}
            background="transparent"
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-2"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={false}
            style={
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            nativeID="field-react-aria-0-3-label"
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Password
            </Text>
          </View>
          <TextInput
            accessible={true}
            allowFontScaling={true}
            background="transparent"
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-3"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={true}
            style={
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            nativeID="field-react-aria-0-4-label"
            style={
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": undefined,
                  "color": "#1f2937",
                  "fontFamily": undefined,
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "500",
                  "letterSpacing": 0,
                  "lineHeight": 21,
                  "textDecorationLine": undefined,
                }
              }
            >
              Confirm Password
            </Text>
          </View>
          <TextInput
            accessible={true}
            allowFontScaling={true}
            background="transparent"
            disabled={false}
            editable={true}
            isRequired={false}
            nativeID="field-react-aria-0-4"
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholderTextColor="#a3a3a3"
            readOnly={false}
            rejectResponderTermination={true}
            required={false}
            secureTextEntry={true}
            style={
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "#171717",
                "fontFamily": undefined,
                "fontSize": 12,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
                "width": undefined,
              }
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Object {
              "height": 12,
            }
          }
        />
        <View
          _focus={
            Object {
              "bg": "indigo.700",
            }
          }
          _focusVisible={
            Object {
              "style": Object {},
            }
          }
          _hover={
            Object {
              "bg": "indigo.600",
            }
          }
          _pressed={
            Object {
              "bg": "indigo.700",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="indigo"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#6366f1",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#FFFFFF",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "500",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "textDecorationLine": undefined,
                  }
                }
              >
                Sign up
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Examples Todo App 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
        "paddingLeft": 12,
        "paddingRight": 12,
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginTop": 16,
          "width": "90%",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": undefined,
            "color": "#34d399",
            "fontFamily": undefined,
            "fontSize": 24,
            "fontStyle": "normal",
            "fontWeight": "700",
            "letterSpacing": 0,
            "lineHeight": 2.5,
            "textDecorationLine": undefined,
          }
        }
      >
        Todo App
      </Text>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#e5e5e5",
            "borderColor": "transparent",
            "borderRadius": 4,
            "borderWidth": 1,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "overflow": "hidden",
            "width": "100%",
          }
        }
      >
        <TextInput
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Add Item"
          placeholderTextColor="#a3a3a3"
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 4,
              "borderWidth": 0,
              "color": "#171717",
              "flex": 1,
              "fontFamily": undefined,
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
              "width": undefined,
            }
          }
          underlineColorAndroid="transparent"
          value=""
        />
        <View
          _focus={
            Object {
              "bg": "emerald.700",
            }
          }
          _focusVisible={
            Object {
              "style": Object {},
            }
          }
          _hover={
            Object {
              "bg": "emerald.600",
            }
          }
          _pressed={
            Object {
              "bg": "emerald.700",
            }
          }
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          colorScheme="emerald"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#10b981",
              "borderRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginLeft": 4,
              "paddingBottom": 8,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 8,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <View
              style={Object {}}
            >
              <Text />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 16,
          }
        }
      />
      <View
        style={Object {}}
      >
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            }
          }
        >
          <View
            _focus={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(167, 243, 208, 0.5)",
                },
              }
            }
            _hover={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(229, 229, 229, 0.3)",
                },
              }
            }
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": true,
                "disabled": undefined,
              }
            }
            accessible={true}
            checked={true}
            colorScheme="emerald"
            defaultIsChecked={false}
            focusable={true}
            isChecked={true}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            value="code"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focus={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(167, 243, 208, 0.5)",
                      },
                    }
                  }
                  _hover={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      },
                    }
                  }
                  colorScheme="emerald"
                  defaultIsChecked={false}
                  isChecked={true}
                  onChange={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#059669",
                      "borderColor": "#059669",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                  value="code"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    name="check"
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "opacity": 1,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      opacity={1}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "textDecorationLine": "line-through",
                  }
                }
              >
                code
              </Text>
            </View>
          </View>
          <View
            style={Object {}}
          />
          <View
            _disabled={
              Object {
                "opacity": 0.5,
              }
            }
            _focusVisible={
              Object {
                "bg": "rgba(167, 243, 208, 0.5)",
                "style": Object {},
              }
            }
            _hover={
              Object {
                "bg": "rgba(167, 243, 208, 0.5)",
              }
            }
            _pressed={
              Object {
                "bg": "rgba(167, 243, 208, 0.6)",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 8,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <Text />
          </View>
        </View>
        <View
          style={Object {}}
        />
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            }
          }
        >
          <View
            _focus={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(167, 243, 208, 0.5)",
                },
              }
            }
            _hover={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(229, 229, 229, 0.3)",
                },
              }
            }
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": undefined,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="emerald"
            defaultIsChecked={false}
            focusable={true}
            isChecked={false}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            value="sleep"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focus={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(167, 243, 208, 0.5)",
                      },
                    }
                  }
                  _hover={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      },
                    }
                  }
                  colorScheme="emerald"
                  defaultIsChecked={false}
                  isChecked={false}
                  onChange={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                  value="sleep"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    name="check"
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "opacity": 0,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                sleep
              </Text>
            </View>
          </View>
          <View
            style={Object {}}
          />
          <View
            _disabled={
              Object {
                "opacity": 0.5,
              }
            }
            _focusVisible={
              Object {
                "bg": "rgba(167, 243, 208, 0.5)",
                "style": Object {},
              }
            }
            _hover={
              Object {
                "bg": "rgba(167, 243, 208, 0.5)",
              }
            }
            _pressed={
              Object {
                "bg": "rgba(167, 243, 208, 0.6)",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 8,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <Text />
          </View>
        </View>
        <View
          style={Object {}}
        />
        <View
          style={
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
              "width": "100%",
            }
          }
        >
          <View
            _focus={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(167, 243, 208, 0.5)",
                },
              }
            }
            _hover={
              Object {
                "_interactionBox": Object {
                  "bg": "rgba(229, 229, 229, 0.3)",
                },
              }
            }
            accessibilityRole="checkbox"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": undefined,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="emerald"
            defaultIsChecked={false}
            focusable={true}
            isChecked={false}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={Object {}}
            value="repeat"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    }
                  }
                />
                <View
                  _focus={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(167, 243, 208, 0.5)",
                      },
                    }
                  }
                  _hover={
                    Object {
                      "_interactionBox": Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      },
                    }
                  }
                  colorScheme="emerald"
                  defaultIsChecked={false}
                  isChecked={false}
                  onChange={[Function]}
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 4,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                  value="repeat"
                >
                  <RNSVGSvgView
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={16}
                    bbWidth={16}
                    color={4294638330}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    name="check"
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Object {
                          "color": "#fafafa",
                          "height": 16,
                          "opacity": 0,
                          "width": 16,
                        },
                        Object {
                          "flex": 0,
                          "height": 16,
                          "width": 16,
                        },
                      ]
                    }
                    tintColor={4294638330}
                    vbHeight={14}
                    vbWidth={14}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGGroup
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        >
                          <RNSVGPath
                            d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                style={
                  Object {
                    "backgroundColor": undefined,
                    "color": "#1f2937",
                    "fontFamily": undefined,
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "letterSpacing": 0,
                    "lineHeight": 21,
                    "marginLeft": 8,
                    "marginRight": 8,
                    "textDecorationLine": undefined,
                  }
                }
              >
                repeat
              </Text>
            </View>
          </View>
          <View
            style={Object {}}
          />
          <View
            _disabled={
              Object {
                "opacity": 0.5,
              }
            }
            _focusVisible={
              Object {
                "bg": "rgba(167, 243, 208, 0.5)",
                "style": Object {},
              }
            }
            _hover={
              Object {
                "bg": "rgba(167, 243, 208, 0.5)",
              }
            }
            _pressed={
              Object {
                "bg": "rgba(167, 243, 208, 0.6)",
              }
            }
            _text={
              Object {
                "color": "lightText",
              }
            }
            accessibilityRole="button"
            accessible={true}
            colorScheme="emerald"
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 8,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              }
            }
          >
            <Text />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      h={100}
      position="relative"
      style={
        Array [
          Object {
            "height": 100,
            "position": "relative",
            "width": "100%",
          },
        ]
      }
      w="100%"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab CustomPosition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      h={200}
      position="relative"
      style={
        Array [
          Object {
            "height": 200,
            "position": "relative",
            "width": "100%",
          },
        ]
      }
      w="100%"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Fab Placement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      h={400}
      style={
        Array [
          Object {
            "height": 400,
            "width": "100%",
          },
        ]
      }
      w="100%"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FlatList Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      data={
        Array [
          Object {
            "id": "bd7acbea-c1b1-46c2-aed5-3ad53abb28ba",
            "title": "First Item",
          },
          Object {
            "id": "3ac68afc-c605-48d3-a4f8-fbd91aa97f63",
            "title": "Second Item",
          },
          Object {
            "id": "58694a0f-3da1-471f-bd96-145571e29d72",
            "title": "Third Item",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {},
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="primary.300"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#67e8f9",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              First Item
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="primary.300"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#67e8f9",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Second Item
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="primary.300"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#67e8f9",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Third Item
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Flex Basic Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      display="flex"
      justifyContent="center"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="xl"
          fontStyle="normal"
          fontWeight="bold"
          mb={3}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "700",
                "marginBottom": 12,
              },
            ]
          }
        >
          Primary Shades
        </Text>
      </View>
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        my={3}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 12,
              "marginTop": 12,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Change Flex Direction
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          display="flex"
          flexDirection="column"
          style={
            Array [
              Object {
                "display": "flex",
                "flexDirection": "column",
              },
            ]
          }
        >
          <View
            alignItems="center"
            bg="primary.100"
            display="flex"
            justifyContent="center"
            size={16}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#cffafe",
                  "display": "flex",
                  "height": 64,
                  "justifyContent": "center",
                  "width": 64,
                },
              ]
            }
          >
            <Text
              color="gray.800"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#27272a",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              100
            </Text>
          </View>
          <View
            alignItems="center"
            bg="primary.200"
            display="flex"
            justifyContent="center"
            size={16}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a5f3fc",
                  "display": "flex",
                  "height": 64,
                  "justifyContent": "center",
                  "width": 64,
                },
              ]
            }
          >
            <Text
              color="white"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              200
            </Text>
          </View>
          <View
            alignItems="center"
            bg="primary.300"
            display="flex"
            justifyContent="center"
            size={16}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#67e8f9",
                  "display": "flex",
                  "height": 64,
                  "justifyContent": "center",
                  "width": 64,
                },
              ]
            }
          >
            <Text
              color="white"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              300
            </Text>
          </View>
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            size={16}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "display": "flex",
                  "height": 64,
                  "justifyContent": "center",
                  "width": 64,
                },
              ]
            }
          >
            <Text
              color="white"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              400
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Flex Spacer Example 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      display="flex"
      flexDirection="column"
      h={40}
      mt={6}
      style={
        Array [
          Object {
            "display": "flex",
            "flexDirection": "column",
            "height": 160,
            "marginTop": 24,
            "width": 80,
          },
        ]
      }
      w={20}
    >
      <View
        alignItems="center"
        bg="primary.400"
        display="flex"
        justifyContent="center"
        rounded="xl"
        size={16}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#22d3ee",
              "borderRadius": 8,
              "display": "flex",
              "height": 64,
              "justifyContent": "center",
              "width": 64,
            },
          ]
        }
      >
        <Text
          color="white"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Box 1
        </Text>
      </View>
      <View
        flexGrow={1}
        style={
          Array [
            Object {
              "flexGrow": 1,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="secondary.400"
        display="flex"
        justifyContent="center"
        rounded="xl"
        size={16}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f472b6",
              "borderRadius": 8,
              "display": "flex",
              "height": 64,
              "justifyContent": "center",
              "width": 64,
            },
          ]
        }
      >
        <Text
          color="white"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Box 2
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl CustomStyle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={Object {}}
      style={
        Array [
          Object {},
        ]
      }
    >
      <View>
        <View
          mt={6}
          px={4}
          style={
            Array [
              Object {
                "marginTop": 24,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "underline",
                },
              ]
            }
            textDecorationLine="underline"
          >
            Default:
          </Text>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "width": "100%",
                },
              ]
            }
            width="100%"
          >
            <View
              flexDirection="row"
              justifyContent="flex-start"
              mb={2}
              mr={3}
              nativeID="field-react-aria-0-2-label"
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 8,
                    "marginRight": 12,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Favorite framework
              </Text>
            </View>
            <TextInput
              accessible={true}
              allowFontScaling={true}
              background="transparent"
              borderColor="muted.200"
              borderRadius="lg"
              borderWidth={1}
              color="black"
              disabled={false}
              editable={true}
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              isRequired={false}
              nativeID="field-react-aria-0-2"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholderTextColor="#a3a3a3"
              px={4}
              py={3}
              readOnly={false}
              rejectResponderTermination={true}
              required={false}
              secureTextEntry={false}
              style={
                Array [
                  Object {
                    "borderColor": "#e5e5e5",
                    "borderRadius": 6,
                    "borderWidth": 1,
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              variant="outline"
            />
            <View
              mt={2}
              nativeID="field-react-aria-0-2-feedback"
              style={
                Array [
                  Object {
                    "marginTop": 8,
                  },
                ]
              }
            >
              <Text
                color="muted.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#737373",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                We'll keep this between us.
              </Text>
            </View>
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "underline",
                },
              ]
            }
            textDecorationLine="underline"
          >
            Custom style for disable:
          </Text>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            isDisabled={true}
            style={
              Array [
                Object {
                  "width": "100%",
                },
              ]
            }
            width="100%"
          >
            <View
              flexDirection="row"
              justifyContent="flex-start"
              mb={2}
              mr={3}
              nativeID="field-react-aria-0-3-label"
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 8,
                    "marginRight": 12,
                  },
                ]
              }
            >
              <Text
                color="gray.400"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#a1a1aa",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Favorite framework
              </Text>
            </View>
            <TextInput
              accessible={true}
              allowFontScaling={true}
              background="transparent"
              bg="muted.100"
              borderColor="muted.200"
              borderRadius="lg"
              borderWidth={1}
              color="black"
              disabled={true}
              editable={false}
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              isRequired={false}
              nativeID="field-react-aria-0-3"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              opacity={0.8}
              placeholderTextColor="#a3a3a3"
              px={4}
              py={3}
              readOnly={false}
              rejectResponderTermination={true}
              required={false}
              secureTextEntry={false}
              style={
                Array [
                  Object {
                    "backgroundColor": "#f5f5f5",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 6,
                    "borderWidth": 1,
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "opacity": 0.8,
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              variant="outline"
            />
            <View
              borderColor="gray.400"
              borderLeftWidth={1}
              mt={1}
              nativeID="field-react-aria-0-3-feedback"
              pl={2}
              px={1}
              style={
                Array [
                  Object {
                    "borderColor": "#a1a1aa",
                    "borderLeftWidth": 1,
                    "marginTop": 4,
                    "paddingLeft": 8,
                    "paddingRight": 4,
                  },
                ]
              }
            >
              <Text
                color="muted.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#737373",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                We'll keep this between us.
              </Text>
            </View>
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                  "textDecorationLine": "underline",
                },
              ]
            }
            textDecorationLine="underline"
          >
            Custom style for invalid:
          </Text>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            isInvalid={true}
            isRequired={true}
            style={
              Array [
                Object {
                  "width": "100%",
                },
              ]
            }
            width="100%"
          >
            <View
              flexDirection="row"
              justifyContent="flex-start"
              mb={2}
              mr={3}
              nativeID="field-react-aria-0-4-label"
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginBottom": 8,
                    "marginRight": 12,
                  },
                ]
              }
            >
              <Text
                color="rose.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#f43f5e",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Favorite framework
              </Text>
              <Text
                color="error.400"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#f87171",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                *
              </Text>
            </View>
            <TextInput
              accessibilityInvalid={true}
              accessibilityRequired={true}
              accessible={true}
              allowFontScaling={true}
              background="transparent"
              borderColor="error.600"
              borderRadius="lg"
              borderWidth={1}
              color="black"
              disabled={false}
              editable={true}
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              isRequired={true}
              nativeID="field-react-aria-0-4"
              onBlur={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholderTextColor="#a3a3a3"
              px={4}
              py={3}
              readOnly={false}
              rejectResponderTermination={true}
              required={true}
              secureTextEntry={false}
              style={
                Array [
                  Object {
                    "borderColor": "#dc2626",
                    "borderRadius": 6,
                    "borderWidth": 1,
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                ]
              }
              underlineColorAndroid="transparent"
              variant="outline"
            />
            <View
              mt={2}
              nativeID="field-react-aria-0-4-feedback"
              style={
                Array [
                  Object {
                    "marginTop": 8,
                  },
                ]
              }
            >
              <Text
                color="red.400"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#f87171",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "textDecorationLine": "underline",
                    },
                  ]
                }
                textDecorationLine="underline"
              >
                We'll keep this between us.
              </Text>
            </View>
            <View
              mt={2}
              nativeID="field-react-aria-0-4-helptext"
              style={
                Array [
                  Object {
                    "marginTop": 8,
                  },
                ]
              }
            >
              <Text
                color="error.400"
                fontSize="xs"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#f87171",
                      "fontSize": 12,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Something is wrong.
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      isDisabled={false}
      isInvalid={false}
      isReadOnly={false}
      isRequired={true}
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        mx={4}
        style={
          Array [
            Object {
              "marginLeft": 16,
              "marginRight": 16,
            },
          ]
        }
      >
        <View
          flexDirection="row"
          justifyContent="flex-start"
          mb={2}
          mr={3}
          nativeID="field-react-aria-0-2-label"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Favorite framework
          </Text>
          <Text
            color="error.400"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            *
          </Text>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <TextInput
          accessibilityRequired={true}
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          borderColor="muted.200"
          borderRadius="lg"
          borderWidth={1}
          color="black"
          disabled={false}
          editable={true}
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          isRequired={true}
          nativeID="field-react-aria-0-2"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          p={2}
          placeholder="Is it react?"
          placeholderTextColor="#a3a3a3"
          px={4}
          py={3}
          readOnly={false}
          rejectResponderTermination={true}
          required={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 6,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              },
            ]
          }
          underlineColorAndroid="transparent"
          variant="outline"
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          mt={2}
          nativeID="field-react-aria-0-2-feedback"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="muted.500"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#737373",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            We'll keep this between us.
          </Text>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots FormControl Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      isInvalid={true}
      isRequired={true}
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        mx={4}
        style={
          Array [
            Object {
              "marginLeft": 16,
              "marginRight": 16,
            },
          ]
        }
      >
        <View
          flexDirection="row"
          justifyContent="flex-start"
          mb={2}
          mr={3}
          nativeID="field-react-aria-0-2-label"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Favorite framework
          </Text>
          <Text
            color="error.400"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            *
          </Text>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <TextInput
          accessibilityInvalid={true}
          accessibilityRequired={true}
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          borderColor="error.600"
          borderRadius="lg"
          borderWidth={1}
          color="black"
          disabled={false}
          editable={true}
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          isRequired={true}
          nativeID="field-react-aria-0-2"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          p={2}
          placeholder="Is it react?"
          placeholderTextColor="#a3a3a3"
          px={4}
          py={3}
          readOnly={false}
          rejectResponderTermination={true}
          required={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "borderColor": "#dc2626",
                "borderRadius": 6,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              },
            ]
          }
          underlineColorAndroid="transparent"
          variant="outline"
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          mt={2}
          nativeID="field-react-aria-0-2-feedback"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="muted.500"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#737373",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            We'll keep this between us.
          </Text>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          mt={2}
          nativeID="field-react-aria-0-2-helptext"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="error.400"
            fontSize="xs"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Something is wrong.
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots HStack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          alignItems="center"
          bg="primary.400"
          display="flex"
          justifyContent="center"
          rounded="md"
          size={16}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#22d3ee",
                "borderRadius": 4,
                "display": "flex",
                "height": 64,
                "justifyContent": "center",
                "width": 64,
              },
              Object {
                "elevation": 4,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
              },
            ]
          }
        >
          <Text
            color="white"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Box 1
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          alignItems="center"
          bg="secondary.400"
          display="flex"
          justifyContent="center"
          rounded="md"
          size={16}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f472b6",
                "borderRadius": 4,
                "display": "flex",
                "height": 64,
                "justifyContent": "center",
                "width": 64,
              },
              Object {
                "elevation": 4,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
              },
            ]
          }
        >
          <Text
            color="white"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Box 2
          </Text>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          alignItems="center"
          bg="emerald.400"
          display="flex"
          justifyContent="center"
          rounded="md"
          size={16}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#34d399",
                "borderRadius": 4,
                "display": "flex",
                "height": 64,
                "justifyContent": "center",
                "width": 64,
              },
              Object {
                "elevation": 4,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
              },
            ]
          }
        >
          <Text
            color="white"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Box 3
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      alignSelf="center"
      color="muted.700"
      fontSize="3xl"
      fontStyle="normal"
      fontWeight="bold"
      style={
        Array [
          Object {
            "alignSelf": "center",
            "color": "#404040",
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
          },
        ]
      }
    >
      I'm a Heading
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignSelf="center"
      style={
        Array [
          Object {
            "alignSelf": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        mb={4}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
              "marginBottom": 16,
            },
          ]
        }
      >
        Mobile first accessible components for React Native & Web.
      </Text>
      <Text
        color="muted.700"
        fontSize="xl"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        An accessible & utility-first component library to build your design system for all the platforms (web in beta).
      </Text>
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="green.500"
        borderRadius="lg"
        colorScheme="green"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        mt="24px"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#22c55e",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginTop": 24,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Let's get started
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading OverridenStyle 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      alignSelf="center"
      color="muted.700"
      fontSize={50}
      fontStyle="normal"
      fontWeight="bold"
      style={
        Array [
          Object {
            "alignSelf": "center",
            "color": "#404040",
            "fontSize": 50,
            "fontStyle": "normal",
            "fontWeight": "700",
          },
        ]
      }
    >
      I'm overriding this heading
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignSelf="center"
      style={
        Array [
          Object {
            "alignSelf": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="6xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 60,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        (4xl) Heading
      </Text>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="5xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 48,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        (3xl) Heading
      </Text>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="4xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 36,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        (2xl) Heading
      </Text>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        (xl) Heading
      </Text>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="2xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        (lg) Heading
      </Text>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        (md) Heading 
      </Text>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        (sm) Heading 
      </Text>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        (xs) Heading 
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Heading Truncate 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      color="muted.700"
      fontSize="3xl"
      fontStyle="normal"
      fontWeight="bold"
      numberOfLines={1}
      style={
        Array [
          Object {
            "color": "#404040",
            "fontSize": 30,
            "fontStyle": "normal",
            "fontWeight": "700",
          },
        ]
      }
    >
      Basic text writing, including headings, body text, lists, and more.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        bg="orange.300"
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#fdba74",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          This text will be always visible.
        </Text>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenFromAndToBreakpoints 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        bg="orange.300"
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#fdba74",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          This text will be always visible.
        </Text>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnColorModes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        bg="orange.300"
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#fdba74",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          This text will be visible on every colormode.
        </Text>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        bg="red.400"
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#f87171",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          This text will be hidden on dark mode
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnPlatforms 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        bg="orange.300"
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#fdba74",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          This text will be visible on every platform.
        </Text>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        bg="red.400"
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#f87171",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          This text will be hidden on android and web.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Hidden HiddenOnlyOnBreakPoints 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        bg="orange.300"
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#fdba74",
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          This text will be visible on every screen size.
        </Text>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon All Icons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={14}
            vbWidth={14}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGPath
                    d="M5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039z"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={16}
            vbWidth={16}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L9.41 8z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  fillRule={0}
                  propList={
                    Array [
                      "fill",
                      "fillRule",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                    ]
                  }
                  stroke={
                    Array [
                      2,
                    ]
                  }
                  strokeLinecap={2}
                  strokeWidth="2"
                >
                  <RNSVGCircle
                    cx="12"
                    cy="12"
                    fill={null}
                    propList={
                      Array [
                        "fill",
                        "stroke",
                      ]
                    }
                    r="11"
                    stroke={
                      Array [
                        2,
                      ]
                    }
                  />
                  <RNSVGLine
                    fill={null}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    x1="11.959"
                    x2="11.959"
                    y1="11"
                    y2="17"
                  />
                  <RNSVGCircle
                    cx="11.959"
                    cy="7"
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    r="1"
                    stroke={null}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGRect
                    height="4"
                    width="20"
                    x="2"
                    y="10"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm0,19a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,12,19Zm1.6-6.08a1,1,0,0,0-.6.917,1,1,0,1,1-2,0,3,3,0,0,1,1.8-2.75A2,2,0,1,0,10,9.255a1,1,0,1,1-2,0,4,4,0,1,1,5.6,3.666Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                    ]
                  }
                  stroke={
                    Array [
                      2,
                    ]
                  }
                  strokeWidth="1.5"
                >
                  <RNSVGPath
                    d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                    fill={null}
                    propList={
                      Array [
                        "fill",
                        "strokeLinecap",
                      ]
                    }
                    strokeLinecap={1}
                  />
                  <RNSVGPath
                    d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                    fill={null}
                    propList={
                      Array [
                        "fill",
                        "strokeLinecap",
                      ]
                    }
                    strokeLinecap={1}
                  />
                  <RNSVGCircle
                    cx="12"
                    cy="12"
                    fill={null}
                    propList={
                      Array [
                        "fill",
                        "strokeMiterlimit",
                      ]
                    }
                    r="11.25"
                    strokeMiterlimit={10}
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M23.384,21.619,16.855,15.09a9.284,9.284,0,1,0-1.768,1.768l6.529,6.529a1.266,1.266,0,0,0,1.768,0A1.251,1.251,0,0,0,23.384,21.619ZM2.75,9.5a6.75,6.75,0,1,1,6.75,6.75A6.758,6.758,0,0,1,2.75,9.5Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGGroup
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "stroke",
                      "strokeWidth",
                      "strokeLinecap",
                      "strokeLinejoin",
                    ]
                  }
                  stroke={
                    Array [
                      2,
                    ]
                  }
                  strokeLinecap={1}
                  strokeLinejoin={1}
                  strokeWidth="2"
                >
                  <RNSVGCircle
                    cx="12"
                    cy="12"
                    r="5"
                  />
                  <RNSVGPath
                    d="M12 1v2"
                  />
                  <RNSVGPath
                    d="M12 21v2"
                  />
                  <RNSVGPath
                    d="M4.22 4.22l1.42 1.42"
                  />
                  <RNSVGPath
                    d="M18.36 18.36l1.42 1.42"
                  />
                  <RNSVGPath
                    d="M1 12h2"
                  />
                  <RNSVGPath
                    d="M21 12h2"
                  />
                  <RNSVGPath
                    d="M4.22 19.78l1.42-1.42"
                  />
                  <RNSVGPath
                    d="M18.36 5.64l1.42-1.42"
                  />
                </RNSVGGroup>
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
        <View
          style={
            Array [
              Object {
                "width": 32,
              },
            ]
          }
          width={8}
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            meetOrSlice={0}
            minX={0}
            minY={0}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "height": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup>
                <RNSVGPath
                  d="M23.119,20,13.772,2.15h0a2,2,0,0,0-3.543,0L.881,20a2,2,0,0,0,1.772,2.928H21.347A2,2,0,0,0,23.119,20ZM11,8.423a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Zm1.05,11.51h-.028a1.528,1.528,0,0,1-1.522-1.47,1.476,1.476,0,0,1,1.448-1.53h.028A1.527,1.527,0,0,1,13.5,18.4,1.475,1.475,0,0,1,12.05,19.933Z"
                  fill={
                    Array [
                      2,
                    ]
                  }
                  propList={
                    Array [
                      "fill",
                      "stroke",
                    ]
                  }
                  stroke={null}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="column"
      style={
        Array [
          Object {
            "flexDirection": "column",
          },
        ]
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <Text
        allowFontScaling={false}
        fontSize="32px"
        lineHeight="32px"
        style={
          Array [
            Object {
              "color": "muted.800",
              "fontSize": 12,
            },
            Array [
              Object {
                "color": "#262626",
                "fontSize": 32,
                "height": 32,
                "lineHeight": 32,
                "width": 32,
              },
            ],
            Object {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            Object {},
          ]
        }
      >
        
      </Text>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={873}
        vbWidth={870}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGGroup
              fill={null}
              fillRule={1}
              propList={
                Array [
                  "fill",
                  "fillRule",
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={null}
              strokeWidth={1}
            >
              <RNSVGPath
                d="M435 .1C194.8.1.1 194.8.1 435c0 187.3 118.4 346.9 284.4 408.1 3.3-29.9 15-57.2 32.7-79.6 12.1-15.4 26.9-28.5 43.9-38.4 2.1-5 4.6-10.6 7.1-16.6-50.3-26-84.7-78.1-84.7-138.6 0-51.7 25.3-97.7 64-125.9-10.9-20.6-21.3-40.2-31.8-58.2-18.1-31.5-46.7-59.7-68.4-78.9-21 11.9-47.8 4.7-59.7-16.3-11.9-21-4.7-47.8 16.3-59.7 21-11.9 47.4-4.7 59.7 15.9v.4c7.2 12.7 7.2 27.5 1.8 39.8 22.8 19.5 56.8 52.5 77.8 89 9.8 17 19.5 34.7 29.3 53.5 20.3-9.4 42.7-14.8 66.2-14.8 21.3 0 41.6 4.3 60.1 11.9 9.8-18.5 19.5-36.2 28.9-52.8 21-36.2 54.6-68.7 77.4-88.3-5.4-12.3-5.4-26.8 1.8-39.4v-.4c12.3-20.6 38.7-27.9 59.3-15.9 21 11.9 28.2 38.7 16.3 59.3-11.9 21-38.4 28.2-59.3 16.3-21.7 18.8-49.9 47.4-68 78.5-10.1 17.4-20.3 36.5-30.8 56.4 42 27.9 69.8 75.3 69.8 129.5 0 63-36.9 116.9-90.4 141.5.9 2.7 2 4.9 3 7.2 47 22.3 81.1 67.4 87.9 121.1C755.9 776 869.9 618.8 869.9 435 869.9 194.8 675.2.1 435 .1z"
                fill={4291428352}
                propList={
                  Array [
                    "fill",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon CreateIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RNSVGSvgView
      accessibilityRole="image"
      align="xMidYMid"
      bbHeight={48}
      bbWidth={48}
      color={4294888138}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      size={12}
      stroke=""
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "color": "#fecaca",
              "height": 48,
              "width": 48,
            },
          ],
          Object {
            "flex": 0,
            "height": 48,
            "width": 48,
          },
        ]
      }
      tintColor={4294888138}
      vbHeight={200}
      vbWidth={200}
    >
      <RNSVGGroup
        propList={
          Array [
            "stroke",
          ]
        }
        stroke={null}
      >
        <RNSVGGroup>
          <RNSVGPath
            d="M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0"
            fill={4290763774}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            stroke={null}
          />
          <RNSVGCircle
            cx="50"
            cy="50"
            fill={4294692840}
            propList={
              Array [
                "fill",
                "stroke",
              ]
            }
            r="50"
            stroke={null}
          />
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon CustomIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RNSVGSvgView
      accessibilityRole="image"
      align="xMidYMid"
      bbHeight={32}
      bbWidth={32}
      color={4280690214}
      focusable={false}
      meetOrSlice={0}
      minX={0}
      minY={0}
      size={8}
      stroke=""
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          Array [
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
          ],
          Object {
            "flex": 0,
            "height": 32,
            "width": 32,
          },
        ]
      }
      tintColor={4280690214}
      vbHeight={873}
      vbWidth={870}
    >
      <RNSVGGroup
        propList={
          Array [
            "stroke",
          ]
        }
        stroke={null}
      >
        <RNSVGGroup>
          <RNSVGGroup
            fill={null}
            fillRule={1}
            propList={
              Array [
                "fill",
                "fillRule",
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={null}
            strokeWidth={1}
          >
            <RNSVGPath
              d="M435 .1C194.8.1.1 194.8.1 435c0 187.3 118.4 346.9 284.4 408.1 3.3-29.9 15-57.2 32.7-79.6 12.1-15.4 26.9-28.5 43.9-38.4 2.1-5 4.6-10.6 7.1-16.6-50.3-26-84.7-78.1-84.7-138.6 0-51.7 25.3-97.7 64-125.9-10.9-20.6-21.3-40.2-31.8-58.2-18.1-31.5-46.7-59.7-68.4-78.9-21 11.9-47.8 4.7-59.7-16.3-11.9-21-4.7-47.8 16.3-59.7 21-11.9 47.4-4.7 59.7 15.9v.4c7.2 12.7 7.2 27.5 1.8 39.8 22.8 19.5 56.8 52.5 77.8 89 9.8 17 19.5 34.7 29.3 53.5 20.3-9.4 42.7-14.8 66.2-14.8 21.3 0 41.6 4.3 60.1 11.9 9.8-18.5 19.5-36.2 28.9-52.8 21-36.2 54.6-68.7 77.4-88.3-5.4-12.3-5.4-26.8 1.8-39.4v-.4c12.3-20.6 38.7-27.9 59.3-15.9 21 11.9 28.2 38.7 16.3 59.3-11.9 21-38.4 28.2-59.3 16.3-21.7 18.8-49.9 47.4-68 78.5-10.1 17.4-20.3 36.5-30.8 56.4 42 27.9 69.8 75.3 69.8 129.5 0 63-36.9 116.9-90.4 141.5.9 2.7 2 4.9 3 7.2 47 22.3 81.1 67.4 87.9 121.1C755.9 776 869.9 618.8 869.9 435 869.9 194.8 675.2.1 435 .1z"
              fill={4291428352}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGPath
              d="M284.8 843.3h.1-.1zM284.8 843.3c-.1 0-.3-.1-.4-.1.2 0 .3 0 .4.1z"
              fill={4294967295}
              propList={
                Array [
                  "fill",
                ]
              }
            />
            <RNSVGGroup
              fill={4294967295}
              propList={
                Array [
                  "fill",
                  "stroke",
                  "strokeWidth",
                ]
              }
              stroke={4294967295}
              strokeWidth={5}
            >
              <RNSVGPath
                d="M485.2 5.8c-20.6-11.9-47-4.7-59.3 15.9v.4c-7.2 12.7-7.2 27.1-1.8 39.4-22.8 19.5-56.4 52.1-77.4 88.3-9.4 16.6-19.2 34.4-28.9 52.8-18.5-7.6-38.7-11.9-60.1-11.9-23.5 0-45.9 5.4-66.2 14.8-9.8-18.8-19.5-36.5-29.3-53.5-21-36.5-55-69.5-77.8-89 5.4-12.3 5.4-27.1-1.8-39.8v-.4C70.3 2.2 43.9-5.1 22.9 6.9 1.9 18.8-5.3 45.6 6.6 66.6c11.9 21 38.7 28.2 59.7 16.3 21.7 19.2 50.3 47.4 68.4 78.9 10.5 18.1 21 37.6 31.8 58.2-38.7 28.2-64 74.2-64 125.9 0 60.4 34.4 112.5 84.7 138.6-2.5 6.2-5.1 11.9-7.2 17-41.6 24.4-70.8 67.4-76.4 117.6 46.9 17.3 97.6 26.8 150.6 26.8 56.2 0 109.9-10.7 159.2-30.1-7.1-52.8-40.5-97.3-86.8-119.8-1.1-2.9-2.5-5.4-3.6-8.7 53.5-24.6 90.4-78.5 90.4-141.5 0-54.3-27.9-101.7-69.8-129.5 10.5-19.9 20.6-39.1 30.8-56.4 18.1-31.1 46.3-59.7 68-78.5 21 11.9 47.4 4.7 59.3-16.3 11.7-20.5 4.5-47.3-16.5-59.3z"
                matrix={
                  Array [
                    1,
                    0,
                    0,
                    1,
                    181,
                    224,
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Icon Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={40}
          bbWidth={40}
          color={4280690214}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          size="10"
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Array [
                Object {
                  "color": "#262626",
                  "height": 40,
                  "width": 40,
                },
              ],
              Object {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          tintColor={4280690214}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
        <View
          style={
            Array [
              Object {
                "width": 16,
              },
            ]
          }
          width={4}
        />
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={50}
          bbWidth={50}
          color={4280690214}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          size="50px"
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Array [
                Object {
                  "color": "#262626",
                  "height": 50,
                  "width": 50,
                },
              ],
              Object {
                "flex": 0,
                "height": 50,
                "width": 50,
              },
            ]
          }
          tintColor={4280690214}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
        <View
          style={
            Array [
              Object {
                "width": 16,
              },
            ]
          }
          width={4}
        />
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={64}
          bbWidth={64}
          color={4280690214}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          size={16}
          stroke=""
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Array [
                Object {
                  "color": "#262626",
                  "height": 64,
                  "width": 64,
                },
              ],
              Object {
                "flex": 0,
                "height": 64,
                "width": 64,
              },
            ]
          }
          tintColor={4280690214}
          vbHeight={24}
          vbWidth={24}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
              ]
            }
            stroke={null}
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
                fill={
                  Array [
                    2,
                  ]
                }
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          fontSize="40px"
          lineHeight="40px"
          style={
            Array [
              Object {
                "color": "muted.800",
                "fontSize": "10",
              },
              Array [
                Object {
                  "color": "#262626",
                  "fontSize": 40,
                  "height": 40,
                  "lineHeight": 40,
                  "width": 40,
                },
              ],
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Array [
              Object {
                "width": 16,
              },
            ]
          }
          width={4}
        />
        <Text
          allowFontScaling={false}
          fontSize="50px"
          lineHeight="50px"
          style={
            Array [
              Object {
                "color": "muted.800",
                "fontSize": "50px",
              },
              Array [
                Object {
                  "color": "#262626",
                  "fontSize": 50,
                  "height": 50,
                  "lineHeight": 50,
                  "width": 50,
                },
              ],
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <View
          style={
            Array [
              Object {
                "width": 16,
              },
            ]
          }
          width={4}
        />
        <Text
          allowFontScaling={false}
          fontSize="64px"
          lineHeight="64px"
          style={
            Array [
              Object {
                "color": "muted.800",
                "fontSize": 16,
              },
              Array [
                Object {
                  "color": "#262626",
                  "fontSize": 64,
                  "height": 64,
                  "lineHeight": 64,
                  "width": 64,
                },
              ],
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={true}
        bg="red.500"
        borderRadius="lg"
        colorScheme="red"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#ef4444",
              "borderRadius": 6,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
        variant="ghost"
      >
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          style={
            Array [
              Object {
                "color": "amber.100",
                "fontSize": 8,
              },
              Array [
                Object {
                  "color": "#fef3c7",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        accessible={true}
        border="1px solid"
        borderColor="emerald.500"
        borderRadius="lg"
        colorScheme="emerald"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        p={2}
        style={
          Array [
            Object {
              "borderColor": "#10b981",
              "borderRadius": 6,
              "borderStyle": "solid",
              "borderWidth": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
        variant="ghost"
      >
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          style={
            Array [
              Object {
                "color": "emerald.500",
                "fontSize": 8,
              },
              Array [
                Object {
                  "color": "#10b981",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton SVGIcon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={true}
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
        variant="ghost"
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={40}
          bbWidth={40}
          color={4287874557}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          size={10}
          stroke=""
          strokeWidth="10"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Array [
                Object {
                  "color": "#93c5fd",
                  "height": 40,
                  "width": 40,
                },
              ],
              Object {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          tintColor={4287874557}
          vbHeight={200}
          vbWidth={200}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={null}
            strokeWidth="10"
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0"
                fill={4287874557}
                propList={
                  Array [
                    "fill",
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={4294747557}
                strokeWidth="10"
              />
              <RNSVGCircle
                cx="100"
                cy="100"
                fill={4294692840}
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                r="50"
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={true}
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
        variant="ghost"
      >
        <RNSVGSvgView
          accessibilityRole="image"
          align="xMidYMid"
          bbHeight={40}
          bbWidth={40}
          color={4294638330}
          focusable={false}
          meetOrSlice={0}
          minX={0}
          minY={0}
          size={10}
          stroke=""
          strokeWidth="10"
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              Array [
                Object {
                  "color": "#fafafa",
                  "height": 40,
                  "width": 40,
                },
              ],
              Object {
                "flex": 0,
                "height": 40,
                "width": 40,
              },
            ]
          }
          tintColor={4294638330}
          vbHeight={200}
          vbWidth={200}
        >
          <RNSVGGroup
            propList={
              Array [
                "stroke",
                "strokeWidth",
              ]
            }
            stroke={null}
            strokeWidth="10"
          >
            <RNSVGGroup>
              <RNSVGPath
                d="M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0"
                fill={4287874557}
                propList={
                  Array [
                    "fill",
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={4294747557}
                strokeWidth="10"
              />
              <RNSVGCircle
                cx="100"
                cy="100"
                fill={4294692840}
                propList={
                  Array [
                    "fill",
                    "stroke",
                  ]
                }
                r="50"
                stroke={null}
              />
            </RNSVGGroup>
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessible={true}
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          p={1}
          style={
            Array [
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              },
            ]
          }
          variant="ghost"
        >
          <Text
            allowFontScaling={false}
            fontSize="32px"
            lineHeight="32px"
            style={
              Array [
                Object {
                  "color": "gray.50",
                  "fontSize": 8,
                },
                Array [
                  Object {
                    "color": "#fafafa",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessible={true}
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          p={2}
          style={
            Array [
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
              },
            ]
          }
          variant="ghost"
        >
          <Text
            allowFontScaling={false}
            fontSize="32px"
            lineHeight="32px"
            style={
              Array [
                Object {
                  "color": "gray.50",
                  "fontSize": 8,
                },
                Array [
                  Object {
                    "color": "#fafafa",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessible={true}
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          p={3}
          style={
            Array [
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              },
            ]
          }
          variant="ghost"
        >
          <Text
            allowFontScaling={false}
            fontSize="32px"
            lineHeight="32px"
            style={
              Array [
                Object {
                  "color": "gray.50",
                  "fontSize": 8,
                },
                Array [
                  Object {
                    "color": "#fafafa",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots IconButton Variant 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        accessible={true}
        border="1px solid"
        borderColor="amber.500"
        borderRadius="lg"
        colorScheme="amber"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        p={2}
        style={
          Array [
            Object {
              "borderColor": "#f59e0b",
              "borderRadius": 6,
              "borderStyle": "solid",
              "borderWidth": 1,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
        variant="ghost"
      >
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          style={
            Array [
              Object {
                "color": "amber.500",
                "fontSize": 8,
              },
              Array [
                Object {
                  "color": "#f59e0b",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 16,
            },
          ]
        }
        width={4}
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={true}
        bg="amber.500"
        borderRadius="lg"
        colorScheme="amber"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "#f59e0b",
              "borderRadius": 6,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
        variant="ghost"
      >
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          style={
            Array [
              Object {
                "color": "gray.50",
                "fontSize": 8,
              },
              Array [
                Object {
                  "color": "#fafafa",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 16,
            },
          ]
        }
        width={4}
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={true}
        bg="transparent"
        borderRadius="lg"
        colorScheme="amber"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        p={2}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 6,
              "paddingBottom": 8,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 8,
            },
          ]
        }
        variant="ghost"
      >
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          style={
            Array [
              Object {
                "color": "muted.800",
                "fontSize": 8,
              },
              Array [
                Object {
                  "color": "#262626",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "anticon",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="Alternate Text"
      alt="Alternate Text"
      maxWidth="100%"
      onError={[Function]}
      size={32}
      source={
        Object {
          "uri": "https://wallpaperaccess.com/full/317501.jpg",
        }
      }
      style={
        Array [
          Object {
            "height": 128,
            "maxWidth": "100%",
            "width": 128,
          },
        ]
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image BorderRadius 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="Alternate Text"
      alt="Alternate Text"
      borderRadius={100}
      maxWidth="100%"
      onError={[Function]}
      resizeMode="contain"
      size={150}
      source={
        Object {
          "uri": "https://wallpaperaccess.com/full/317501.jpg",
        }
      }
      style={
        Array [
          Object {
            "borderRadius": 100,
            "height": 150,
            "maxWidth": "100%",
            "width": 150,
          },
        ]
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image FallbackElement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fafafa",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      _disabled={
        Object {
          "opacity": 0.5,
        }
      }
      _focusVisible={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
          "style": Object {},
        }
      }
      _hover={
        Object {
          "bg": "rgba(165, 243, 252, 0.5)",
        }
      }
      _pressed={
        Object {
          "bg": "rgba(165, 243, 252, 0.6)",
        }
      }
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "transparent",
          "borderRadius": 8,
          "paddingBottom": 8,
          "paddingLeft": 8,
          "paddingRight": 8,
          "paddingTop": 8,
          "position": "absolute",
          "right": 32,
          "top": 48,
        }
      }
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Object {
              "color": "#262626",
              "height": 32,
              "width": 32,
            },
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="fallback text"
      alt="fallback text"
      onError={[Function]}
      source={
        Object {
          "uri": "https://cdn.pixaba.com/photo/2015/04/19/08/32/marguerite-729510__340.jpg",
        }
      }
      style={
        Object {
          "borderRadius": 2,
          "height": 150,
          "maxWidth": "100%",
          "width": 150,
        }
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image FallbackSupport 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="fallback text"
      alt="fallback text"
      borderRadius={100}
      maxWidth="100%"
      onError={[Function]}
      size={150}
      source={
        Object {
          "uri": "https://-page-icon.png",
        }
      }
      style={
        Array [
          Object {
            "borderRadius": 100,
            "height": 150,
            "maxWidth": "100%",
            "width": 150,
          },
        ]
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={Object {}}
      style={
        Array [
          Object {},
        ]
      }
    >
      <View>
        <View
          alignItems="center"
          my={6}
          style={
            Array [
              Object {
                "alignItems": "center",
                "marginBottom": 24,
                "marginTop": 24,
              },
            ]
          }
        >
          <Image
            accessibilityLabel="Alternate Text xs"
            alt="Alternate Text xs"
            maxWidth="100%"
            onError={[Function]}
            resizeMode="cover"
            size={10}
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Array [
                Object {
                  "height": 40,
                  "maxWidth": "100%",
                  "width": 40,
                },
              ]
            }
          />
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <Image
            accessibilityLabel="Alternate Text sm"
            alt="Alternate Text sm"
            maxWidth="100%"
            onError={[Function]}
            resizeMode="cover"
            size={16}
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Array [
                Object {
                  "height": 64,
                  "maxWidth": "100%",
                  "width": 64,
                },
              ]
            }
          />
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <Image
            accessibilityLabel="Alternate Text md"
            alt="Alternate Text md"
            maxWidth="100%"
            onError={[Function]}
            resizeMode="cover"
            size={20}
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Array [
                Object {
                  "height": 80,
                  "maxWidth": "100%",
                  "width": 80,
                },
              ]
            }
          />
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <Image
            accessibilityLabel="Alternate Text lg"
            alt="Alternate Text lg"
            maxWidth="100%"
            onError={[Function]}
            resizeMode="cover"
            size={24}
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Array [
                Object {
                  "height": 96,
                  "maxWidth": "100%",
                  "width": 96,
                },
              ]
            }
          />
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <Image
            accessibilityLabel="Alternate Text xl"
            alt="Alternate Text xl"
            maxWidth="100%"
            onError={[Function]}
            resizeMode="cover"
            size={32}
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Array [
                Object {
                  "height": 128,
                  "maxWidth": "100%",
                  "width": 128,
                },
              ]
            }
          />
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <Image
            accessibilityLabel="Alternate Text 2xl"
            alt="Alternate Text 2xl"
            maxWidth="100%"
            onError={[Function]}
            resizeMode="cover"
            size={64}
            source={
              Object {
                "uri": "https://wallpaperaccess.com/full/317501.jpg",
              }
            }
            style={
              Array [
                Object {
                  "height": 256,
                  "maxWidth": "100%",
                  "width": 256,
                },
              ]
            }
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Image WithRef 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Image
      accessibilityLabel="Alternate Text"
      alt="Alternate Text"
      maxWidth="100%"
      onError={[Function]}
      size={32}
      source={
        Object {
          "uri": "https://wallpaperaccess.com/full/317501.jpg",
        }
      }
      style={
        Array [
          Object {
            "height": 128,
            "maxWidth": "100%",
            "width": 128,
          },
        ]
      }
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Addons 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        display="flex"
        flexDirection="row"
        style={
          Array [
            Object {
              "display": "flex",
              "flexDirection": "row",
              "width": "100%",
            },
          ]
        }
        w="100%"
      >
        <View
          bg="gray.50"
          borderColor="gray.300"
          borderRightWidth={0}
          borderWidth={1}
          mr={0}
          p={3}
          roundedLeft={4}
          roundedRight={0}
          style={
            Array [
              Object {
                "backgroundColor": "#fafafa",
                "borderBottomLeftRadius": 4,
                "borderBottomRightRadius": 0,
                "borderColor": "#d4d4d8",
                "borderRightWidth": 0,
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 0,
                "borderWidth": 1,
                "marginRight": 0,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              },
            ]
          }
        >
          <View
            m="auto"
            style={
              Array [
                Object {
                  "marginBottom": "auto",
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": "auto",
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              https://
            </Text>
          </View>
        </View>
        <TextInput
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          borderColor="muted.200"
          borderRadius="lg"
          borderWidth={1}
          color="black"
          editable={true}
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          ml={0}
          mr={0}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="nativebase"
          placeholderTextColor="#94a3b8"
          px={4}
          py={3}
          rejectResponderTermination={true}
          roundedLeft={0}
          roundedRight={0}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "borderBottomLeftRadius": 0,
                "borderBottomRightRadius": 0,
                "borderColor": "#e5e5e5",
                "borderRadius": 6,
                "borderTopLeftRadius": 0,
                "borderTopRightRadius": 0,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "marginLeft": 0,
                "marginRight": 0,
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
                "width": "50%",
              },
            ]
          }
          underlineColorAndroid="transparent"
          variant="outline"
          w="50%"
        />
        <View
          bg="gray.50"
          borderColor="gray.300"
          borderLeftWidth={0}
          borderWidth={1}
          ml={0}
          p={3}
          roundedLeft={0}
          roundedRight={4}
          style={
            Array [
              Object {
                "backgroundColor": "#fafafa",
                "borderBottomLeftRadius": 0,
                "borderBottomRightRadius": 4,
                "borderColor": "#d4d4d8",
                "borderLeftWidth": 0,
                "borderTopLeftRadius": 0,
                "borderTopRightRadius": 4,
                "borderWidth": 1,
                "marginLeft": 0,
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              },
            ]
          }
        >
          <View
            m="auto"
            style={
              Array [
                Object {
                  "marginBottom": "auto",
                  "marginLeft": "auto",
                  "marginRight": "auto",
                  "marginTop": "auto",
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              .io
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Elements 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        alignItems="center"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        display="flex"
        flexDirection="row"
        justifyContent="space-between"
        overflow="hidden"
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "overflow": "hidden",
            },
          ]
        }
      >
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          m={2}
          style={
            Array [
              Object {
                "color": "black",
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "marginBottom": 8,
                  "marginLeft": 8,
                  "marginRight": 8,
                  "marginTop": 8,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
        <TextInput
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          borderColor="muted.200"
          borderRadius="lg"
          borderWidth={0}
          color="black"
          editable={true}
          flex={1}
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Input"
          placeholderTextColor="#94a3b8"
          px={4}
          py={3}
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 6,
                "borderWidth": 0,
                "color": "#000000",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          underlineColorAndroid="transparent"
          variant="outline"
        />
        <Text
          allowFontScaling={false}
          fontSize="32px"
          lineHeight="32px"
          m={2}
          style={
            Array [
              Object {
                "color": "black",
                "fontSize": 12,
              },
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 32,
                  "height": 32,
                  "lineHeight": 32,
                  "marginBottom": 8,
                  "marginLeft": 8,
                  "marginRight": 8,
                  "marginTop": 8,
                  "width": 32,
                },
              ],
              Object {
                "fontFamily": "material",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      isInvalid={true}
      isRequired={true}
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        mx={2}
        style={
          Array [
            Object {
              "marginLeft": 8,
              "marginRight": 8,
            },
          ]
        }
      >
        <View
          flexDirection="row"
          justifyContent="flex-start"
          mb={2}
          mr={3}
          nativeID="field-react-aria-0-2-label"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Form Controlled Input
          </Text>
          <Text
            color="error.400"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            *
          </Text>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <TextInput
          accessibilityInvalid={true}
          accessibilityRequired={true}
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          borderColor="error.600"
          borderRadius="lg"
          borderWidth={1}
          color="black"
          disabled={false}
          editable={true}
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          isRequired={true}
          my={2}
          nativeID="field-react-aria-0-2"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="FormControl is providing me isInvalid prop"
          placeholderTextColor="#94a3b8"
          px={4}
          py={3}
          readOnly={false}
          rejectResponderTermination={true}
          required={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "borderColor": "#dc2626",
                "borderRadius": 6,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "marginBottom": 8,
                "marginTop": 8,
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          underlineColorAndroid="transparent"
          variant="outline"
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          mt={2}
          nativeID="field-react-aria-0-2-feedback"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="muted.500"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#737373",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            I am a Helper text 😊
          </Text>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          mt={2}
          nativeID="field-react-aria-0-2-helptext"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="error.400"
            fontSize="xs"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            I'll only appear when FormControl have isInvalid props.
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Password 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      borderColor="muted.200"
      borderRadius="lg"
      borderWidth={1}
      display="flex"
      flexDirection="row"
      justifyContent="space-between"
      overflow="hidden"
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderColor": "#e5e5e5",
            "borderRadius": 6,
            "borderWidth": 1,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "overflow": "hidden",
          },
        ]
      }
    >
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={0}
        color="black"
        editable={true}
        flex={1}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Password"
        placeholderTextColor="#a3a3a3"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={true}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 0,
              "color": "#000000",
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        ml={1}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        roundedLeft={0}
        roundedRight="md"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderBottomLeftRadius": 0,
              "borderBottomRightRadius": 4,
              "borderRadius": 6,
              "borderTopLeftRadius": 0,
              "borderTopRightRadius": 4,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginLeft": 4,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Show
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Primary 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <TextInput
      accessible={true}
      allowFontScaling={true}
      background="transparent"
      borderColor="muted.200"
      borderRadius="lg"
      borderWidth={1}
      color="black"
      editable={true}
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      mx={3}
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholder="Default Input"
      placeholderTextColor="#94a3b8"
      px={4}
      py={3}
      rejectResponderTermination={true}
      secureTextEntry={false}
      style={
        Array [
          Object {
            "borderColor": "#e5e5e5",
            "borderRadius": 6,
            "borderWidth": 1,
            "color": "#000000",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "marginLeft": 12,
            "marginRight": 12,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      underlineColorAndroid="transparent"
      variant="outline"
      w="100%"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Size  1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          Input Sizes
        </Text>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="xs"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="xs Input"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="sm"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="sm Input"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="md Input"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="lg"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="lg Input"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="xl"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="xl Input"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="2xl"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="2xl Input"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Value Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <TextInput
      accessible={true}
      allowFontScaling={true}
      background="transparent"
      borderColor="muted.200"
      borderRadius="lg"
      borderWidth={1}
      color="black"
      editable={true}
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholder="Value Controlled Input"
      placeholderTextColor="#a3a3a3"
      px={4}
      py={3}
      rejectResponderTermination={true}
      secureTextEntry={false}
      style={
        Array [
          Object {
            "borderColor": "#e5e5e5",
            "borderRadius": 6,
            "borderWidth": 1,
            "color": "#000000",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      underlineColorAndroid="transparent"
      value=""
      variant="outline"
      width="100%"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Input Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          Input Variants
        </Text>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Outline"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        _text={
          Object {
            "color": "darkText",
          }
        }
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        bg="muted.200"
        borderColor="transparent"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Filled"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "backgroundColor": "#e5e5e5",
              "borderColor": "transparent",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderBottomWidth={1}
        borderColor="muted.200"
        borderRadius={0}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Underlined"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderBottomWidth": 1,
              "borderColor": "#e5e5e5",
              "borderRadius": 0,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={0}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Unstyled"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 0,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="25"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Round"
        placeholderTextColor="#94a3b8"
        px={4}
        py={3}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 25,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots KeyboardAvoidingView Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      h="600px"
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "height": 600,
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        flex={1}
        justifyContent="space-around"
        p={6}
        style={
          Array [
            Object {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "justifyContent": "space-around",
              "paddingBottom": 24,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 24,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize={36}
          fontStyle="normal"
          fontWeight={400}
          mb={12}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 36,
                "fontStyle": "normal",
                "fontWeight": "400",
                "marginBottom": 48,
              },
            ]
          }
        >
          Header
        </Text>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <TextInput
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          borderBottomWidth="1px"
          borderColor="muted.200"
          borderRadius="lg"
          borderWidth={1}
          color="black"
          editable={true}
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          mb={9}
          mt="auto"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Username"
          placeholderTextColor="#a3a3a3"
          px={4}
          py={3}
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "borderBottomWidth": 1,
                "borderColor": "#e5e5e5",
                "borderRadius": 6,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "marginBottom": 36,
                "marginTop": "auto",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          underlineColorAndroid="transparent"
          variant="outline"
        />
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Submit
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Composite Link Example 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="link"
      accessible={true}
      flexDirection="row"
      focusable={true}
      height="auto"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": "auto",
            "width": "auto",
          },
        ]
      }
      width="auto"
    >
      <View
        bg="gray.100"
        borderRadius="md"
        overflow="hidden"
        p={6}
        padding={4}
        py={8}
        style={
          Array [
            Object {
              "backgroundColor": "#f4f4f5",
              "borderRadius": 4,
              "overflow": "hidden",
              "paddingBottom": 32,
              "paddingLeft": 24,
              "paddingRight": 24,
              "paddingTop": 32,
              "width": 256,
            },
            Object {
              "elevation": 5,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.25,
              "shadowRadius": 3.84,
            },
          ]
        }
        width={64}
      >
        <View
          alignItems="center"
          style={
            Array [
              Object {
                "alignItems": "center",
              },
            ]
          }
        >
          <View
            alignItems="center"
            bg="gray.600"
            borderColor="gray.800"
            borderRadius="full"
            fontSize="xl"
            height="16"
            justifyContent="center"
            name="avatar"
            position="relative"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#52525b",
                  "borderColor": "#27272a",
                  "borderRadius": 9999,
                  "fontSize": 20,
                  "height": 64,
                  "justifyContent": "center",
                  "position": "relative",
                  "width": 64,
                },
              ]
            }
            width="16"
          >
            <Image
              accessibilityLabel="--"
              alt="--"
              borderRadius="full"
              maxWidth="100%"
              onError={[Function]}
              source={
                Object {
                  "uri": "https://docs.nativebase.io/img/nativebaselogo.svg",
                }
              }
              style={
                Array [
                  Object {
                    "borderRadius": 9999,
                    "maxWidth": "100%",
                  },
                  undefined,
                  Object {
                    "height": "100%",
                    "width": "100%",
                  },
                ]
              }
            />
          </View>
          <View
            height={5}
            style={
              Array [
                Object {
                  "height": 20,
                },
              ]
            }
          />
          <Text
            color="blueGray.700"
            fontSize="2xl"
            fontStyle="normal"
            fontWeight={700}
            style={
              Array [
                Object {
                  "color": "#334155",
                  "fontSize": 24,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            NativeBase
          </Text>
          <View
            height={5}
            style={
              Array [
                Object {
                  "height": 20,
                },
              ]
            }
          />
          <Text
            color="blueGray.500"
            fontSize={12}
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#64748b",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "textAlign": "center",
                },
              ]
            }
            textAlign="center"
          >
            NativeBase is a component library that enables devs to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS and the Web.
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Custom Function onPress Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="link"
      accessible={true}
      flexDirection="row"
      focusable={true}
      height="auto"
      mt={4}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": "auto",
            "marginTop": 16,
            "width": "auto",
          },
        ]
      }
      width="auto"
    >
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "textDecorationLine": "none",
            },
          ]
        }
        textDecorationLine="none"
      >
        Click here to toggle the color of box.
      </Text>
    </View>
    <View
      bg="blue.300"
      h="100"
      mt={4}
      style={
        Array [
          Object {
            "backgroundColor": "#93c5fd",
            "height": 100,
            "marginTop": 16,
            "width": 100,
          },
        ]
      }
      w="100"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Default Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="link"
      accessible={true}
      flexDirection="row"
      focusable={true}
      height="auto"
      mt={4}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": "auto",
            "marginTop": 16,
            "width": "auto",
          },
        ]
      }
      width="auto"
    >
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "textDecorationLine": "none",
            },
          ]
        }
        textDecorationLine="none"
      >
        Click here to open documentation.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link External Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      color="muted.700"
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      mx={24}
      style={
        Array [
          Object {
            "color": "#404040",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "marginLeft": 96,
            "marginRight": 96,
          },
        ]
      }
    >
      NativeBase is a component library that enables devs to build universal design systems. It is built on top of React Native, allowing you to develop apps for Android, iOS and the Web.
      <View
        accessibilityRole="link"
        accessible={true}
        flexDirection="row"
        focusable={true}
        height="auto"
        mb={-2}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
              "height": "auto",
              "marginBottom": -8,
              "width": "auto",
            },
          ]
        }
        width="auto"
      >
        <Text
          color="blue.400"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#60a5fa",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "textDecorationLine": "none",
              },
            ]
          }
          textDecorationLine="none"
        >
           
        </Text>
        <Text
          color="blue.400"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#60a5fa",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "textDecorationLine": "none",
              },
            ]
          }
          textDecorationLine="none"
        >
          Read More
        </Text>
      </View>
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Link Underline Link 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityRole="link"
      accessible={true}
      flexDirection="row"
      focusable={true}
      height="auto"
      mt={4}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "row",
            "height": "auto",
            "marginTop": 16,
            "width": "auto",
          },
        ]
      }
      width="auto"
    >
      <Text
        color="purple.400"
        fontSize="xl"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#c084fc",
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "400",
              "textDecorationLine": "underline",
            },
          ]
        }
        textDecorationLine="underline"
      >
        Click me to open NativeBase website.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "80%",
          },
        ]
      }
      w="80%"
    >
      <Text
        color="muted.700"
        fontSize={24}
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Topics (Plain List)
      </Text>
      <View
        borderColor="gray.300"
        borderWidth={1}
        my={2}
        py={2}
        style={
          Array [
            Object {
              "borderColor": "#d4d4d8",
              "borderWidth": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          borderTopWidth={0}
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "borderTopWidth": 0,
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          />
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Education
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          />
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Health
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          />
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Office
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          />
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Sports
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List List with Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      borderColor="gray.300"
      borderWidth={1}
      mt={2}
      my={2}
      py={2}
      style={
        Array [
          Object {
            "borderColor": "#d4d4d8",
            "borderWidth": 1,
            "marginBottom": 8,
            "marginTop": 8,
            "paddingBottom": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <View
        accessibilityLabel="List-Item-1"
        accessibilityRole="text"
        alignItems="center"
        borderColor="gray.300"
        borderTopWidth={0}
        flexDirection="row"
        py={2}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "borderTopWidth": 0,
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <View
          alignItems="center"
          flexDirection="row"
          pl={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              },
            ]
          }
        />
        <View
          alignItems="center"
          flex={1}
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Inbox
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        accessibilityLabel="List-Item-2"
        accessibilityRole="text"
        alignItems="center"
        borderColor="gray.300"
        flexDirection="row"
        py={2}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <View
          alignItems="center"
          flexDirection="row"
          pl={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              },
            ]
          }
        />
        <View
          alignItems="center"
          flex={1}
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            fontSize="32px"
            lineHeight="32px"
            meetOrSlice={0}
            minX={0}
            minY={0}
            mr={8}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              font={
                Object {
                  "fontSize": 32,
                }
              }
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={
                  Array [
                    2,
                  ]
                }
                strokeWidth="1.5"
              >
                <RNSVGPath
                  d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGPath
                  d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGCircle
                  cx="12"
                  cy="12"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeMiterlimit",
                    ]
                  }
                  r="11.25"
                  strokeMiterlimit={10}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Drafts
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        accessibilityLabel="List-Item-3"
        accessibilityRole="text"
        alignItems="center"
        borderColor="gray.300"
        flexDirection="row"
        py={2}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <View
          alignItems="center"
          flexDirection="row"
          pl={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              },
            ]
          }
        />
        <View
          alignItems="center"
          flex={1}
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            fontSize="32px"
            lineHeight="32px"
            meetOrSlice={0}
            minX={0}
            minY={0}
            mr={8}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              font={
                Object {
                  "fontSize": 32,
                }
              }
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={
                  Array [
                    2,
                  ]
                }
                strokeWidth="1.5"
              >
                <RNSVGPath
                  d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGPath
                  d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGCircle
                  cx="12"
                  cy="12"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeMiterlimit",
                    ]
                  }
                  r="11.25"
                  strokeMiterlimit={10}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Graphs and stats
          </Text>
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
      <View
        accessibilityLabel="List-Item-4"
        accessibilityRole="text"
        alignItems="center"
        borderColor="gray.300"
        flexDirection="row"
        py={2}
        style={
          Array [
            Object {
              "alignItems": "center",
              "borderColor": "#d4d4d8",
              "flexDirection": "row",
              "paddingBottom": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <View
          alignItems="center"
          flexDirection="row"
          pl={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "paddingLeft": 8,
              },
            ]
          }
        />
        <View
          alignItems="center"
          flex={1}
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexBasis": 0,
                "flexDirection": "row",
                "flexGrow": 1,
                "flexShrink": 1,
              },
            ]
          }
        >
          <RNSVGSvgView
            accessibilityRole="image"
            align="xMidYMid"
            bbHeight={32}
            bbWidth={32}
            color={4280690214}
            focusable={false}
            fontSize="32px"
            lineHeight="32px"
            meetOrSlice={0}
            minX={0}
            minY={0}
            mr={8}
            size={8}
            stroke=""
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                Array [
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                  Object {
                    "color": "#262626",
                    "fontSize": 32,
                    "height": 32,
                    "lineHeight": 32,
                    "marginRight": 32,
                    "width": 32,
                  },
                ],
                Object {
                  "flex": 0,
                  "height": 32,
                  "width": 32,
                },
              ]
            }
            tintColor={4280690214}
            vbHeight={24}
            vbWidth={24}
          >
            <RNSVGGroup
              font={
                Object {
                  "fontSize": 32,
                }
              }
              propList={
                Array [
                  "stroke",
                ]
              }
              stroke={null}
            >
              <RNSVGGroup
                propList={
                  Array [
                    "stroke",
                    "strokeWidth",
                  ]
                }
                stroke={
                  Array [
                    2,
                  ]
                }
                strokeWidth="1.5"
              >
                <RNSVGPath
                  d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGPath
                  d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeLinecap",
                    ]
                  }
                  strokeLinecap={1}
                />
                <RNSVGCircle
                  cx="12"
                  cy="12"
                  fill={null}
                  propList={
                    Array [
                      "fill",
                      "strokeMiterlimit",
                    ]
                  }
                  r="11.25"
                  strokeMiterlimit={10}
                />
              </RNSVGGroup>
            </RNSVGGroup>
          </RNSVGSvgView>
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Attachments
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List OrderedList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "80%",
          },
        ]
      }
      w="80%"
    >
      <Text
        color="muted.700"
        fontSize={24}
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Bill-#187 (Ordered List)
      </Text>
      <View
        borderColor="gray.300"
        borderWidth={1}
        my={2}
        py={2}
        style={
          Array [
            Object {
              "borderColor": "#d4d4d8",
              "borderWidth": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          borderTopWidth={0}
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "borderTopWidth": 0,
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                1.
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Fruit Juice x 2
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                2.
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Cheddar cheese - 200g
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                3.
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Milk 1L x 2
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                4.
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Brown Bread - 400g
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List Pressable List Items 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "80%",
          },
        ]
      }
      w="80%"
    >
      <Text
        _text={
          Object {
            "color": "darkText",
          }
        }
        bg="primary.400"
        color="white"
        fontSize={24}
        fontStyle="normal"
        fontWeight="bold"
        px={2}
        py={4}
        style={
          Array [
            Object {
              "backgroundColor": "#22d3ee",
              "color": "#FFFFFF",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
              "paddingBottom": 16,
              "paddingLeft": 8,
              "paddingRight": 8,
              "paddingTop": 16,
            },
          ]
        }
      >
        Default Theme Color (Pressable List Items)
      </Text>
      <View
        borderColor="gray.300"
        borderWidth={1}
        my={2}
        py={0}
        style={
          Array [
            Object {
              "borderColor": "#d4d4d8",
              "borderWidth": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 0,
              "paddingTop": 0,
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessibilityLabel="List-Item-1"
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.400"
          borderColor="gray.300"
          borderTopWidth={0}
          flexDirection="row"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          py={4}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#22d3ee",
                "borderColor": "#d4d4d8",
                "borderTopWidth": 0,
                "flexDirection": "row",
                "paddingBottom": 16,
                "paddingTop": 16,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          />
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text
              color="white"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              primary.400
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "darkText",
            }
          }
          accessibilityLabel="List-Item-2"
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="secondary.400"
          borderColor="gray.300"
          flexDirection="row"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          py={4}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f472b6",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 16,
                "paddingTop": 16,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          />
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              secondary.400
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityLabel="List-Item-3"
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="emerald.400"
          borderColor="gray.300"
          flexDirection="row"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          py={4}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#34d399",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 16,
                "paddingTop": 16,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          />
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              emerald.400
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityLabel="List-Item-4"
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="blue.400"
          borderColor="gray.300"
          flexDirection="row"
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          py={4}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#60a5fa",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 16,
                "paddingTop": 16,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          />
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              blue.400
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List StylingList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "80%",
          },
        ]
      }
      w="80%"
    >
      <Text
        color="muted.700"
        fontSize={24}
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Styled List
      </Text>
      <View
        borderColor="gray.300"
        borderWidth={1}
        my={2}
        py={2}
        style={
          Array [
            Object {
              "borderColor": "#d4d4d8",
              "borderWidth": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <View
          accessibilityLabel="List-Item-11"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          borderTopWidth={0}
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "borderTopWidth": 0,
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                ]
              }
            >
              <Text
                color="amber.600"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#d97706",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                11.
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="amber.600"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#d97706",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Ocean's 
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-12"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                ]
              }
            >
              <Text
                color="red.200"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#fecaca",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                12.
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="red.200"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#fecaca",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Ocean's 
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-13"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                ]
              }
            >
              <Text
                color="teal.400"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#2dd4bf",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                13.
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="teal.400"
              fontSize="md"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#2dd4bf",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              Ocean's
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List UnorderedList 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "80%",
          },
        ]
      }
      w="80%"
    >
      <Text
        color="muted.700"
        fontSize={24}
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        My Todos (Unordered List)
      </Text>
      <View
        borderColor="gray.300"
        borderWidth={1}
        my={2}
        py={2}
        style={
          Array [
            Object {
              "borderColor": "#d4d4d8",
              "borderWidth": 1,
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 8,
              "paddingTop": 8,
            },
          ]
        }
      >
        <View
          accessibilityLabel="List-Item-1"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          borderTopWidth={0}
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "borderTopWidth": 0,
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Get groceries by Tomorrow.
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-2"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Book appointment with the Doc.
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-3"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Bill payment - Electricity.
            </Text>
          </View>
        </View>
        <View
          height={2}
          style={
            Array [
              Object {
                "height": 8,
              },
            ]
          }
        />
        <View
          accessibilityLabel="List-Item-4"
          accessibilityRole="text"
          alignItems="center"
          borderColor="gray.300"
          flexDirection="row"
          py={2}
          style={
            Array [
              Object {
                "alignItems": "center",
                "borderColor": "#d4d4d8",
                "flexDirection": "row",
                "paddingBottom": 8,
                "paddingTop": 8,
              },
            ]
          }
        >
          <View
            alignItems="center"
            flexDirection="row"
            pl={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "paddingLeft": 8,
                },
              ]
            }
          >
            <View
              mr={2}
              style={
                Array [
                  Object {
                    "marginRight": 8,
                  },
                  Object {
                    "transform": Array [
                      Object {
                        "scale": 1.5,
                      },
                    ],
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                •
              </Text>
            </View>
          </View>
          <View
            alignItems="center"
            flex={1}
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexBasis": 0,
                  "flexDirection": "row",
                  "flexGrow": 1,
                  "flexShrink": 1,
                },
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Pay Telephone Bill
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots List VirtualizedList  1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={4}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            alignItems="center"
            bg="emerald.200"
            borderColor="gray.300"
            borderRadius="md"
            borderTopWidth={0}
            flexDirection="row"
            justifyContent="center"
            my={2}
            px={4}
            py={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a7f3d0",
                  "borderColor": "#d4d4d8",
                  "borderRadius": 4,
                  "borderTopWidth": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              flexDirection="row"
              pl={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 8,
                  },
                ]
              }
            />
            <View
              alignItems="center"
              flex={1}
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                color="darkText"
                fontSize="2xl"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 24,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Item 1
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            alignItems="center"
            bg="emerald.200"
            borderColor="gray.300"
            borderRadius="md"
            borderTopWidth={0}
            flexDirection="row"
            justifyContent="center"
            my={2}
            px={4}
            py={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a7f3d0",
                  "borderColor": "#d4d4d8",
                  "borderRadius": 4,
                  "borderTopWidth": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              flexDirection="row"
              pl={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 8,
                  },
                ]
              }
            />
            <View
              alignItems="center"
              flex={1}
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                color="darkText"
                fontSize="2xl"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 24,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Item 2
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            alignItems="center"
            bg="emerald.200"
            borderColor="gray.300"
            borderRadius="md"
            borderTopWidth={0}
            flexDirection="row"
            justifyContent="center"
            my={2}
            px={4}
            py={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a7f3d0",
                  "borderColor": "#d4d4d8",
                  "borderRadius": 4,
                  "borderTopWidth": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              flexDirection="row"
              pl={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 8,
                  },
                ]
              }
            />
            <View
              alignItems="center"
              flex={1}
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                color="darkText"
                fontSize="2xl"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 24,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Item 3
              </Text>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            accessibilityLabel="List-Item-NaN"
            accessibilityRole="text"
            alignItems="center"
            bg="emerald.200"
            borderColor="gray.300"
            borderRadius="md"
            borderTopWidth={0}
            flexDirection="row"
            justifyContent="center"
            my={2}
            px={4}
            py={2}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#a7f3d0",
                  "borderColor": "#d4d4d8",
                  "borderRadius": 4,
                  "borderTopWidth": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              flexDirection="row"
              pl={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "paddingLeft": 8,
                  },
                ]
              }
            />
            <View
              alignItems="center"
              flex={1}
              flexDirection="row"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <Text
                color="darkText"
                fontSize="2xl"
                fontStyle="normal"
                fontWeight={400}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontSize": 24,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                    },
                  ]
                }
              >
                Item 4
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessibilityLabel="More options menu"
      accessible={true}
      aria-haspopup="menu"
      focusable={true}
      nativeID="react-aria-0-2"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDownCapture={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Group 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessible={true}
      aria-haspopup="menu"
      focusable={true}
      nativeID="react-aria-0-2"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDownCapture={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu Menu positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignSelf="flex-start"
      style={
        Array [
          Object {
            "alignSelf": "flex-start",
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        alignSelf="center"
        aria-haspopup="menu"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        nativeID="react-aria-0-2"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onKeyDownCapture={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Menu
            </Text>
          </View>
        </View>
      </View>
      <View
        height={6}
        style={
          Array [
            Object {
              "height": 24,
            },
          ]
        }
      />
      <View
        borderColor="transparent"
        borderRadius="lg"
        borderWidth={1}
        mx={0}
        style={
          Array [
            Object {
              "borderColor": "transparent",
              "borderRadius": 6,
              "borderWidth": 1,
              "marginLeft": 0,
              "marginRight": 0,
            },
          ]
        }
      >
        <View
          accessibilityLabel="Select your favorite programming language"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            pointerEvents="none"
          >
            <View
              alignItems="center"
              borderColor="muted.200"
              borderRadius="lg"
              borderWidth={1}
              display="flex"
              flexDirection="row"
              justifyContent="space-between"
              overflow="hidden"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 6,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "overflow": "hidden",
                  },
                ]
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-hidden={true}
                background="transparent"
                borderColor="muted.200"
                borderRadius="lg"
                borderWidth={0}
                color="black"
                editable={false}
                flex={1}
                focusable={false}
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                importantForAccessibility="no"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="Select your favorite programming language"
                placeholderTextColor="#a3a3a3"
                px={4}
                py={3}
                rejectResponderTermination={true}
                secureTextEntry={false}
                style={
                  Array [
                    Object {
                      "borderColor": "#e5e5e5",
                      "borderRadius": 6,
                      "borderWidth": 0,
                      "color": "#000000",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "paddingBottom": 12,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 12,
                    },
                  ]
                }
                underlineColorAndroid="transparent"
                value="auto"
                variant="outline"
              />
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={20}
                bbWidth={20}
                color={4280690214}
                focusable={false}
                mr={2}
                size={5}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#262626",
                        "height": 20,
                        "marginRight": 8,
                        "width": 20,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Menu MenuOptionsGroup 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessible={true}
      aria-haspopup="menu"
      focusable={true}
      nativeID="react-aria-0-2"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onKeyDownCapture={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M 3 5 A 1.0001 1.0001 0 1 0 3 7 L 21 7 A 1.0001 1.0001 0 1 0 21 5 L 3 5 z M 3 11 A 1.0001 1.0001 0 1 0 3 13 L 21 13 A 1.0001 1.0001 0 1 0 21 11 L 3 11 z M 3 17 A 1.0001 1.0001 0 1 0 3 19 L 21 19 A 1.0001 1.0001 0 1 0 21 17 L 3 17 z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Custom Backdrop 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Placement 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="column"
      style={
        Array [
          Object {
            "flexDirection": "column",
          },
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Top
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Bottom
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Center
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Left
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Right
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Ref Examples 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
    </View>
    <TextInput
      accessible={true}
      allowFontScaling={true}
      background="transparent"
      borderColor="muted.200"
      borderRadius="lg"
      borderWidth={1}
      color="black"
      editable={true}
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      mt={4}
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyPress={[Function]}
      placeholder="I'll receive focus on close"
      placeholderTextColor="#334155"
      px={4}
      py={3}
      rejectResponderTermination={true}
      secureTextEntry={false}
      style={
        Array [
          Object {
            "borderColor": "#e5e5e5",
            "borderRadius": 6,
            "borderWidth": 1,
            "color": "#000000",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
            "marginTop": 16,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      underlineColorAndroid="transparent"
      variant="outline"
    />
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal Size Examples 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="column"
      style={
        Array [
          Object {
            "flexDirection": "column",
          },
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Open sm Modal
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Open md Modal
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Open lg Modal
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Open full Modal
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Modal with Keyboard Avoid view 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Open Modal
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Open modal and focus on the input element to see the effect.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Modal Multiple modal 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Button
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Popover Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        aria-expanded={false}
        aria-haspopup={true}
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Trigger
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Popover Focus on Open 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        aria-expanded={false}
        aria-haspopup={true}
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Trigger
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Popover Popover positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignSelf="flex-start"
      style={
        Array [
          Object {
            "alignSelf": "flex-start",
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          alignSelf="center"
          aria-expanded={false}
          aria-haspopup={true}
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "alignSelf": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Trigger
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={6}
        style={
          Array [
            Object {
              "height": 24,
            },
          ]
        }
      />
      <View
        borderColor="transparent"
        borderRadius="lg"
        borderWidth={1}
        mx={0}
        style={
          Array [
            Object {
              "borderColor": "transparent",
              "borderRadius": 6,
              "borderWidth": 1,
              "marginLeft": 0,
              "marginRight": 0,
            },
          ]
        }
      >
        <View
          accessibilityLabel="Select your favorite programming language"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            pointerEvents="none"
          >
            <View
              alignItems="center"
              borderColor="muted.200"
              borderRadius="lg"
              borderWidth={1}
              display="flex"
              flexDirection="row"
              justifyContent="space-between"
              overflow="hidden"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 6,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "overflow": "hidden",
                  },
                ]
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-hidden={true}
                background="transparent"
                borderColor="muted.200"
                borderRadius="lg"
                borderWidth={0}
                color="black"
                editable={false}
                flex={1}
                focusable={false}
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                importantForAccessibility="no"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="Select your favorite programming language"
                placeholderTextColor="#a3a3a3"
                px={4}
                py={3}
                rejectResponderTermination={true}
                secureTextEntry={false}
                style={
                  Array [
                    Object {
                      "borderColor": "#e5e5e5",
                      "borderRadius": 6,
                      "borderWidth": 0,
                      "color": "#000000",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "paddingBottom": 12,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 12,
                    },
                  ]
                }
                underlineColorAndroid="transparent"
                value="auto"
                variant="outline"
              />
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={20}
                bbWidth={20}
                color={4280690214}
                focusable={false}
                mr={2}
                size={5}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#262626",
                        "height": 20,
                        "marginRight": 8,
                        "width": 20,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Pressable Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessible={true}
      borderColor="dark.200"
      borderWidth={1}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      style={
        Array [
          Object {
            "borderColor": "#3f3f46",
            "borderWidth": 1,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        hello world
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Pressable Events 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      accessible={true}
      borderColor="dark.200"
      borderWidth={1}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={4}
      style={
        Array [
          Object {
            "borderColor": "#3f3f46",
            "borderWidth": 1,
            "paddingBottom": 16,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 16,
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Pressable is in state
         :: 
        
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress ColorSchemes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          mb={8}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
                "marginBottom": 32,
                "textAlign": "center",
              },
            ]
          }
          textAlign="center"
        >
          Progress ColorScheme
        </Text>
        <View
          height={4}
          style={
            Array [
              Object {
                "height": 16,
              },
            ]
          }
        />
        <View
          mx={4}
          style={
            Array [
              Object {
                "marginLeft": 16,
                "marginRight": 16,
              },
            ]
          }
        >
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 35,
              }
            }
            accessible={true}
            bg="primary.200"
            colorScheme="primary"
            height={2}
            innerBg="primary.600"
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 9999,
                  "height": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="primary.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "35%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="35%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 45,
              }
            }
            accessible={true}
            bg="secondary.200"
            colorScheme="secondary"
            height={2}
            innerBg="secondary.600"
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#fbcfe8",
                  "borderRadius": 9999,
                  "height": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="secondary.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#db2777",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "45%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="45%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 55.00000000000001,
              }
            }
            accessible={true}
            bg="emerald.200"
            colorScheme="emerald"
            height={2}
            innerBg="emerald.600"
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#a7f3d0",
                  "borderRadius": 9999,
                  "height": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="emerald.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#059669",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "55.00000000000001%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="55.00000000000001%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 65,
              }
            }
            accessible={true}
            bg="warning.200"
            colorScheme="warning"
            height={2}
            innerBg="warning.600"
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#fed7aa",
                  "borderRadius": 9999,
                  "height": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="warning.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ea580c",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "65%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="65%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 75,
              }
            }
            accessible={true}
            bg="light.200"
            colorScheme="light"
            height={2}
            innerBg="light.600"
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#e7e5e4",
                  "borderRadius": 9999,
                  "height": 8,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="light.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#57534e",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "75%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="75%"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        mb={8}
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 32,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          Progress Composition
        </Text>
      </View>
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        mb={2}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginBottom": 8,
            },
          ]
        }
      >
        Add Label inside Progress
      </Text>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 45,
          }
        }
        accessible={true}
        bg="primary.200"
        colorScheme="primary"
        height={5}
        innerBg="primary.600"
        mb={4}
        rounded="full"
        style={
          Array [
            Object {
              "backgroundColor": "#a5f3fc",
              "borderRadius": 9999,
              "height": 20,
              "marginBottom": 16,
            },
          ]
        }
      >
        <View
          alignItems="center"
          bg="primary.600"
          color="white"
          display="flex"
          height="100%"
          justifyContent="center"
          rounded="full"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 9999,
                "color": "#FFFFFF",
                "display": "flex",
                "height": "100%",
                "justifyContent": "center",
                "width": "45%",
              },
              Object {
                "elevation": 1,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
              },
            ]
          }
          w="45%"
        >
          <Text
            color="white"
            fontSize="md"
            fontStyle="normal"
            fontWeight="bold"
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "700",
                },
              ]
            }
          >
            45%
          </Text>
        </View>
      </View>
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        mb={2}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginBottom": 8,
            },
          ]
        }
      >
        Add Label outside Progress
      </Text>
      <View
        display="flex"
        flexDirection="row"
        style={
          Array [
            Object {
              "display": "flex",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          accessibilityRole="progressbar"
          accessibilityValue={
            Object {
              "max": 100,
              "min": 0,
              "now": 75,
            }
          }
          accessible={true}
          bg="primary.200"
          colorScheme="primary"
          flex={1}
          height={5}
          innerBg="primary.600"
          mb={4}
          rounded="full"
          style={
            Array [
              Object {
                "backgroundColor": "#a5f3fc",
                "borderRadius": 9999,
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "height": 20,
                "marginBottom": 16,
              },
            ]
          }
        >
          <View
            alignItems="center"
            bg="primary.600"
            color="white"
            display="flex"
            height="100%"
            justifyContent="center"
            rounded="full"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#0891b2",
                  "borderRadius": 9999,
                  "color": "#FFFFFF",
                  "display": "flex",
                  "height": "100%",
                  "justifyContent": "center",
                  "width": "75%",
                },
                Object {
                  "elevation": 1,
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.18,
                  "shadowRadius": 1,
                },
              ]
            }
            w="75%"
          />
        </View>
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight="bold"
          ml={2}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "700",
                "marginLeft": 8,
              },
            ]
          }
        >
          75%
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress CustomBgColor 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        mb={8}
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 32,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          Custom Track Color
        </Text>
      </View>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 75,
          }
        }
        accessible={true}
        bg="secondary.200"
        colorScheme="primary"
        height={4}
        innerBg="primary.600"
        mb={4}
        mx={4}
        rounded="full"
        style={
          Array [
            Object {
              "backgroundColor": "#fbcfe8",
              "borderRadius": 9999,
              "height": 16,
              "marginBottom": 16,
              "marginLeft": 16,
              "marginRight": 16,
            },
          ]
        }
      >
        <View
          alignItems="center"
          bg="primary.600"
          color="white"
          display="flex"
          height="100%"
          justifyContent="center"
          rounded="full"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 9999,
                "color": "#FFFFFF",
                "display": "flex",
                "height": "100%",
                "justifyContent": "center",
                "width": "75%",
              },
              Object {
                "elevation": 1,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
              },
            ]
          }
          w="75%"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Default Progress Bar 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        mb={8}
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 32,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          px={0}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
                "paddingLeft": 0,
                "paddingRight": 0,
              },
            ]
          }
        >
          This is a Simple Progress Bar
        </Text>
      </View>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 45,
          }
        }
        accessible={true}
        bg="primary.200"
        colorScheme="primary"
        height={2}
        innerBg="primary.600"
        mx={4}
        rounded="full"
        style={
          Array [
            Object {
              "backgroundColor": "#a5f3fc",
              "borderRadius": 9999,
              "height": 8,
              "marginLeft": 16,
              "marginRight": 16,
            },
          ]
        }
      >
        <View
          alignItems="center"
          bg="primary.600"
          color="white"
          display="flex"
          height="100%"
          justifyContent="center"
          rounded="full"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 9999,
                "color": "#FFFFFF",
                "display": "flex",
                "height": "100%",
                "justifyContent": "center",
                "width": "45%",
              },
              Object {
                "elevation": 1,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
              },
            ]
          }
          w="45%"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Flat 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        mb={8}
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 32,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          Flat Progress
        </Text>
      </View>
      <View
        accessibilityRole="progressbar"
        accessibilityValue={
          Object {
            "max": 100,
            "min": 0,
            "now": 65,
          }
        }
        accessible={true}
        bg="primary.200"
        colorScheme="primary"
        height={4}
        innerBg="primary.600"
        mx={4}
        rounded="0"
        style={
          Array [
            Object {
              "backgroundColor": "#a5f3fc",
              "borderRadius": 0,
              "height": 16,
              "marginLeft": 16,
              "marginRight": 16,
            },
          ]
        }
      >
        <View
          alignItems="center"
          bg="primary.600"
          color="white"
          display="flex"
          height="100%"
          justifyContent="center"
          rounded="0"
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#0891b2",
                "borderRadius": 0,
                "color": "#FFFFFF",
                "display": "flex",
                "height": "100%",
                "justifyContent": "center",
                "width": "65%",
              },
              Object {
                "elevation": 1,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.18,
                "shadowRadius": 1,
              },
            ]
          }
          w="65%"
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Progress Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="3xl"
          fontStyle="normal"
          fontWeight="bold"
          mb={8}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 30,
                "fontStyle": "normal",
                "fontWeight": "700",
                "marginBottom": 32,
                "textAlign": "center",
              },
            ]
          }
          textAlign="center"
        >
          Progress Sizes
        </Text>
        <View
          height={4}
          style={
            Array [
              Object {
                "height": 16,
              },
            ]
          }
        />
        <View
          mx={4}
          style={
            Array [
              Object {
                "marginLeft": 16,
                "marginRight": 16,
              },
            ]
          }
        >
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 25,
              }
            }
            accessible={true}
            bg="primary.200"
            colorScheme="primary"
            height={1}
            innerBg="primary.600"
            mb={4}
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 9999,
                  "height": 4,
                  "marginBottom": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="primary.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "25%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="25%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 35,
              }
            }
            accessible={true}
            bg="primary.200"
            colorScheme="primary"
            height={2}
            innerBg="primary.600"
            mb={4}
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 9999,
                  "height": 8,
                  "marginBottom": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="primary.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "35%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="35%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 45,
              }
            }
            accessible={true}
            bg="primary.200"
            colorScheme="primary"
            height={3}
            innerBg="primary.600"
            mb={4}
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 9999,
                  "height": 12,
                  "marginBottom": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="primary.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "45%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="45%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 55.00000000000001,
              }
            }
            accessible={true}
            bg="primary.200"
            colorScheme="primary"
            height={4}
            innerBg="primary.600"
            mb={4}
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 9999,
                  "height": 16,
                  "marginBottom": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="primary.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "55.00000000000001%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="55.00000000000001%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 65,
              }
            }
            accessible={true}
            bg="primary.200"
            colorScheme="primary"
            height={5}
            innerBg="primary.600"
            mb={4}
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 9999,
                  "height": 20,
                  "marginBottom": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="primary.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "65%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="65%"
            />
          </View>
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <View
            accessibilityRole="progressbar"
            accessibilityValue={
              Object {
                "max": 100,
                "min": 0,
                "now": 75,
              }
            }
            accessible={true}
            bg="primary.200"
            colorScheme="primary"
            height={6}
            innerBg="primary.600"
            mb={4}
            rounded="full"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 9999,
                  "height": 24,
                  "marginBottom": 16,
                },
              ]
            }
          >
            <View
              alignItems="center"
              bg="primary.600"
              color="white"
              display="flex"
              height="100%"
              justifyContent="center"
              rounded="full"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0891b2",
                    "borderRadius": 9999,
                    "color": "#FFFFFF",
                    "display": "flex",
                    "height": "100%",
                    "justifyContent": "center",
                    "width": "75%",
                  },
                  Object {
                    "elevation": 1,
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 0,
                    },
                    "shadowOpacity": 0.18,
                    "shadowRadius": 1,
                  },
                ]
              }
              w="75%"
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Controlled Radio 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        name="myRadioGroup"
        onChange={[Function]}
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
        value="one"
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="one"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "myRadioGroup",
                "selectedValue": "one",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="one"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="primary.600"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#0891b2",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 1,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 1,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              One
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="two"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "myRadioGroup",
                "selectedValue": "one",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="two"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Two
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Custom Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        defaultValue="1"
        name="exampleGroup"
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          colorScheme="emerald"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="1"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="emerald"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="1"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(167, 243, 208, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="emerald.600"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#059669",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278556265}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#059669",
                          "height": 12,
                          "opacity": 1,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 1,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278556265}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              emerald
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="secondary"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="2"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="secondary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="2"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(251, 207, 232, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4292552567}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#db2777",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4292552567}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              secondary
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="warning"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="3"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="warning"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="3"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(254, 215, 170, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4293548044}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#ea580c",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4293548044}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              warning
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Custom Icon 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        defaultValue="1"
        name="exampleGroup"
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
      >
        <View
          _text={
            Object {
              "mx": 2,
            }
          }
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          colorScheme="green"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="1"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="green"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="1"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(187, 247, 208, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="green.600"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#16a34a",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <Text
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  allowFontScaling={false}
                  fontSize="12px"
                  lineHeight="12px"
                  style={
                    Array [
                      Object {
                        "color": "green.600",
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#16a34a",
                          "fontSize": 12,
                          "height": 12,
                          "lineHeight": 12,
                          "width": 12,
                        },
                      ],
                      Object {
                        "fontFamily": "material-community",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                >
                  󰢚
                </Text>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              mx={2}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 8,
                    "marginRight": 8,
                  },
                ]
              }
            >
              Alien
            </Text>
          </View>
        </View>
        <View
          _text={
            Object {
              "mx": 2,
            }
          }
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="red"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="2"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="red"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="2"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(254, 202, 202, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4292617766}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#dc2626",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4292617766}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              mx={2}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 8,
                    "marginRight": 8,
                  },
                ]
              }
            >
              Fire
            </Text>
          </View>
        </View>
        <View
          _text={
            Object {
              "mx": 2,
            }
          }
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="warning"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="3"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="warning"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="3"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(254, 215, 170, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4293548044}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#ea580c",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4293548044}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              mx={2}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 8,
                    "marginRight": 8,
                  },
                ]
              }
            >
              Warning
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        defaultValue="2"
        name="exampleGroup"
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": true,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          isDisabled={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="1"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            isDisabled={true}
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "2",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="1"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                opacity={0.4}
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "opacity": 0.4,
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              First
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="2"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "2",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="2"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="primary.600"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#0891b2",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 1,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 1,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Second
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="3"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "2",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="3"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Third
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="flex-start"
      maxWidth="80%"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "maxWidth": "80%",
          },
        ]
      }
    >
      <View
        isInvalid={true}
        isRequired={true}
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          flexDirection="row"
          justifyContent="flex-start"
          mb={2}
          mr={3}
          nativeID="field-react-aria-0-2-label"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Select One
          </Text>
          <Text
            color="error.400"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            *
          </Text>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <View
            accessibilityRole="radiogroup"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            alignItems="flex-start"
            defaultValue="1"
            name="exampleGroup"
            style={
              Array [
                Object {
                  "alignItems": "flex-start",
                },
              ]
            }
          >
            <View
              accessibilityRole="radio"
              accessibilityState={
                Object {
                  "checked": true,
                  "disabled": false,
                }
              }
              accessible={true}
              checked={true}
              focusable={true}
              my={1}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
              value="1"
            >
              <View
                alignItems="center"
                borderRadius="full"
                colorScheme="primary"
                defaultIsChecked={false}
                display="flex"
                feedbackId="field-react-aria-0-2-feedback"
                flexDirection="row"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-2-helptext"
                isDisabled={false}
                isReadOnly={false}
                isRequired={true}
                justifyContent="center"
                labelId="field-react-aria-0-2-label"
                my={1}
                nativeID="field-react-aria-0-2"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 9999,
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginBottom": 4,
                      "marginTop": 4,
                    },
                  ]
                }
                value="1"
              >
                <View
                  alignItems="center"
                  display="flex"
                  justifyContent="center"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <View
                    _disabled={
                      Object {
                        "bg": "transaprarent",
                      }
                    }
                    _focus={
                      Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      }
                    }
                    _hover={
                      Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      }
                    }
                    borderRadius="full"
                    height="100%"
                    p={5}
                    position="absolute"
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "height": "100%",
                          "paddingBottom": 20,
                          "paddingLeft": 20,
                          "paddingRight": 20,
                          "paddingTop": 20,
                          "position": "absolute",
                          "width": "100%",
                          "zIndex": -1,
                        },
                      ]
                    }
                    w="100%"
                    zIndex={-1}
                  />
                  <View
                    alignItems="center"
                    bg="muted.50"
                    borderColor="error.600"
                    borderRadius="full"
                    borderWidth={2}
                    display="flex"
                    justifyContent="center"
                    p="2px"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fafafa",
                          "borderColor": "#dc2626",
                          "borderRadius": 9999,
                          "borderWidth": 2,
                          "display": "flex",
                          "justifyContent": "center",
                          "paddingBottom": 2,
                          "paddingLeft": 2,
                          "paddingRight": 2,
                          "paddingTop": 2,
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      _disabled={
                        Object {
                          "bg": "transaprarent",
                        }
                      }
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={12}
                      bbWidth={12}
                      color={4278751666}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      size={3}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Array [
                            Object {
                              "color": "#0891b2",
                              "height": 12,
                              "opacity": 1,
                              "width": 12,
                            },
                          ],
                          Object {
                            "flex": 0,
                            "height": 12,
                            "opacity": 1,
                            "width": 12,
                          },
                        ]
                      }
                      tintColor={4278751666}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        opacity={1}
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  color="muted.700"
                  fontSize="md"
                  fontStyle="normal"
                  fontWeight={400}
                  ml={3}
                  style={
                    Array [
                      Object {
                        "color": "#404040",
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "marginLeft": 12,
                      },
                    ]
                  }
                >
                  First
                </Text>
              </View>
            </View>
            <View
              accessibilityRole="radio"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": false,
                }
              }
              accessible={true}
              checked={false}
              focusable={true}
              my={1}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
              value="2"
            >
              <View
                alignItems="center"
                borderRadius="full"
                colorScheme="primary"
                defaultIsChecked={false}
                display="flex"
                feedbackId="field-react-aria-0-2-feedback"
                flexDirection="row"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-2-helptext"
                isDisabled={false}
                isReadOnly={false}
                isRequired={true}
                justifyContent="center"
                labelId="field-react-aria-0-2-label"
                my={1}
                nativeID="field-react-aria-0-2"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 9999,
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginBottom": 4,
                      "marginTop": 4,
                    },
                  ]
                }
                value="2"
              >
                <View
                  alignItems="center"
                  display="flex"
                  justifyContent="center"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <View
                    _disabled={
                      Object {
                        "bg": "transaprarent",
                      }
                    }
                    _focus={
                      Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      }
                    }
                    _hover={
                      Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      }
                    }
                    borderRadius="full"
                    height="100%"
                    p={5}
                    position="absolute"
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "height": "100%",
                          "paddingBottom": 20,
                          "paddingLeft": 20,
                          "paddingRight": 20,
                          "paddingTop": 20,
                          "position": "absolute",
                          "width": "100%",
                          "zIndex": -1,
                        },
                      ]
                    }
                    w="100%"
                    zIndex={-1}
                  />
                  <View
                    alignItems="center"
                    bg="muted.50"
                    borderColor="error.600"
                    borderRadius="full"
                    borderWidth={2}
                    display="flex"
                    justifyContent="center"
                    p="2px"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fafafa",
                          "borderColor": "#dc2626",
                          "borderRadius": 9999,
                          "borderWidth": 2,
                          "display": "flex",
                          "justifyContent": "center",
                          "paddingBottom": 2,
                          "paddingLeft": 2,
                          "paddingRight": 2,
                          "paddingTop": 2,
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      _disabled={
                        Object {
                          "bg": "transaprarent",
                        }
                      }
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={12}
                      bbWidth={12}
                      color={4278751666}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      size={3}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Array [
                            Object {
                              "color": "#0891b2",
                              "height": 12,
                              "opacity": 0,
                              "width": 12,
                            },
                          ],
                          Object {
                            "flex": 0,
                            "height": 12,
                            "opacity": 0,
                            "width": 12,
                          },
                        ]
                      }
                      tintColor={4278751666}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        opacity={0}
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  color="muted.700"
                  fontSize="md"
                  fontStyle="normal"
                  fontWeight={400}
                  ml={3}
                  style={
                    Array [
                      Object {
                        "color": "#404040",
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "marginLeft": 12,
                      },
                    ]
                  }
                >
                  Second
                </Text>
              </View>
            </View>
            <View
              accessibilityRole="radio"
              accessibilityState={
                Object {
                  "checked": false,
                  "disabled": false,
                }
              }
              accessible={true}
              checked={false}
              focusable={true}
              my={1}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onHoverIn={[Function]}
              onHoverOut={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
              value="3"
            >
              <View
                alignItems="center"
                borderRadius="full"
                colorScheme="primary"
                defaultIsChecked={false}
                display="flex"
                feedbackId="field-react-aria-0-2-feedback"
                flexDirection="row"
                hasFeedbackText={false}
                hasHelpText={false}
                helpTextId="field-react-aria-0-2-helptext"
                isDisabled={false}
                isReadOnly={false}
                isRequired={true}
                justifyContent="center"
                labelId="field-react-aria-0-2-label"
                my={1}
                nativeID="field-react-aria-0-2"
                setHasFeedbackText={[Function]}
                setHasHelpText={[Function]}
                state={
                  Object {
                    "lastFocusedValue": null,
                    "name": "exampleGroup",
                    "selectedValue": "1",
                    "setLastFocusedValue": [Function],
                    "setSelectedValue": [Function],
                  }
                }
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderRadius": 9999,
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "center",
                      "marginBottom": 4,
                      "marginTop": 4,
                    },
                  ]
                }
                value="3"
              >
                <View
                  alignItems="center"
                  display="flex"
                  justifyContent="center"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "display": "flex",
                        "justifyContent": "center",
                      },
                    ]
                  }
                >
                  <View
                    _disabled={
                      Object {
                        "bg": "transaprarent",
                      }
                    }
                    _focus={
                      Object {
                        "bg": "rgba(165, 243, 252, 0.5)",
                      }
                    }
                    _hover={
                      Object {
                        "bg": "rgba(229, 229, 229, 0.3)",
                      }
                    }
                    borderRadius="full"
                    height="100%"
                    p={5}
                    position="absolute"
                    style={
                      Array [
                        Object {
                          "borderRadius": 9999,
                          "height": "100%",
                          "paddingBottom": 20,
                          "paddingLeft": 20,
                          "paddingRight": 20,
                          "paddingTop": 20,
                          "position": "absolute",
                          "width": "100%",
                          "zIndex": -1,
                        },
                      ]
                    }
                    w="100%"
                    zIndex={-1}
                  />
                  <View
                    alignItems="center"
                    bg="muted.50"
                    borderColor="error.600"
                    borderRadius="full"
                    borderWidth={2}
                    display="flex"
                    justifyContent="center"
                    p="2px"
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#fafafa",
                          "borderColor": "#dc2626",
                          "borderRadius": 9999,
                          "borderWidth": 2,
                          "display": "flex",
                          "justifyContent": "center",
                          "paddingBottom": 2,
                          "paddingLeft": 2,
                          "paddingRight": 2,
                          "paddingTop": 2,
                        },
                      ]
                    }
                  >
                    <RNSVGSvgView
                      _disabled={
                        Object {
                          "bg": "transaprarent",
                        }
                      }
                      accessibilityRole="image"
                      align="xMidYMid"
                      bbHeight={12}
                      bbWidth={12}
                      color={4278751666}
                      focusable={false}
                      meetOrSlice={0}
                      minX={0}
                      minY={0}
                      size={3}
                      stroke=""
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderWidth": 0,
                          },
                          Array [
                            Object {
                              "color": "#0891b2",
                              "height": 12,
                              "opacity": 0,
                              "width": 12,
                            },
                          ],
                          Object {
                            "flex": 0,
                            "height": 12,
                            "opacity": 0,
                            "width": 12,
                          },
                        ]
                      }
                      tintColor={4278751666}
                      vbHeight={24}
                      vbWidth={24}
                    >
                      <RNSVGGroup
                        opacity={0}
                        propList={
                          Array [
                            "stroke",
                          ]
                        }
                        stroke={null}
                      >
                        <RNSVGGroup>
                          <RNSVGPath
                            d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                            fill={
                              Array [
                                2,
                              ]
                            }
                            propList={
                              Array [
                                "fill",
                                "stroke",
                              ]
                            }
                            stroke={null}
                          />
                        </RNSVGGroup>
                      </RNSVGGroup>
                    </RNSVGSvgView>
                  </View>
                </View>
                <Text
                  color="muted.700"
                  fontSize="md"
                  fontStyle="normal"
                  fontWeight={400}
                  ml={3}
                  style={
                    Array [
                      Object {
                        "color": "#404040",
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "marginLeft": 12,
                      },
                    ]
                  }
                >
                  Third
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          mt={2}
          my={1}
          nativeID="field-react-aria-0-2-feedback"
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
        >
          <Text
            color="muted.500"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#737373",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            We'll keep this between us.
          </Text>
        </View>
        <View
          mt={2}
          nativeID="field-react-aria-0-2-helptext"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="error.400"
            fontSize="xs"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Something is wrong.
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Invalid 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        name="exampleGroup"
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          isInvalid={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {},
            ]
          }
          value="test"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": undefined,
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
              ]
            }
            value="test"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="error.600"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#dc2626",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Invalid Radio
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      display="flex"
      justifyContent="space-between"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          accessibilityRole="radiogroup"
          accessibilityState={
            Object {
              "disabled": undefined,
            }
          }
          alignItems="flex-start"
          name="exampleGroup"
          onChange={[Function]}
          style={
            Array [
              Object {
                "alignItems": "flex-start",
              },
            ]
          }
          value=""
        >
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="success"
            focusable={true}
            isDisabled={false}
            isInvalid={false}
            my={1}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="cool"
          >
            <View
              alignItems="center"
              borderRadius="full"
              colorScheme="success"
              defaultIsChecked={false}
              display="flex"
              flexDirection="row"
              isDisabled={false}
              justifyContent="center"
              my={1}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
              value="cool"
            >
              <View
                alignItems="center"
                display="flex"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  _focus={
                    Object {
                      "bg": "rgba(187, 247, 208, 0.5)",
                    }
                  }
                  _hover={
                    Object {
                      "bg": "rgba(229, 229, 229, 0.3)",
                    }
                  }
                  borderRadius="full"
                  height="100%"
                  p={5}
                  position="absolute"
                  style={
                    Array [
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      },
                    ]
                  }
                  w="100%"
                  zIndex={-1}
                />
                <View
                  alignItems="center"
                  bg="muted.50"
                  borderColor="muted.300"
                  borderRadius="full"
                  borderWidth={2}
                  display="flex"
                  justifyContent="center"
                  p="2px"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#d4d4d4",
                        "borderRadius": 9999,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      },
                    ]
                  }
                >
                  <RNSVGSvgView
                    _disabled={
                      Object {
                        "bg": "transaprarent",
                      }
                    }
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4279673674}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    size={3}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Array [
                          Object {
                            "color": "#16a34a",
                            "height": 12,
                            "opacity": 0,
                            "width": 12,
                          },
                        ],
                        Object {
                          "flex": 0,
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4279673674}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                ml={3}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "marginLeft": 12,
                    },
                  ]
                }
              >
                Are you Awesome?
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="radio"
            accessibilityState={
              Object {
                "checked": false,
                "disabled": false,
              }
            }
            accessible={true}
            checked={false}
            colorScheme="success"
            focusable={true}
            isDisabled={false}
            isInvalid={false}
            my={1}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="awesome"
          >
            <View
              alignItems="center"
              borderRadius="full"
              colorScheme="success"
              defaultIsChecked={false}
              display="flex"
              flexDirection="row"
              isDisabled={false}
              justifyContent="center"
              my={1}
              state={
                Object {
                  "lastFocusedValue": null,
                  "name": "exampleGroup",
                  "selectedValue": "",
                  "setLastFocusedValue": [Function],
                  "setSelectedValue": [Function],
                }
              }
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderRadius": 9999,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "marginBottom": 4,
                    "marginTop": 4,
                  },
                ]
              }
              value="awesome"
            >
              <View
                alignItems="center"
                display="flex"
                justifyContent="center"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    },
                  ]
                }
              >
                <View
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  _focus={
                    Object {
                      "bg": "rgba(187, 247, 208, 0.5)",
                    }
                  }
                  _hover={
                    Object {
                      "bg": "rgba(229, 229, 229, 0.3)",
                    }
                  }
                  borderRadius="full"
                  height="100%"
                  p={5}
                  position="absolute"
                  style={
                    Array [
                      Object {
                        "borderRadius": 9999,
                        "height": "100%",
                        "paddingBottom": 20,
                        "paddingLeft": 20,
                        "paddingRight": 20,
                        "paddingTop": 20,
                        "position": "absolute",
                        "width": "100%",
                        "zIndex": -1,
                      },
                    ]
                  }
                  w="100%"
                  zIndex={-1}
                />
                <View
                  alignItems="center"
                  bg="muted.50"
                  borderColor="muted.300"
                  borderRadius="full"
                  borderWidth={2}
                  display="flex"
                  justifyContent="center"
                  p="2px"
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#fafafa",
                        "borderColor": "#d4d4d4",
                        "borderRadius": 9999,
                        "borderWidth": 2,
                        "display": "flex",
                        "justifyContent": "center",
                        "paddingBottom": 2,
                        "paddingLeft": 2,
                        "paddingRight": 2,
                        "paddingTop": 2,
                      },
                    ]
                  }
                >
                  <RNSVGSvgView
                    _disabled={
                      Object {
                        "bg": "transaprarent",
                      }
                    }
                    accessibilityRole="image"
                    align="xMidYMid"
                    bbHeight={12}
                    bbWidth={12}
                    color={4279673674}
                    focusable={false}
                    meetOrSlice={0}
                    minX={0}
                    minY={0}
                    size={3}
                    stroke=""
                    style={
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        Array [
                          Object {
                            "color": "#16a34a",
                            "height": 12,
                            "opacity": 0,
                            "width": 12,
                          },
                        ],
                        Object {
                          "flex": 0,
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ]
                    }
                    tintColor={4279673674}
                    vbHeight={24}
                    vbWidth={24}
                  >
                    <RNSVGGroup
                      opacity={0}
                      propList={
                        Array [
                          "stroke",
                        ]
                      }
                      stroke={null}
                    >
                      <RNSVGGroup>
                        <RNSVGPath
                          d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                          fill={
                            Array [
                              2,
                            ]
                          }
                          propList={
                            Array [
                              "fill",
                              "stroke",
                            ]
                          }
                          stroke={null}
                        />
                      </RNSVGGroup>
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
              <Text
                color="muted.700"
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                ml={3}
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "marginLeft": 12,
                    },
                  ]
                }
              >
                Are you Cool?
              </Text>
            </View>
          </View>
        </View>
      </View>
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        mt={2}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "marginTop": 8,
            },
          ]
        }
      >
        Yes, you are 
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        defaultValue="1"
        name="exampleGroup"
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          colorScheme="red"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="1"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="red"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="1"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(254, 202, 202, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="red.600"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#dc2626",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={8}
                  bbWidth={8}
                  color={4292617766}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={2}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#dc2626",
                          "height": 8,
                          "opacity": 1,
                          "width": 8,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 8,
                        "opacity": 1,
                        "width": 8,
                      },
                    ]
                  }
                  tintColor={4292617766}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="sm"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Small
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="green"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="2"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="green"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="2"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(187, 247, 208, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4279673674}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#16a34a",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4279673674}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Medium
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="yellow"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="3"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="yellow"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="3"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(254, 240, 138, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={16}
                  bbWidth={16}
                  color={4291463684}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={4}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#ca8a04",
                          "height": 16,
                          "opacity": 0,
                          "width": 16,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 16,
                        "opacity": 0,
                        "width": 16,
                      },
                    ]
                  }
                  tintColor={4291463684}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="lg"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 18,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Large
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio Uncontrolled Radio 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityLabel="Pick your favorite number"
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        defaultValue="1"
        name="myRadioGroup"
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": true,
              "disabled": false,
            }
          }
          accessible={true}
          checked={true}
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="1"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "myRadioGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="1"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="primary.600"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#0891b2",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 1,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 1,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={1}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              First
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="2"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "myRadioGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="2"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Second
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="3"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="primary"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "myRadioGroup",
                "selectedValue": "1",
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="3"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(165, 243, 252, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4278751666}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#0891b2",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4278751666}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Third
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Radio With Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        accessibilityRole="radiogroup"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        alignItems="flex-start"
        name="exampleGroup"
        onChange={[Function]}
        style={
          Array [
            Object {
              "alignItems": "flex-start",
            },
          ]
        }
      >
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="success"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="1"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="success"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": undefined,
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="1"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(187, 247, 208, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4279673674}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#16a34a",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4279673674}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Wrong
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="radio"
          accessibilityState={
            Object {
              "checked": false,
              "disabled": false,
            }
          }
          accessible={true}
          checked={false}
          colorScheme="success"
          focusable={true}
          my={1}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": 4,
                "marginTop": 4,
              },
            ]
          }
          value="2"
        >
          <View
            alignItems="center"
            borderRadius="full"
            colorScheme="success"
            defaultIsChecked={false}
            display="flex"
            flexDirection="row"
            justifyContent="center"
            my={1}
            state={
              Object {
                "lastFocusedValue": null,
                "name": "exampleGroup",
                "selectedValue": undefined,
                "setLastFocusedValue": [Function],
                "setSelectedValue": [Function],
              }
            }
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 9999,
                  "display": "flex",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "marginBottom": 4,
                  "marginTop": 4,
                },
              ]
            }
            value="2"
          >
            <View
              alignItems="center"
              display="flex"
              justifyContent="center"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                ]
              }
            >
              <View
                _disabled={
                  Object {
                    "bg": "transaprarent",
                  }
                }
                _focus={
                  Object {
                    "bg": "rgba(187, 247, 208, 0.5)",
                  }
                }
                _hover={
                  Object {
                    "bg": "rgba(229, 229, 229, 0.3)",
                  }
                }
                borderRadius="full"
                height="100%"
                p={5}
                position="absolute"
                style={
                  Array [
                    Object {
                      "borderRadius": 9999,
                      "height": "100%",
                      "paddingBottom": 20,
                      "paddingLeft": 20,
                      "paddingRight": 20,
                      "paddingTop": 20,
                      "position": "absolute",
                      "width": "100%",
                      "zIndex": -1,
                    },
                  ]
                }
                w="100%"
                zIndex={-1}
              />
              <View
                alignItems="center"
                bg="muted.50"
                borderColor="muted.300"
                borderRadius="full"
                borderWidth={2}
                display="flex"
                justifyContent="center"
                p="2px"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#fafafa",
                      "borderColor": "#d4d4d4",
                      "borderRadius": 9999,
                      "borderWidth": 2,
                      "display": "flex",
                      "justifyContent": "center",
                      "paddingBottom": 2,
                      "paddingLeft": 2,
                      "paddingRight": 2,
                      "paddingTop": 2,
                    },
                  ]
                }
              >
                <RNSVGSvgView
                  _disabled={
                    Object {
                      "bg": "transaprarent",
                    }
                  }
                  accessibilityRole="image"
                  align="xMidYMid"
                  bbHeight={12}
                  bbWidth={12}
                  color={4279673674}
                  focusable={false}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  size={3}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#16a34a",
                          "height": 12,
                          "opacity": 0,
                          "width": 12,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 12,
                        "opacity": 0,
                        "width": 12,
                      },
                    ]
                  }
                  tintColor={4279673674}
                  vbHeight={24}
                  vbWidth={24}
                >
                  <RNSVGGroup
                    opacity={0}
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M 12, 12 m -9, 0 a 9,9 0 1,0 18,0 a 9,9 0 1,0 -18,0"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              ml={3}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                    "marginLeft": 12,
                  },
                ]
              }
            >
              Right
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Row Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        alignItems="center"
        bg="primary.400"
        display="flex"
        justifyContent="center"
        rounded="md"
        size={16}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#22d3ee",
              "borderRadius": 4,
              "display": "flex",
              "height": 64,
              "justifyContent": "center",
              "width": 64,
            },
            Object {
              "elevation": 4,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
            },
          ]
        }
      >
        <Text
          color="white"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Box 1
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        alignItems="center"
        bg="secondary.400"
        display="flex"
        justifyContent="center"
        rounded="md"
        size={16}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f472b6",
              "borderRadius": 4,
              "display": "flex",
              "height": 64,
              "justifyContent": "center",
              "width": 64,
            },
            Object {
              "elevation": 4,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
            },
          ]
        }
      >
        <Text
          color="white"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Box 2
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <View
        alignItems="center"
        bg="emerald.400"
        display="flex"
        justifyContent="center"
        rounded="md"
        size={16}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#34d399",
              "borderRadius": 4,
              "display": "flex",
              "height": 64,
              "justifyContent": "center",
              "width": 64,
            },
            Object {
              "elevation": 4,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
            },
          ]
        }
      >
        <Text
          color="white"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Box 3
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ScrollView Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={
        Object {
          "backgroundColor": "#bef264",
          "paddingLeft": 44,
          "paddingRight": 44,
          "width": "100%",
        }
      }
      height={400}
      px={90}
      style={
        Array [
          Object {
            "height": 400,
            "paddingLeft": 90,
            "paddingRight": 90,
          },
        ]
      }
    >
      <View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              one
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              two
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              three
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              four
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              five
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              six
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              seven
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              eight
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              nine
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              ten
            </Text>
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            alignItems="center"
            bg="primary.400"
            display="flex"
            justifyContent="center"
            mb={3}
            my={5}
            p={7}
            rounded="lg"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#22d3ee",
                  "borderRadius": 6,
                  "display": "flex",
                  "justifyContent": "center",
                  "marginBottom": 12,
                  "marginTop": 20,
                  "paddingBottom": 28,
                  "paddingLeft": 28,
                  "paddingRight": 28,
                  "paddingTop": 28,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              eleven
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots SectionList Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              "Pizza",
              "Burger",
              "Risotto",
            ],
            "title": "Main dishes",
          },
          Object {
            "data": Array [
              "French Fries",
              "Onion Rings",
              "Fried Shrimps",
            ],
            "title": "Sides",
          },
          Object {
            "data": Array [
              "Water",
              "Coke",
              "Beer",
            ],
            "title": "Drinks",
          },
          Object {
            "data": Array [
              "Cheese Cake",
              "Ice Cream",
            ],
            "title": "Desserts",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
          5,
        ]
      }
      style={
        Array [
          Object {},
        ]
      }
      updateCellsBatchingPeriod={50}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="primary.200"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              Main dishes
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="secondary.200"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#fbcfe8",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Pizza
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="secondary.200"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#fbcfe8",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Burger
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="secondary.200"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#fbcfe8",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Risotto
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="primary.200"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#a5f3fc",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              Sides
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="secondary.200"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#fbcfe8",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              French Fries
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="secondary.200"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#fbcfe8",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Onion Rings
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            bg="secondary.200"
            my={2}
            px={5}
            py={2}
            rounded="md"
            style={
              Array [
                Object {
                  "backgroundColor": "#fbcfe8",
                  "borderRadius": 4,
                  "marginBottom": 8,
                  "marginTop": 8,
                  "paddingBottom": 8,
                  "paddingLeft": 20,
                  "paddingRight": 20,
                  "paddingTop": 8,
                },
              ]
            }
          >
            <Text
              color="darkText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Fried Shrimps
            </Text>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <View
        borderColor="transparent"
        borderRadius="lg"
        borderWidth={1}
        minWidth={200}
        style={
          Array [
            Object {
              "borderColor": "transparent",
              "borderRadius": 6,
              "borderWidth": 1,
              "minWidth": 200,
            },
          ]
        }
      >
        <View
          accessibilityLabel="Select your favorite programming language"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            pointerEvents="none"
          >
            <View
              alignItems="center"
              borderColor="muted.200"
              borderRadius="lg"
              borderWidth={1}
              display="flex"
              flexDirection="row"
              justifyContent="space-between"
              overflow="hidden"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 6,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "overflow": "hidden",
                  },
                ]
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-hidden={true}
                background="transparent"
                borderColor="muted.200"
                borderRadius="lg"
                borderWidth={0}
                color="black"
                editable={false}
                flex={1}
                focusable={false}
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                importantForAccessibility="no"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="Select your favorite programming language"
                placeholderTextColor="#a3a3a3"
                px={4}
                py={3}
                rejectResponderTermination={true}
                secureTextEntry={false}
                style={
                  Array [
                    Object {
                      "borderColor": "#e5e5e5",
                      "borderRadius": 6,
                      "borderWidth": 0,
                      "color": "#000000",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "paddingBottom": 12,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 12,
                    },
                  ]
                }
                underlineColorAndroid="transparent"
                variant="outline"
              />
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={20}
                bbWidth={20}
                color={4280690214}
                focusable={false}
                mr={2}
                size={5}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#262626",
                        "height": 20,
                        "marginRight": 8,
                        "width": 20,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select FormControlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="flex-start"
      maxWidth="80%"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "maxWidth": "80%",
          },
        ]
      }
    >
      <View
        isInvalid={true}
        isRequired={true}
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          flexDirection="row"
          justifyContent="flex-start"
          mb={2}
          mr={3}
          nativeID="field-react-aria-0-2-label"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Select Item
          </Text>
          <Text
            color="error.400"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            *
          </Text>
        </View>
        <View
          borderColor="transparent"
          borderRadius="lg"
          borderWidth={1}
          minWidth={200}
          mt={1}
          style={
            Array [
              Object {
                "borderColor": "transparent",
                "borderRadius": 6,
                "borderWidth": 1,
                "marginTop": 4,
                "minWidth": 200,
              },
            ]
          }
        >
          <View
            accessibilityLabel="Select your favorite programming language"
            accessibilityRole="button"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              pointerEvents="none"
            >
              <View
                alignItems="center"
                borderColor="error.600"
                borderRadius="lg"
                borderWidth={1}
                display="flex"
                flexDirection="row"
                justifyContent="space-between"
                overflow="hidden"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#dc2626",
                      "borderRadius": 6,
                      "borderWidth": 1,
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                      "overflow": "hidden",
                    },
                  ]
                }
              >
                <TextInput
                  accessibilityInvalid={true}
                  accessibilityRequired={true}
                  accessible={true}
                  allowFontScaling={true}
                  aria-hidden={true}
                  background="transparent"
                  borderColor="error.600"
                  borderRadius="lg"
                  borderWidth={0}
                  color="black"
                  disabled={false}
                  editable={false}
                  flex={1}
                  focusable={false}
                  fontSize="md"
                  fontStyle="normal"
                  fontWeight={400}
                  importantForAccessibility="no"
                  isRequired={true}
                  nativeID="field-react-aria-0-2"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholder="Select your favorite programming language"
                  placeholderTextColor="#a3a3a3"
                  px={4}
                  py={3}
                  readOnly={false}
                  rejectResponderTermination={true}
                  required={true}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "borderColor": "#dc2626",
                        "borderRadius": 6,
                        "borderWidth": 0,
                        "color": "#000000",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "paddingBottom": 12,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 12,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="JavaScript"
                  variant="outline"
                />
                <RNSVGSvgView
                  accessibilityRole="image"
                  bbHeight={20}
                  bbWidth={20}
                  color={4280690214}
                  focusable={false}
                  mr={2}
                  size={5}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#262626",
                          "height": 20,
                          "marginRight": 8,
                          "width": 20,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 20,
                        "width": 20,
                      },
                    ]
                  }
                  tintColor={4280690214}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <View
          mt={1}
          nativeID="field-react-aria-0-2-feedback"
          style={
            Array [
              Object {
                "marginTop": 4,
              },
            ]
          }
        >
          <Text
            color="muted.500"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#737373",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            We'll keep this between us.
          </Text>
        </View>
        <View
          mt={2}
          nativeID="field-react-aria-0-2-helptext"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="error.400"
            fontSize="xs"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Something is wrong.
          </Text>
        </View>
      </View>
      <View
        alignItems="baseline"
        flexDirection="row"
        mt={3}
        style={
          Array [
            Object {
              "alignItems": "baseline",
              "flexDirection": "row",
              "marginTop": 12,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Selected Values: 
        </Text>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          js
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Select Select Long list 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="flex-start"
      maxWidth="80%"
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "maxWidth": "80%",
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          flexDirection="row"
          justifyContent="flex-start"
          mb={2}
          mr={3}
          nativeID="field-react-aria-0-2-label"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Select Item
          </Text>
        </View>
        <View
          borderColor="transparent"
          borderRadius="lg"
          borderWidth={1}
          minWidth={200}
          mt={1}
          style={
            Array [
              Object {
                "borderColor": "transparent",
                "borderRadius": 6,
                "borderWidth": 1,
                "marginTop": 4,
                "minWidth": 200,
              },
            ]
          }
        >
          <View
            accessibilityLabel="Select an option"
            accessibilityRole="button"
            accessible={true}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
          >
            <View
              pointerEvents="none"
            >
              <View
                alignItems="center"
                borderColor="muted.200"
                borderRadius="lg"
                borderWidth={1}
                display="flex"
                flexDirection="row"
                justifyContent="space-between"
                overflow="hidden"
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#e5e5e5",
                      "borderRadius": 6,
                      "borderWidth": 1,
                      "display": "flex",
                      "flexDirection": "row",
                      "justifyContent": "space-between",
                      "overflow": "hidden",
                    },
                  ]
                }
              >
                <TextInput
                  accessible={true}
                  allowFontScaling={true}
                  aria-hidden={true}
                  background="transparent"
                  borderColor="muted.200"
                  borderRadius="lg"
                  borderWidth={0}
                  color="black"
                  disabled={false}
                  editable={false}
                  flex={1}
                  focusable={false}
                  fontSize="md"
                  fontStyle="normal"
                  fontWeight={400}
                  importantForAccessibility="no"
                  isRequired={false}
                  nativeID="field-react-aria-0-2"
                  onBlur={[Function]}
                  onFocus={[Function]}
                  onKeyPress={[Function]}
                  placeholder="Select an option"
                  placeholderTextColor="#a3a3a3"
                  px={4}
                  py={3}
                  readOnly={false}
                  rejectResponderTermination={true}
                  required={false}
                  secureTextEntry={false}
                  style={
                    Array [
                      Object {
                        "borderColor": "#e5e5e5",
                        "borderRadius": 6,
                        "borderWidth": 0,
                        "color": "#000000",
                        "flexBasis": 0,
                        "flexGrow": 1,
                        "flexShrink": 1,
                        "fontSize": 16,
                        "fontStyle": "normal",
                        "fontWeight": "400",
                        "paddingBottom": 12,
                        "paddingLeft": 16,
                        "paddingRight": 16,
                        "paddingTop": 12,
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="Option 1"
                  variant="outline"
                />
                <RNSVGSvgView
                  accessibilityRole="image"
                  bbHeight={20}
                  bbWidth={20}
                  color={4280690214}
                  focusable={false}
                  mr={2}
                  size={5}
                  stroke=""
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Array [
                        Object {
                          "color": "#262626",
                          "height": 20,
                          "marginRight": 8,
                          "width": 20,
                        },
                      ],
                      Object {
                        "flex": 0,
                        "height": 20,
                        "width": 20,
                      },
                    ]
                  }
                  tintColor={4280690214}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                      ]
                    }
                    stroke={null}
                  >
                    <RNSVGGroup>
                      <RNSVGPath
                        d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                        fill={
                          Array [
                            2,
                          ]
                        }
                        propList={
                          Array [
                            "fill",
                            "stroke",
                          ]
                        }
                        stroke={null}
                      />
                    </RNSVGGroup>
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        alignItems="baseline"
        flexDirection="row"
        mt={3}
        style={
          Array [
            Object {
              "alignItems": "baseline",
              "flexDirection": "row",
              "marginTop": 12,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Selected Values: 
        </Text>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight="bold"
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "700",
              },
            ]
          }
        >
          1
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "50%",
          },
        ]
      }
      w="50%"
    >
      <View
        bg="transparent"
        borderRadius={3}
        fadeDuration={0.1}
        h={20}
        isLoaded={false}
        speed={1}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 3,
              "height": 80,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "borderRadius": 3,
              "bottom": 0,
              "height": "100%",
              "opacity": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        bg="transparent"
        borderRadius="full"
        fadeDuration={0.1}
        isLoaded={false}
        size={20}
        speed={1}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 80,
              "width": 80,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "borderRadius": 9999,
              "bottom": 0,
              "height": "100%",
              "opacity": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        height={8}
        style={
          Array [
            Object {
              "height": 32,
            },
          ]
        }
      />
      <View
        bg="transparent"
        borderRadius={3}
        fadeDuration={0.1}
        h={90}
        isLoaded={false}
        noOfLines={5}
        speed={1}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 3,
              "height": 90,
            },
          ]
        }
      >
        <View
          bottom={0}
          justifyContent="space-between"
          left={0}
          overflow="hidden"
          position="absolute"
          right={0}
          style={
            Array [
              Object {
                "bottom": 0,
                "justifyContent": "space-between",
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          top={0}
        >
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                  "width": "75%",
                },
                undefined,
              ]
            }
            w="75%"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      flexDirection="row"
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <View
        bg="purple.200"
        borderRadius={20}
        fadeDuration={0.1}
        isLoaded={false}
        size="170"
        speed={1}
        style={
          Array [
            Object {
              "backgroundColor": "#e9d5ff",
              "borderRadius": 20,
              "height": 170,
              "width": 170,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#67e8f9",
              "borderRadius": 20,
              "bottom": 0,
              "height": "100%",
              "opacity": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "width": 24,
            },
          ]
        }
        width={6}
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          bg="gray.700"
          borderRadius={20}
          fadeDuration={0.1}
          h="6"
          isLoaded={false}
          speed={1}
          style={
            Array [
              Object {
                "backgroundColor": "#3f3f46",
                "borderRadius": 20,
                "height": 24,
                "width": "75%",
              },
              undefined,
            ]
          }
          w="75%"
        >
          <View
            style={
              Object {
                "backgroundColor": "#a1a1aa",
                "borderRadius": 20,
                "bottom": 0,
                "height": "100%",
                "opacity": 0,
                "position": "absolute",
                "top": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <View
          height={5}
          style={
            Array [
              Object {
                "height": 20,
              },
            ]
          }
        />
        <View
          bg="transparent"
          borderRadius={20}
          fadeDuration={0.1}
          h={60}
          isLoaded={false}
          noOfLines={3}
          speed={1}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderRadius": 20,
                "height": 60,
                "width": "100%",
              },
            ]
          }
          w="100%"
        >
          <View
            bottom={0}
            justifyContent="flex-start"
            left={0}
            overflow="hidden"
            position="absolute"
            right={0}
            style={
              Array [
                Object {
                  "bottom": 0,
                  "justifyContent": "flex-start",
                  "left": 0,
                  "overflow": "hidden",
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            top={0}
          >
            <View
              bg="gray.300"
              borderRadius={20}
              fadeDuration={0.1}
              h="12px"
              isLoaded={false}
              speed={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "#d4d4d8",
                    "borderRadius": 20,
                    "height": 12,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#f4f4f5",
                    "borderRadius": 20,
                    "bottom": 0,
                    "height": "100%",
                    "opacity": 0,
                    "position": "absolute",
                    "top": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              height={3}
              style={
                Array [
                  Object {
                    "height": 12,
                  },
                ]
              }
            />
            <View
              bg="gray.300"
              borderRadius={20}
              fadeDuration={0.1}
              h="12px"
              isLoaded={false}
              speed={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "#d4d4d8",
                    "borderRadius": 20,
                    "height": 12,
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#f4f4f5",
                    "borderRadius": 20,
                    "bottom": 0,
                    "height": "100%",
                    "opacity": 0,
                    "position": "absolute",
                    "top": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
            <View
              height={3}
              style={
                Array [
                  Object {
                    "height": 12,
                  },
                ]
              }
            />
            <View
              bg="gray.300"
              borderRadius={20}
              fadeDuration={0.1}
              h="12px"
              isLoaded={false}
              speed={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "#d4d4d8",
                    "borderRadius": 20,
                    "height": 12,
                    "width": "75%",
                  },
                  undefined,
                ]
              }
              w="75%"
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#f4f4f5",
                    "borderRadius": 20,
                    "bottom": 0,
                    "height": "100%",
                    "opacity": 0,
                    "position": "absolute",
                    "top": 0,
                    "width": "100%",
                  }
                }
              />
            </View>
          </View>
        </View>
        <View
          height={5}
          style={
            Array [
              Object {
                "height": 20,
              },
            ]
          }
        />
        <View
          flexDirection="row"
          ml="auto"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "marginLeft": "auto",
                "width": "80%",
              },
            ]
          }
          w="80%"
        >
          <View
            bg="gray.300"
            borderRadius={10}
            fadeDuration={0.1}
            h={8}
            isLoaded={false}
            ml="auto"
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "#d4d4d8",
                  "borderRadius": 10,
                  "height": 32,
                  "marginLeft": "auto",
                  "width": "45%",
                },
                undefined,
              ]
            }
            w="45%"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#f4f4f5",
                  "borderRadius": 10,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            bg="green.700"
            borderRadius={10}
            fadeDuration={0.1}
            h={8}
            isLoaded={false}
            ml="auto"
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "#15803d",
                  "borderRadius": 10,
                  "height": 32,
                  "marginLeft": "auto",
                  "width": "45%",
                },
                undefined,
              ]
            }
            w="45%"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#86efac",
                  "borderRadius": 10,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            bg="transparent"
            borderRadius="full"
            fadeDuration={0.1}
            isLoaded={false}
            size={12}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 9999,
                  "height": 48,
                  "width": 48,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 9999,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {},
              ]
            }
          />
          <View
            _stack={
              Object {
                "justifyContent": "center",
              }
            }
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            isLoaded={false}
            ml={2}
            noOfLines={1}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "marginLeft": 8,
                  "width": "50%",
                },
              ]
            }
            w="50%"
          >
            <View
              bottom={0}
              justifyContent="center"
              left={0}
              overflow="hidden"
              position="absolute"
              right={0}
              style={
                Array [
                  Object {
                    "bottom": 0,
                    "justifyContent": "center",
                    "left": 0,
                    "overflow": "hidden",
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  },
                ]
              }
              top={0}
            >
              <View
                bg="transparent"
                borderRadius={3}
                fadeDuration={0.1}
                h="12px"
                isLoaded={false}
                speed={1}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderRadius": 3,
                      "height": 12,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  style={
                    Object {
                      "backgroundColor": "#e5e5e5",
                      "borderRadius": 3,
                      "bottom": 0,
                      "height": "100%",
                      "opacity": 0,
                      "position": "absolute",
                      "top": 0,
                      "width": "100%",
                    }
                  }
                />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {},
                  Object {
                    "opacity": 0,
                  },
                ]
              }
            >
              <Text
                color="muted.700"
                fontSize="lg"
                fontStyle="normal"
                fontWeight="bold"
                ml={2}
                my="auto"
                style={
                  Array [
                    Object {
                      "color": "#404040",
                      "fontSize": 18,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                      "marginBottom": "auto",
                      "marginLeft": 8,
                      "marginTop": "auto",
                    },
                  ]
                }
              >
                Nativebase
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
        <View
          mt={1}
          size={200}
          style={
            Array [
              Object {
                "height": 200,
                "marginTop": 4,
                "width": 200,
              },
            ]
          }
        >
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            height="100%"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": "100%",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
            <View
              style={
                Object {
                  "opacity": 0,
                }
              }
            >
              <Image
                accessibilityLabel="NativeBase logo"
                alt="NativeBase logo"
                maxWidth="100%"
                onError={[Function]}
                size={200}
                source={
                  Object {
                    "uri": "https://www.w3schools.com/css/img_lights.jpg",
                  }
                }
                style={
                  Array [
                    Object {
                      "height": 200,
                      "maxWidth": "100%",
                      "width": 200,
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton FadeDuration 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "50%",
          },
        ]
      }
      w="50%"
    >
      <View
        bg="green.500"
        borderRadius={3}
        fadeDuration={0.9}
        h={20}
        isLoaded={false}
        speed={10}
        style={
          Array [
            Object {
              "backgroundColor": "#22c55e",
              "borderRadius": 3,
              "height": 80,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#db2777",
              "borderRadius": 3,
              "bottom": 0,
              "height": "100%",
              "opacity": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Skeleton isLoaded 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "80%",
          },
        ]
      }
      w="80%"
    >
      <View
        bg="transparent"
        borderRadius="full"
        fadeDuration={0.1}
        isLoaded={false}
        size={16}
        speed={1}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 9999,
              "height": 64,
              "width": 64,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "#e5e5e5",
              "borderRadius": 9999,
              "bottom": 0,
              "height": "100%",
              "opacity": 0,
              "position": "absolute",
              "top": 0,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        bg="transparent"
        borderRadius={3}
        fadeDuration={0.1}
        h={120}
        isLoaded={false}
        mt={5}
        noOfLines={6}
        speed={1}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderRadius": 3,
              "height": 120,
              "marginTop": 20,
            },
          ]
        }
      >
        <View
          bottom={0}
          justifyContent="flex-start"
          left={0}
          overflow="hidden"
          position="absolute"
          right={0}
          style={
            Array [
              Object {
                "bottom": 0,
                "justifyContent": "flex-start",
                "left": 0,
                "overflow": "hidden",
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
          top={0}
        >
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
          <View
            height={2}
            style={
              Array [
                Object {
                  "height": 8,
                },
              ]
            }
          />
          <View
            bg="transparent"
            borderRadius={3}
            fadeDuration={0.1}
            h="12px"
            isLoaded={false}
            speed={1}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderRadius": 3,
                  "height": 12,
                  "width": "75%",
                },
                undefined,
              ]
            }
            w="75%"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#e5e5e5",
                  "borderRadius": 3,
                  "bottom": 0,
                  "height": "100%",
                  "opacity": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "100%",
                }
              }
            />
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "opacity": 0,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            lineHeight="20px"
            mt={5}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "lineHeight": 20,
                  "marginTop": 20,
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={5}
      style={
        Array [
          Object {
            "marginLeft": 20,
            "marginRight": 20,
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        alignItems="center"
        aria-label="Slider"
        colorScheme="red"
        defaultValue={70}
        justifyContent="center"
        sliderSize={4}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        thumbSize={4}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={4}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="red.100"
            borderRadius="lg"
            colorScheme="red"
            overflow="hidden"
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#fee2e2",
                  "borderRadius": 6,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              bg="red.500"
              colorScheme="red"
              left={0}
              position="absolute"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#ef4444",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  undefined,
                  Object {
                    "height": 4,
                    "width": "70%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="red.500"
          borderRadius={99999}
          colorScheme="red"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={4}
          style={
            Array [
              Object {
                "backgroundColor": "#ef4444",
                "borderRadius": 99999,
                "height": 16,
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "70%",
                "transform": Array [
                  Object {
                    "translateX": -8,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Customized 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={5}
      style={
        Array [
          Object {
            "marginLeft": 20,
            "marginRight": 20,
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        alignItems="center"
        aria-label="Slider"
        colorScheme="orange"
        defaultValue={70}
        justifyContent="center"
        sliderSize={6}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        thumbSize={6}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={6}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="orange.100"
            borderRadius="lg"
            colorScheme="orange"
            overflow="hidden"
            size={6}
            style={
              Array [
                Object {
                  "backgroundColor": "#ffedd5",
                  "borderRadius": 6,
                  "height": 24,
                  "overflow": "hidden",
                  "width": 24,
                },
                Object {
                  "height": 6,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              bg="green.400"
              colorScheme="orange"
              left={0}
              position="absolute"
              size={6}
              style={
                Array [
                  Object {
                    "backgroundColor": "#4ade80",
                    "height": 24,
                    "left": 0,
                    "position": "absolute",
                    "width": 24,
                  },
                  undefined,
                  Object {
                    "height": 6,
                    "width": "70%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="gray.200"
          borderRadius={99999}
          borderWidth={0}
          colorScheme="orange"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={6}
          style={
            Array [
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 99999,
                "borderWidth": 0,
                "height": 24,
                "position": "absolute",
                "width": 24,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "70%",
                "transform": Array [
                  Object {
                    "translateX": -12,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        >
          <Text
            allowFontScaling={false}
            fontSize="24px"
            lineHeight="24px"
            style={
              Array [
                Object {
                  "color": "green.500",
                  "fontSize": 6,
                },
                Array [
                  Object {
                    "color": "#22c55e",
                    "fontSize": 24,
                    "height": 24,
                    "lineHeight": 24,
                    "width": 24,
                  },
                ],
                Object {
                  "fontFamily": "material",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={5}
      style={
        Array [
          Object {
            "marginLeft": 20,
            "marginRight": 20,
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        alignItems="center"
        aria-label="Slider"
        defaultValue={50}
        isDisabled={true}
        justifyContent="center"
        maxValue={100}
        minValue={0}
        opacity={0.6}
        sliderSize={4}
        step={1}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "opacity": 0.6,
              "width": "100%",
            },
          ]
        }
        thumbSize={4}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={4}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="red.200"
            borderRadius="lg"
            overflow="hidden"
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#fecaca",
                  "borderRadius": 6,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              _disabled={
                Object {
                  "bg": "red.600",
                }
              }
              bg="red.600"
              left={0}
              position="absolute"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#dc2626",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  undefined,
                  Object {
                    "height": 4,
                    "width": "50%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="blue.600"
          borderRadius={99999}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={4}
          style={
            Array [
              Object {
                "backgroundColor": "#2563eb",
                "borderRadius": 99999,
                "height": 16,
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "50%",
                "transform": Array [
                  Object {
                    "translateX": -8,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Form Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={10}
      style={
        Array [
          Object {
            "marginLeft": 40,
            "marginRight": 40,
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        isDisabled={true}
        isInvalid={true}
        isRequired={true}
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          flexDirection="row"
          justifyContent="flex-start"
          mb={2}
          mr={3}
          nativeID="field-react-aria-0-2-label"
          style={
            Array [
              Object {
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "marginBottom": 8,
                "marginRight": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Just Slide
          </Text>
          <Text
            color="error.400"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            *
          </Text>
        </View>
        <View
          alignItems="center"
          aria-label="Slider"
          defaultValue={50}
          justifyContent="center"
          sliderSize={4}
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
          thumbSize={4}
          width="100%"
        >
          <View
            accessible={true}
            alignItems="center"
            focusable={true}
            height={4}
            justifyContent="center"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            paddingY="12px"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "height": 16,
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingTop": 12,
                  "width": "100%",
                },
              ]
            }
            width="100%"
          >
            <View
              bg="primary.100"
              borderRadius="lg"
              overflow="hidden"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#cffafe",
                    "borderRadius": 6,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                bg="primary.500"
                left={0}
                position="absolute"
                size={4}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#06b6d4",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    undefined,
                    Object {
                      "height": 4,
                      "width": "50%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            bg="primary.500"
            borderRadius={99999}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            position="absolute"
            scaleOnPressed={1.2}
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 99999,
                  "height": 16,
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Object {
                  "bottom": undefined,
                  "left": "50%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ]
            }
            zIndex={999}
          />
        </View>
        <View
          mt={2}
          nativeID="field-react-aria-0-2-feedback"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="muted.500"
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#737373",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            We'll keep this between us.
          </Text>
        </View>
        <View
          mt={2}
          nativeID="field-react-aria-0-2-helptext"
          style={
            Array [
              Object {
                "marginTop": 8,
              },
            ]
          }
        >
          <Text
            color="error.400"
            fontSize="xs"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#f87171",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Don't worry, it's just an example.
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={5}
      style={
        Array [
          Object {
            "marginLeft": 20,
            "marginRight": 20,
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        alignItems="center"
        aria-label="Slider"
        defaultValue={50}
        justifyContent="center"
        maxValue={100}
        minValue={0}
        sliderSize={4}
        step={1}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        thumbSize={4}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={4}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="primary.100"
            borderRadius="lg"
            overflow="hidden"
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#cffafe",
                  "borderRadius": 6,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              bg="primary.500"
              left={0}
              position="absolute"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#06b6d4",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  undefined,
                  Object {
                    "height": 4,
                    "width": "50%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="primary.500"
          borderRadius={99999}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={4}
          style={
            Array [
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 99999,
                "height": 16,
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "50%",
                "transform": Array [
                  Object {
                    "translateX": -8,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider ReadOnly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={5}
      style={
        Array [
          Object {
            "marginLeft": 20,
            "marginRight": 20,
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        alignItems="center"
        aria-label="Slider"
        defaultValue={50}
        isReadOnly={true}
        justifyContent="center"
        maxValue={100}
        minValue={0}
        opacity={0.6}
        sliderSize={4}
        step={1}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "opacity": 0.6,
              "width": "100%",
            },
          ]
        }
        thumbSize={4}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={4}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="green.100"
            borderRadius="lg"
            overflow="hidden"
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#dcfce7",
                  "borderRadius": 6,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              _readOnly={
                Object {
                  "bg": "green.600",
                }
              }
              bg="green.600"
              left={0}
              position="absolute"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#16a34a",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  undefined,
                  Object {
                    "height": 4,
                    "width": "50%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="pink.600"
          borderRadius={99999}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={4}
          style={
            Array [
              Object {
                "backgroundColor": "#db2777",
                "borderRadius": 99999,
                "height": 16,
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "50%",
                "transform": Array [
                  Object {
                    "translateX": -8,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        alignItems="center"
        aria-label="Slider"
        colorScheme="red"
        defaultValue={40}
        justifyContent="center"
        sliderSize={6}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        thumbSize={6}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={6}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="red.100"
            borderRadius="lg"
            colorScheme="red"
            overflow="hidden"
            size={6}
            style={
              Array [
                Object {
                  "backgroundColor": "#fee2e2",
                  "borderRadius": 6,
                  "height": 24,
                  "overflow": "hidden",
                  "width": 24,
                },
                Object {
                  "height": 6,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              bg="red.500"
              colorScheme="red"
              left={0}
              position="absolute"
              size={6}
              style={
                Array [
                  Object {
                    "backgroundColor": "#ef4444",
                    "height": 24,
                    "left": 0,
                    "position": "absolute",
                    "width": 24,
                  },
                  undefined,
                  Object {
                    "height": 6,
                    "width": "40%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="red.500"
          borderRadius={99999}
          colorScheme="red"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={6}
          style={
            Array [
              Object {
                "backgroundColor": "#ef4444",
                "borderRadius": 99999,
                "height": 24,
                "position": "absolute",
                "width": 24,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "40%",
                "transform": Array [
                  Object {
                    "translateX": -12,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        aria-label="Slider"
        defaultValue={60}
        justifyContent="center"
        sliderSize={5}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        thumbSize={5}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={5}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 20,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="primary.100"
            borderRadius="lg"
            overflow="hidden"
            size={5}
            style={
              Array [
                Object {
                  "backgroundColor": "#cffafe",
                  "borderRadius": 6,
                  "height": 20,
                  "overflow": "hidden",
                  "width": 20,
                },
                Object {
                  "height": 5,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              bg="primary.500"
              left={0}
              position="absolute"
              size={5}
              style={
                Array [
                  Object {
                    "backgroundColor": "#06b6d4",
                    "height": 20,
                    "left": 0,
                    "position": "absolute",
                    "width": 20,
                  },
                  undefined,
                  Object {
                    "height": 5,
                    "width": "60%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="primary.500"
          borderRadius={99999}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={5}
          style={
            Array [
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 99999,
                "height": 20,
                "position": "absolute",
                "width": 20,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "60%",
                "transform": Array [
                  Object {
                    "translateX": -10,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        aria-label="Slider"
        colorScheme="green"
        defaultValue={80}
        justifyContent="center"
        sliderSize={4}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        thumbSize={4}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={4}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="green.100"
            borderRadius="lg"
            colorScheme="green"
            overflow="hidden"
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#dcfce7",
                  "borderRadius": 6,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              bg="green.500"
              colorScheme="green"
              left={0}
              position="absolute"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#22c55e",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  undefined,
                  Object {
                    "height": 4,
                    "width": "80%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="green.500"
          borderRadius={99999}
          colorScheme="green"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={4}
          style={
            Array [
              Object {
                "backgroundColor": "#22c55e",
                "borderRadius": 99999,
                "height": 16,
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "80%",
                "transform": Array [
                  Object {
                    "translateX": -8,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={5}
      style={
        Array [
          Object {
            "marginLeft": 20,
            "marginRight": 20,
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        accessibilityLabel="hello world"
        alignItems="center"
        aria-label="hello world"
        defaultValue={70}
        justifyContent="center"
        maxValue={100}
        minValue={0}
        sliderSize={4}
        step={10}
        style={
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "width": "100%",
            },
          ]
        }
        thumbSize={4}
        width="100%"
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height={4}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingY="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": 16,
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingTop": 12,
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            bg="primary.100"
            borderRadius="lg"
            overflow="hidden"
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#cffafe",
                  "borderRadius": 6,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": 4,
                  "width": "100%",
                },
              ]
            }
          >
            <View
              bg="primary.500"
              left={0}
              position="absolute"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#06b6d4",
                    "height": 16,
                    "left": 0,
                    "position": "absolute",
                    "width": 16,
                  },
                  undefined,
                  Object {
                    "height": 4,
                    "width": "70%",
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="primary.500"
          borderRadius={99999}
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={4}
          style={
            Array [
              Object {
                "backgroundColor": "#06b6d4",
                "borderRadius": 99999,
                "height": 16,
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Object {
                "bottom": undefined,
                "left": "70%",
                "transform": Array [
                  Object {
                    "translateX": -8,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Value 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      mx={5}
      style={
        Array [
          Object {
            "alignItems": "center",
            "marginLeft": 20,
            "marginRight": 20,
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        onChangeValue - 
        70
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        onChangeEndValue - 
        70
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        mx={5}
        style={
          Array [
            Object {
              "marginLeft": 20,
              "marginRight": 20,
              "width": 250,
            },
          ]
        }
        w="250"
      >
        <View
          alignItems="center"
          aria-label="Slider"
          colorScheme="cyan"
          defaultValue={70}
          justifyContent="center"
          onChange={[Function]}
          onChangeEnd={[Function]}
          sliderSize={4}
          style={
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
          thumbSize={4}
          width="100%"
        >
          <View
            accessible={true}
            alignItems="center"
            focusable={true}
            height={4}
            justifyContent="center"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onLayout={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            paddingY="12px"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "height": 16,
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingTop": 12,
                  "width": "100%",
                },
              ]
            }
            width="100%"
          >
            <View
              bg="cyan.100"
              borderRadius="lg"
              colorScheme="cyan"
              overflow="hidden"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#cffafe",
                    "borderRadius": 6,
                    "height": 16,
                    "overflow": "hidden",
                    "width": 16,
                  },
                  Object {
                    "height": 4,
                    "width": "100%",
                  },
                ]
              }
            >
              <View
                bg="cyan.500"
                colorScheme="cyan"
                left={0}
                position="absolute"
                size={4}
                style={
                  Array [
                    Object {
                      "backgroundColor": "#06b6d4",
                      "height": 16,
                      "left": 0,
                      "position": "absolute",
                      "width": 16,
                    },
                    undefined,
                    Object {
                      "height": 4,
                      "width": "70%",
                    },
                  ]
                }
              />
            </View>
          </View>
          <View
            bg="cyan.500"
            borderRadius={99999}
            colorScheme="cyan"
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            position="absolute"
            scaleOnPressed={1.2}
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#06b6d4",
                  "borderRadius": 99999,
                  "height": 16,
                  "position": "absolute",
                  "width": 16,
                  "zIndex": 999,
                },
                Object {
                  "bottom": undefined,
                  "left": "70%",
                  "transform": Array [
                    Object {
                      "translateX": -8,
                    },
                    Object {
                      "scale": 1,
                    },
                  ],
                },
                undefined,
              ]
            }
            zIndex={999}
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Slider Vertical 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      mx={5}
      style={
        Array [
          Object {
            "marginLeft": 20,
            "marginRight": 20,
            "width": "80%",
          },
        ]
      }
      width="80%"
    >
      <View
        alignItems="center"
        aria-label="Slider"
        colorScheme="lime"
        defaultValue={70}
        h={48}
        height="100%"
        justifyContent="center"
        orientation="vertical"
        sliderSize={4}
        style={
          Array [
            Object {
              "alignItems": "center",
              "height": 192,
              "justifyContent": "center",
            },
          ]
        }
        thumbSize={4}
      >
        <View
          accessible={true}
          alignItems="center"
          focusable={true}
          height="100%"
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onLayout={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          paddingX="12px"
          style={
            Array [
              Object {
                "alignItems": "center",
                "height": "100%",
                "justifyContent": "center",
                "paddingLeft": 12,
                "paddingRight": 12,
                "width": 16,
              },
            ]
          }
          width={4}
        >
          <View
            bg="lime.100"
            borderRadius="lg"
            colorScheme="lime"
            overflow="hidden"
            size={4}
            style={
              Array [
                Object {
                  "backgroundColor": "#ecfccb",
                  "borderRadius": 6,
                  "height": 16,
                  "overflow": "hidden",
                  "width": 16,
                },
                Object {
                  "height": "100%",
                  "width": 4,
                },
              ]
            }
          >
            <View
              bg="lime.500"
              bottom={0}
              colorScheme="lime"
              position="absolute"
              size={4}
              style={
                Array [
                  Object {
                    "backgroundColor": "#84cc16",
                    "bottom": 0,
                    "height": 16,
                    "position": "absolute",
                    "width": 16,
                  },
                  undefined,
                  Object {
                    "height": "70%",
                    "width": 4,
                  },
                ]
              }
            />
          </View>
        </View>
        <View
          bg="lime.500"
          borderRadius={99999}
          colorScheme="lime"
          onMoveShouldSetResponder={[Function]}
          onMoveShouldSetResponderCapture={[Function]}
          onResponderEnd={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderReject={[Function]}
          onResponderRelease={[Function]}
          onResponderStart={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onStartShouldSetResponderCapture={[Function]}
          position="absolute"
          scaleOnPressed={1.2}
          size={4}
          style={
            Array [
              Object {
                "backgroundColor": "#84cc16",
                "borderRadius": 99999,
                "height": 16,
                "position": "absolute",
                "width": 16,
                "zIndex": 999,
              },
              Object {
                "bottom": "70%",
                "left": undefined,
                "transform": Array [
                  Object {
                    "translateY": 8,
                  },
                  Object {
                    "scale": 1,
                  },
                ],
              },
              undefined,
            ]
          }
          zIndex={999}
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Color 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#fb7185"
        hidesWhenStopped={true}
        size="large"
        style={
          Array [
            Object {
              "color": "#fb7185",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#3b82f6"
        hidesWhenStopped={true}
        size="large"
        style={
          Array [
            Object {
              "color": "#3b82f6",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#18181b"
        hidesWhenStopped={true}
        size="large"
        style={
          Array [
            Object {
              "color": "#18181b",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#f97316"
        hidesWhenStopped={true}
        size="large"
        style={
          Array [
            Object {
              "color": "#f97316",
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Playground 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      display="flex"
      justifyContent="space-between"
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "space-between",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        mb={3}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
              "marginBottom": 12,
            },
          ]
        }
      >
        Playaround with Knobs
      </Text>
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#67e8f9"
        hidesWhenStopped={true}
        size="md"
        style={
          Array [
            Object {
              "color": "#67e8f9",
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#22d3ee"
        hidesWhenStopped={true}
        size="small"
        style={
          Array [
            Object {
              "color": "#22d3ee",
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": 12,
            },
          ]
        }
        width={3}
      />
      <ActivityIndicator
        accessibilityLabel="loading"
        accessible={true}
        animating={true}
        color="#22d3ee"
        hidesWhenStopped={true}
        size="large"
        style={
          Array [
            Object {
              "color": "#22d3ee",
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Spinner Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="row"
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        color="primary.300"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#67e8f9",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Spinner
      </Text>
      <View
        style={
          Array [
            Object {
              "width": 8,
            },
          ]
        }
        width={2}
      />
      <ActivityIndicator
        accessibilityLabel="Loading posts"
        accessible={true}
        animating={true}
        color="#22d3ee"
        hidesWhenStopped={true}
        size="large"
        style={
          Array [
            Object {
              "color": "#22d3ee",
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Stack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Stack - 
        Column
      </Text>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        alignItems="center"
        flexDirection="column"
        mb={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "column",
              "marginBottom": 12,
            },
          ]
        }
      >
        <View
          alignItems="center"
          bg="primary.400"
          display="flex"
          justifyContent="center"
          rounded="md"
          size={16}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#22d3ee",
                "borderRadius": 4,
                "display": "flex",
                "height": 64,
                "justifyContent": "center",
                "width": 64,
              },
              Object {
                "elevation": 4,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
              },
            ]
          }
        >
          <Text
            color="white"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Box 1
          </Text>
        </View>
        <View
          height={3}
          style={
            Array [
              Object {
                "height": 12,
              },
            ]
          }
        />
        <View
          alignItems="center"
          bg="secondary.400"
          display="flex"
          justifyContent="center"
          rounded="md"
          size={16}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#f472b6",
                "borderRadius": 4,
                "display": "flex",
                "height": 64,
                "justifyContent": "center",
                "width": 64,
              },
              Object {
                "elevation": 4,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
              },
            ]
          }
        >
          <Text
            color="white"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Box 2
          </Text>
        </View>
        <View
          height={3}
          style={
            Array [
              Object {
                "height": 12,
              },
            ]
          }
        />
        <View
          alignItems="center"
          bg="emerald.400"
          display="flex"
          justifyContent="center"
          rounded="md"
          size={16}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#34d399",
                "borderRadius": 4,
                "display": "flex",
                "height": 64,
                "justifyContent": "center",
                "width": 64,
              },
              Object {
                "elevation": 4,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
              },
            ]
          }
        >
          <Text
            color="white"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            Box 3
          </Text>
        </View>
      </View>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Change Stack Direction
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Stack Divider 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Stack with Divider
      </Text>
      <View
        height={3}
        style={
          Array [
            Object {
              "height": 12,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          alignItems="center"
          flexDirection="row"
          mb={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "marginBottom": 12,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Simple
            </Text>
          </View>
          <View
            aria-orientation="vertical"
            bg="red.200"
            height="100%"
            mx={3}
            style={
              Array [
                Object {
                  "backgroundColor": "#fecaca",
                  "height": "100%",
                  "marginLeft": 12,
                  "marginRight": 12,
                  "width": 1,
                },
              ]
            }
            width="1px"
          />
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Easy
            </Text>
          </View>
          <View
            aria-orientation="vertical"
            bg="red.200"
            height="100%"
            mx={3}
            style={
              Array [
                Object {
                  "backgroundColor": "#fecaca",
                  "height": "100%",
                  "marginLeft": 12,
                  "marginRight": 12,
                  "width": 1,
                },
              ]
            }
            width="1px"
          />
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="muted.700"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#404040",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Beautiful
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots StatusBar Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Accessibility 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      flexDirection="row"
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="lg"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Accessibility
      </Text>
      <View
        style={
          Array [
            Object {
              "width": 32,
            },
          ]
        }
        width={8}
      />
      <RCTSwitch
        accessibilityHint="turn on or off"
        accessibilityLabel="switch-accessible"
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      flexDirection="row"
      style={
        Array [
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="lg"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Setting 1
      </Text>
      <View
        style={
          Array [
            Object {
              "width": 32,
            },
          ]
        }
        width={8}
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch ColorSchemes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Switch ColorScheme
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="secondary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#ec4899"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="emerald"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#10b981"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Switch Sizes
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {
                  "transform": Array [
                    Object {
                      "scale": 0.75,
                    },
                  ],
                },
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        margin={1}
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "marginBottom": 4,
                  "marginLeft": 4,
                  "marginRight": 4,
                  "marginTop": 4,
                  "opacity": 1,
                },
                Object {
                  "transform": Array [
                    Object {
                      "scale": 1.25,
                    },
                  ],
                },
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Switch Switch bgColor 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Switch Track & Thumb Color
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#e4e4e7"
        value={false}
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#FFFFFF"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#d9f99d"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#fecdd3",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#FFFFFF"
        tintColor="#fecdd3"
        value={false}
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <RCTSwitch
        accessibilityRole="switch"
        activeThumbColor="#d9f99d"
        colorScheme="primary"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#06b6d4"
        opacity={1}
        style={
          Array [
            Object {
              "height": 31,
              "width": 51,
            },
            Array [
              Array [
                Object {
                  "opacity": 1,
                },
                Object {},
              ],
              Object {
                "backgroundColor": "#e4e4e7",
                "borderRadius": 16,
              },
            ],
          ]
        }
        thumbTintColor="#fecdd3"
        tintColor="#e4e4e7"
        value={false}
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        accessibilityRole="tablist"
        borderBottomWidth={2}
        borderColor="muted.200"
        flexDirection="row"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          mb="-2px"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": -2,
              },
            ]
          }
        >
          <View
            alignItems="center"
            borderBottomWidth={2}
            borderColor="transparent"
            flexDirection="row"
            justifyContent="center"
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              color="gray.500"
              fontSize="sm"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#71717a",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              TAB ONE
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          mb="-2px"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": -2,
              },
            ]
          }
        >
          <View
            alignItems="center"
            borderBottomWidth={2}
            borderColor="transparent"
            flexDirection="row"
            justifyContent="center"
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              color="gray.500"
              fontSize="sm"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#71717a",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              TAB TWO
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Colors 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      p={3}
      style={
        Array [
          Object {
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        colorScheme="primary"
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        colorScheme="secondary"
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        colorScheme="emerald"
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        colorScheme="orange"
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        colorScheme="info"
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Composition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      p={3}
      style={
        Array [
          Object {
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        To show how tabs behaves around other components.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      index={0}
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        accessibilityRole="tablist"
        borderBottomWidth={2}
        borderColor="muted.200"
        flexDirection="row"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": true,
            }
          }
          accessible={true}
          focusable={true}
          mb="-2px"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": -2,
              },
            ]
          }
        >
          <View
            alignItems="center"
            borderBottomWidth={2}
            borderColor="#22d3ee"
            flexDirection="row"
            justifyContent="center"
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "#22d3ee",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                undefined,
                undefined,
                undefined,
              ]
            }
          >
            <Text
              color="primary.600"
              fontSize="sm"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#0891b2",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              One
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          mb="-2px"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": -2,
              },
            ]
          }
        >
          <View
            accessibilityLabel="two"
            alignItems="center"
            borderBottomWidth={2}
            borderColor="transparent"
            flexDirection="row"
            justifyContent="center"
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              color="red.500"
              fontSize="md"
              fontStyle="normal"
              fontWeight={400}
              style={
                Array [
                  Object {
                    "color": "#ef4444",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "400",
                  },
                ]
              }
            >
              Two
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          mb="-2px"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": -2,
              },
            ]
          }
        >
          <View
            accessibilityLabel="three"
            alignItems="center"
            borderBottomWidth={2}
            borderColor="transparent"
            flexDirection="row"
            justifyContent="center"
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              color="gray.500"
              fontSize="sm"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#71717a",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              Three
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <View
          p={3}
          style={
            Array [
              Object {
                "paddingBottom": 12,
                "paddingLeft": 12,
                "paddingRight": 12,
                "paddingTop": 12,
              },
            ]
          }
        >
          <Text
            color="muted.700"
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            style={
              Array [
                Object {
                  "color": "#404040",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                },
              ]
            }
          >
            One
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Fitted Tab 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="space-between"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            flex={1}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            flex={1}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            flex={1}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            flex={1}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Four
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs IconTabs 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      p={3}
      style={
        Array [
          Object {
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={32}
                bbWidth={32}
                color={4280690214}
                focusable={false}
                mx={2}
                name="home"
                size={8}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#262626",
                        "height": 32,
                        "marginLeft": 8,
                        "marginRight": 8,
                        "width": 32,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                        "strokeWidth",
                      ]
                    }
                    stroke={
                      Array [
                        2,
                      ]
                    }
                    strokeWidth="1.5"
                  >
                    <RNSVGPath
                      d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGPath
                      d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGCircle
                      cx="12"
                      cy="12"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeMiterlimit",
                        ]
                      }
                      r="11.25"
                      strokeMiterlimit={10}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Home
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={32}
                bbWidth={32}
                color={4280690214}
                focusable={false}
                mx={2}
                name="book"
                size={8}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#262626",
                        "height": 32,
                        "marginLeft": 8,
                        "marginRight": 8,
                        "width": 32,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                        "strokeWidth",
                      ]
                    }
                    stroke={
                      Array [
                        2,
                      ]
                    }
                    strokeWidth="1.5"
                  >
                    <RNSVGPath
                      d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGPath
                      d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGCircle
                      cx="12"
                      cy="12"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeMiterlimit",
                        ]
                      }
                      r="11.25"
                      strokeMiterlimit={10}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Bookmarks
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={32}
                bbWidth={32}
                color={4280690214}
                focusable={false}
                mx={2}
                name="camera"
                size={8}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#262626",
                        "height": 32,
                        "marginLeft": 8,
                        "marginRight": 8,
                        "width": 32,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 32,
                      "width": 32,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup
                    propList={
                      Array [
                        "stroke",
                        "strokeWidth",
                      ]
                    }
                    stroke={
                      Array [
                        2,
                      ]
                    }
                    strokeWidth="1.5"
                  >
                    <RNSVGPath
                      d="M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGPath
                      d="M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeLinecap",
                        ]
                      }
                      strokeLinecap={1}
                    />
                    <RNSVGCircle
                      cx="12"
                      cy="12"
                      fill={null}
                      propList={
                        Array [
                          "fill",
                          "strokeMiterlimit",
                        ]
                      }
                      r="11.25"
                      strokeMiterlimit={10}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Camera
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      p={3}
      style={
        Array [
          Object {
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={3}
              py={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={3}
              py={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={3}
              py={2}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 8,
                    "paddingLeft": 12,
                    "paddingRight": 12,
                    "paddingTop": 8,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="md"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={5}
              py={4}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 16,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 16,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="lg"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 18,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={5}
              py={4}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 16,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 16,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="lg"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 18,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={5}
              py={4}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 16,
                    "paddingLeft": 20,
                    "paddingRight": 20,
                    "paddingTop": 16,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="lg"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 18,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Tab Alignment 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      p={3}
      style={
        Array [
          Object {
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="center"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "center",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-end"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-end",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs TabBarOnly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        accessibilityRole="tablist"
        borderBottomWidth={2}
        borderColor="muted.200"
        flexDirection="row"
        justifyContent="flex-start"
        style={
          Array [
            Object {
              "borderBottomWidth": 2,
              "borderColor": "#e5e5e5",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "width": "100%",
            },
          ]
        }
        width="100%"
      >
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          mb="-2px"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": -2,
              },
            ]
          }
        >
          <View
            alignItems="center"
            borderBottomWidth={2}
            borderColor="transparent"
            flexDirection="row"
            justifyContent="center"
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              color="gray.500"
              fontSize="sm"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#71717a",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              One
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          mb="-2px"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": -2,
              },
            ]
          }
        >
          <View
            alignItems="center"
            borderBottomWidth={2}
            borderColor="transparent"
            flexDirection="row"
            justifyContent="center"
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              color="gray.500"
              fontSize="sm"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#71717a",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              Two
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="tab"
          accessibilityState={
            Object {
              "selected": false,
            }
          }
          accessible={true}
          focusable={true}
          mb="-2px"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "marginBottom": -2,
              },
            ]
          }
        >
          <View
            alignItems="center"
            borderBottomWidth={2}
            borderColor="transparent"
            flexDirection="row"
            justifyContent="center"
            px={4}
            py={3}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 2,
                  "borderColor": "transparent",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                undefined,
                false,
                undefined,
              ]
            }
          >
            <Text
              color="gray.500"
              fontSize="sm"
              fontStyle="normal"
              fontWeight="bold"
              style={
                Array [
                  Object {
                    "color": "#71717a",
                    "fontSize": 14,
                    "fontStyle": "normal",
                    "fontWeight": "700",
                  },
                ]
              }
            >
              Three
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Array [
            Object {},
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tabs Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      p={3}
      style={
        Array [
          Object {
            "paddingBottom": 12,
            "paddingLeft": 12,
            "paddingRight": 12,
            "paddingTop": 12,
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        variant="outline"
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        variant="filled"
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
      <View
        height={7}
        style={
          Array [
            Object {
              "height": 28,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {
              "width": "100%",
            },
          ]
        }
        variant="filled-outline"
        width="100%"
      >
        <View
          accessibilityRole="tablist"
          bg="primary.100"
          borderBottomWidth={2}
          borderColor="muted.200"
          flexDirection="row"
          justifyContent="flex-start"
          style={
            Array [
              Object {
                "backgroundColor": "#cffafe",
                "borderBottomWidth": 2,
                "borderColor": "#e5e5e5",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "width": "100%",
              },
            ]
          }
          width="100%"
        >
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                One
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Two
              </Text>
            </View>
          </View>
          <View
            accessibilityRole="tab"
            accessibilityState={
              Object {
                "selected": false,
              }
            }
            accessible={true}
            focusable={true}
            mb="-2px"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onHoverIn={[Function]}
            onHoverOut={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "marginBottom": -2,
                },
              ]
            }
          >
            <View
              alignItems="center"
              borderBottomWidth={2}
              borderColor="transparent"
              flexDirection="row"
              justifyContent="center"
              px={4}
              py={3}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderBottomWidth": 2,
                    "borderColor": "transparent",
                    "flexDirection": "row",
                    "justifyContent": "center",
                    "paddingBottom": 12,
                    "paddingLeft": 16,
                    "paddingRight": 16,
                    "paddingTop": 12,
                  },
                  undefined,
                  false,
                  undefined,
                ]
              }
            >
              <Text
                color="gray.500"
                fontSize="sm"
                fontStyle="normal"
                fontWeight="bold"
                style={
                  Array [
                    Object {
                      "color": "#71717a",
                      "fontSize": 14,
                      "fontStyle": "normal",
                      "fontWeight": "700",
                    },
                  ]
                }
              >
                Three
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      color="muted.700"
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      style={
        Array [
          Object {
            "color": "#404040",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
          },
        ]
      }
    >
      This is Text.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Changing Font Size 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="xs"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Extra Small
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="sm"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 14,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Small
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Medium
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="lg"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 18,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Large
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="xl"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Extra Large
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="2xl"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 24,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        2 Extra Large
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        3 Extra Large
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="4xl"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 36,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        4 Extra Large
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="5xl"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 48,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        5 Extra Large
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="6xl"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 60,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        6 Extra Large
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Nested 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      color="muted.700"
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      style={
        Array [
          Object {
            "color": "#404040",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
          },
        ]
      }
    >
      This is the 
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        nested
      </Text>
       example.
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Overriden 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize={20}
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 20,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Custom font-size value for this text
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        Bold
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="italic"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "italic",
              "fontWeight": "400",
            },
          ]
        }
      >
        Italic
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "textDecorationLine": "underline",
            },
          ]
        }
        textDecorationLine="underline"
      >
        Underline
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        bg="warning.200"
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "backgroundColor": "#fed7aa",
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        Highlighted
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        H
        <Text
          color="muted.700"
          fontSize={10}
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 10,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          2
        </Text>
        O
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "textDecorationLine": "underline",
            },
          ]
        }
        textDecorationLine="underline"
      >
        Underline
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "textDecorationLine": "line-through",
            },
          ]
        }
        textDecorationLine="line-through"
      >
        StrikeThrough
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="italic"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "italic",
              "fontWeight": "700",
              "textDecorationLine": "underline",
            },
          ]
        }
        textDecorationLine="underline"
      >
        Bold, Italic & Underline
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Text Truncated 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
            "width": "100%",
          },
        ]
      }
      width="100%"
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        mt={3}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
              "marginTop": 12,
            },
          ]
        }
      >
        Truncated 
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        numberOfLines={1}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "width": "80%",
            },
          ]
        }
        w="80%"
      >
        Lorem ipsum is placeholder text commonly used in the graphic, print, and publishing industries for previewing layouts and visual mockups.
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        mt={3}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
              "marginTop": 12,
            },
          ]
        }
      >
        With Two lines 
      </Text>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        numberOfLines={2}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        "The quick brown fox jumps over the lazy dog" is an English-language pangram—a sentence that contains all of the letters of the English alphabet. Owing to its existence, Chakra was created.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Default 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        h={20}
        multiline={true}
        numberOfLines={4}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Text Area Placeholder"
        placeholderTextColor="#a3a3a3"
        px={4}
        py={2}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": 80,
              "paddingBottom": 8,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 8,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea InValid and Disabled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Invalid TextArea
        </Text>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessibilityInvalid={true}
        accessible={true}
        allowFontScaling={true}
        aria-label="t1"
        background="transparent"
        borderColor="error.600"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        h={20}
        multiline={true}
        numberOfLines={4}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholder="Invalid TextArea"
        placeholderTextColor="#a3a3a3"
        px={4}
        py={2}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#dc2626",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": 80,
              "paddingBottom": 8,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 8,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Disabled TextArea
        </Text>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <TextInput
        accessible={true}
        allowFontScaling={true}
        aria-label="t1Disabled"
        background="transparent"
        bg="muted.100"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        disabled={true}
        editable={false}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        h={20}
        multiline={true}
        numberOfLines={4}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        opacity={0.8}
        placeholder="Disabled TextArea"
        placeholderTextColor="#a3a3a3"
        px={4}
        py={2}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "backgroundColor": "#f5f5f5",
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": 80,
              "opacity": 0.8,
              "paddingBottom": 8,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 8,
            },
          ]
        }
        underlineColorAndroid="transparent"
        variant="outline"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Sizes 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <RCTScrollView
      contentContainerStyle={Object {}}
      style={
        Array [
          Object {},
        ]
      }
    >
      <View>
        <View
          style={
            Array [
              Object {
                "width": "90%",
              },
            ]
          }
          w="90%"
        >
          <TextInput
            accessible={true}
            allowFontScaling={true}
            aria-label="t2"
            background="transparent"
            borderColor="muted.200"
            borderRadius="lg"
            borderWidth={1}
            color="black"
            editable={true}
            fontSize="xs"
            fontStyle="normal"
            fontWeight={400}
            h={20}
            multiline={true}
            numberOfLines={4}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="xs"
            placeholderTextColor="#a3a3a3"
            px={4}
            py={2}
            rejectResponderTermination={true}
            secureTextEntry={false}
            style={
              Array [
                Object {
                  "borderColor": "#e5e5e5",
                  "borderRadius": 6,
                  "borderWidth": 1,
                  "color": "#000000",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
            underlineColorAndroid="transparent"
            variant="outline"
          />
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <TextInput
            accessible={true}
            allowFontScaling={true}
            aria-label="t2"
            background="transparent"
            borderColor="muted.200"
            borderRadius="lg"
            borderWidth={1}
            color="black"
            editable={true}
            fontSize="sm"
            fontStyle="normal"
            fontWeight={400}
            h={20}
            multiline={true}
            numberOfLines={4}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="sm"
            placeholderTextColor="#a3a3a3"
            px={4}
            py={2}
            rejectResponderTermination={true}
            secureTextEntry={false}
            style={
              Array [
                Object {
                  "borderColor": "#e5e5e5",
                  "borderRadius": 6,
                  "borderWidth": 1,
                  "color": "#000000",
                  "fontSize": 14,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
            underlineColorAndroid="transparent"
            variant="outline"
          />
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <TextInput
            accessible={true}
            allowFontScaling={true}
            aria-label="t2"
            background="transparent"
            borderColor="muted.200"
            borderRadius="lg"
            borderWidth={1}
            color="black"
            editable={true}
            fontSize="md"
            fontStyle="normal"
            fontWeight={400}
            h={20}
            multiline={true}
            numberOfLines={4}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="md"
            placeholderTextColor="#a3a3a3"
            px={4}
            py={2}
            rejectResponderTermination={true}
            secureTextEntry={false}
            style={
              Array [
                Object {
                  "borderColor": "#e5e5e5",
                  "borderRadius": 6,
                  "borderWidth": 1,
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
            underlineColorAndroid="transparent"
            variant="outline"
          />
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <TextInput
            accessible={true}
            allowFontScaling={true}
            aria-label="t2"
            background="transparent"
            borderColor="muted.200"
            borderRadius="lg"
            borderWidth={1}
            color="black"
            editable={true}
            fontSize="lg"
            fontStyle="normal"
            fontWeight={400}
            h={20}
            multiline={true}
            numberOfLines={4}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="lg"
            placeholderTextColor="#a3a3a3"
            px={4}
            py={2}
            rejectResponderTermination={true}
            secureTextEntry={false}
            style={
              Array [
                Object {
                  "borderColor": "#e5e5e5",
                  "borderRadius": 6,
                  "borderWidth": 1,
                  "color": "#000000",
                  "fontSize": 18,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
            underlineColorAndroid="transparent"
            variant="outline"
          />
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <TextInput
            accessible={true}
            allowFontScaling={true}
            aria-label="t2"
            background="transparent"
            borderColor="muted.200"
            borderRadius="lg"
            borderWidth={1}
            color="black"
            editable={true}
            fontSize="xl"
            fontStyle="normal"
            fontWeight={400}
            h={20}
            multiline={true}
            numberOfLines={4}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="xl"
            placeholderTextColor="#a3a3a3"
            px={4}
            py={2}
            rejectResponderTermination={true}
            secureTextEntry={false}
            style={
              Array [
                Object {
                  "borderColor": "#e5e5e5",
                  "borderRadius": 6,
                  "borderWidth": 1,
                  "color": "#000000",
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
            underlineColorAndroid="transparent"
            variant="outline"
          />
          <View
            height={4}
            style={
              Array [
                Object {
                  "height": 16,
                },
              ]
            }
          />
          <TextInput
            accessible={true}
            allowFontScaling={true}
            aria-label="t2"
            background="transparent"
            borderColor="muted.200"
            borderRadius="lg"
            borderWidth={1}
            color="black"
            editable={true}
            fontSize="2xl"
            fontStyle="normal"
            fontWeight={400}
            h={20}
            multiline={true}
            numberOfLines={4}
            onBlur={[Function]}
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="2xl"
            placeholderTextColor="#a3a3a3"
            px={4}
            py={2}
            rejectResponderTermination={true}
            secureTextEntry={false}
            style={
              Array [
                Object {
                  "borderColor": "#e5e5e5",
                  "borderRadius": 6,
                  "borderWidth": 1,
                  "color": "#000000",
                  "fontSize": 24,
                  "fontStyle": "normal",
                  "fontWeight": "400",
                  "height": 80,
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 8,
                },
              ]
            }
            underlineColorAndroid="transparent"
            variant="outline"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots TextArea Value Controlled 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {
            "width": "90%",
          },
        ]
      }
      w="90%"
    >
      <TextInput
        accessible={true}
        allowFontScaling={true}
        background="transparent"
        borderColor="muted.200"
        borderRadius="lg"
        borderWidth={1}
        color="black"
        editable={true}
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        h={20}
        multiline={true}
        numberOfLines={4}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onKeyPress={[Function]}
        placeholderTextColor="#a3a3a3"
        px={4}
        py={2}
        rejectResponderTermination={true}
        secureTextEntry={false}
        style={
          Array [
            Object {
              "borderColor": "#e5e5e5",
              "borderRadius": 6,
              "borderWidth": 1,
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
              "height": 80,
              "paddingBottom": 8,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 8,
            },
          ]
        }
        underlineColorAndroid="transparent"
        value="Value Controlled"
        variant="outline"
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Bottom
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast CloseToast 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      flexDirection="column"
      style={
        Array [
          Object {
            "flexDirection": "column",
          },
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Toast
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="transparent"
        border="1px solid"
        borderColor="primary.300"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#67e8f9",
              "borderRadius": 6,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="primary.500"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#06b6d4",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Close last toast
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="transparent"
        border="1px solid"
        borderColor="primary.300"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#67e8f9",
              "borderRadius": 6,
              "borderStyle": "solid",
              "borderWidth": 1,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="primary.500"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#06b6d4",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Close all toasts
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Custom Component 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Custom Toast
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Custom Component with custom Id 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Custom Toast
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Prevent Duplicate 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Click me!
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Status 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Success
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Error
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Info
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Warning
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Toast Positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Bottom
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Top
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Top left
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Top right
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Bottom left
            </Text>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Bottom right
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Toast Ref 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Bottom
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Toast Toast Variants 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      display="flex"
      flexDirection="column"
      flexWrap="wrap"
      style={
        Array [
          Object {
            "display": "flex",
            "flexDirection": "column",
            "flexWrap": "wrap",
          },
        ]
      }
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        mb={2}
        mr={2}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 8,
              "marginRight": 8,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Show solid toast
            </Text>
          </View>
        </View>
      </View>
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        mb={2}
        mr={2}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 8,
              "marginRight": 8,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Show subtle toast
            </Text>
          </View>
        </View>
      </View>
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        mb={2}
        mr={2}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 8,
              "marginRight": 8,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Show left-accent toast
            </Text>
          </View>
        </View>
      </View>
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        mb={2}
        mr={2}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 8,
              "marginRight": 8,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Show top-accent toast
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            More
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Customizing 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            More
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Tooltip Tooltip Positions 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignSelf="flex-start"
      style={
        Array [
          Object {
            "alignSelf": "flex-start",
            "width": "100%",
          },
        ]
      }
      w="100%"
    >
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        alignSelf="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              ToolTip
            </Text>
          </View>
        </View>
      </View>
      <View
        height={6}
        style={
          Array [
            Object {
              "height": 24,
            },
          ]
        }
      />
      <View
        borderColor="transparent"
        borderRadius="lg"
        borderWidth={1}
        mx={0}
        style={
          Array [
            Object {
              "borderColor": "transparent",
              "borderRadius": 6,
              "borderWidth": 1,
              "marginLeft": 0,
              "marginRight": 0,
            },
          ]
        }
      >
        <View
          accessibilityLabel="Select your favorite programming language"
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            pointerEvents="none"
          >
            <View
              alignItems="center"
              borderColor="muted.200"
              borderRadius="lg"
              borderWidth={1}
              display="flex"
              flexDirection="row"
              justifyContent="space-between"
              overflow="hidden"
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#e5e5e5",
                    "borderRadius": 6,
                    "borderWidth": 1,
                    "display": "flex",
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "overflow": "hidden",
                  },
                ]
              }
            >
              <TextInput
                accessible={true}
                allowFontScaling={true}
                aria-hidden={true}
                background="transparent"
                borderColor="muted.200"
                borderRadius="lg"
                borderWidth={0}
                color="black"
                editable={false}
                flex={1}
                focusable={false}
                fontSize="md"
                fontStyle="normal"
                fontWeight={400}
                importantForAccessibility="no"
                onBlur={[Function]}
                onFocus={[Function]}
                onKeyPress={[Function]}
                placeholder="Select your favorite programming language"
                placeholderTextColor="#a3a3a3"
                px={4}
                py={3}
                rejectResponderTermination={true}
                secureTextEntry={false}
                style={
                  Array [
                    Object {
                      "borderColor": "#e5e5e5",
                      "borderRadius": 6,
                      "borderWidth": 0,
                      "color": "#000000",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "400",
                      "paddingBottom": 12,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                      "paddingTop": 12,
                    },
                  ]
                }
                underlineColorAndroid="transparent"
                value="Top Left"
                variant="outline"
              />
              <RNSVGSvgView
                accessibilityRole="image"
                bbHeight={20}
                bbWidth={20}
                color={4280690214}
                focusable={false}
                mr={2}
                size={5}
                stroke=""
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Array [
                      Object {
                        "color": "#262626",
                        "height": 20,
                        "marginRight": 8,
                        "width": 20,
                      },
                    ],
                    Object {
                      "flex": 0,
                      "height": 20,
                      "width": 20,
                    },
                  ]
                }
                tintColor={4280690214}
              >
                <RNSVGGroup
                  propList={
                    Array [
                      "stroke",
                    ]
                  }
                  stroke={null}
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                      fill={
                        Array [
                          2,
                        ]
                      }
                      propList={
                        Array [
                          "fill",
                          "stroke",
                        ]
                      }
                      stroke={null}
                    />
                  </RNSVGGroup>
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Fade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Click Me to 
          </Text>
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            show
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions ScaleFade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Click Me to 
          </Text>
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            show
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Slide 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      display="flex"
      justifyContent="center"
      my={4}
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "marginBottom": 16,
            "marginTop": 16,
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        The Force is strong with this one. I have you now. Look, I ain't in this for your revolution, and I'm not in it for you, Princess. I expect to be well paid.
      </Text>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      m={4}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 16,
            "marginLeft": 16,
            "marginRight": 16,
            "marginTop": 16,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Click Me to show Top Silder
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Click Me to show Bottom Slider
          </Text>
        </View>
      </View>
    </View>
    <View
      alignItems="center"
      display="flex"
      justifyContent="center"
      my={4}
      style={
        Array [
          Object {
            "alignItems": "center",
            "display": "flex",
            "justifyContent": "center",
            "marginBottom": 16,
            "marginTop": 16,
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        The Force is strong with this one. I have you now. Look, I ain't in this for your revolution, and I'm not in it for you, Princess. I expect to be well paid.
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Slide wrapped inside parent 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      justifyContent="center"
      style={
        Array [
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "90%",
          },
        ]
      }
      width="90%"
    >
      <Text
        color="muted.700"
        fontSize="xs"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        This is an example to show how slider can be used.
      </Text>
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        my={2}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 8,
              "marginTop": 8,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Click Me to show
            </Text>
          </View>
        </View>
      </View>
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          The Force is strong with this one. I have you now. Look, I ain't in this for your revolution, and I'm not in it for you, Princess. I expect to be well paid. I'm in it for the money. What!? Hey, Luke! May the Force be with you. Remember, a Jedi can feel the Force flowing through him. All right. Well, take care of yourself, Han. I guess that's what you're best at, ain't it?
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions SlideComposition 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      justifyContent="center"
      style={
        Array [
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "90%",
          },
        ]
      }
      width="90%"
    >
      <Text
        color="muted.700"
        fontSize="xs"
        fontStyle="normal"
        fontWeight="bold"
        my={3}
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 12,
              "fontStyle": "normal",
              "fontWeight": "700",
              "marginBottom": 12,
              "marginTop": 12,
            },
          ]
        }
      >
        This is an example to show how slider can be used.
      </Text>
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessibilityRole="button"
        accessible={true}
        alignItems="center"
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        flexDirection="row"
        focusable={true}
        justifyContent="center"
        my={4}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        px={4}
        py={3}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#06b6d4",
              "borderRadius": 6,
              "flexDirection": "row",
              "justifyContent": "center",
              "marginBottom": 16,
              "marginTop": 16,
              "paddingBottom": 12,
              "paddingLeft": 16,
              "paddingRight": 16,
              "paddingTop": 12,
            },
          ]
        }
        variant="solid"
      >
        <View
          alignItems="center"
          flexDirection="row"
          style={
            Array [
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              color="lightText"
              fontSize="md"
              fontStyle="normal"
              fontWeight={600}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 16,
                    "fontStyle": "normal",
                    "fontWeight": "600",
                  },
                ]
              }
            >
              Click Me to show
            </Text>
          </View>
        </View>
      </View>
      <View
        alignItems="center"
        display="flex"
        justifyContent="center"
        my={4}
        style={
          Array [
            Object {
              "alignItems": "center",
              "display": "flex",
              "justifyContent": "center",
              "marginBottom": 16,
              "marginTop": 16,
            },
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          The Force is strong with this one. I have you now. Look, I ain't in this for your revolution, and I'm not in it for you, Princess. I expect to be well paid. I'm in it for the money. What!? Hey, Luke! May the Force be with you. Remember, a Jedi can feel the Force flowing through him. All right. Well, take care of yourself, Han. I guess that's what you're best at, ain't it? In my experience, there is no such thing as luck. Kid, I've flown from one side of this galaxy to the other. I've seen a lot of strange stuff, but I've never seen anything to make me believe there's one all-powerful Force controlling everything. There's no mystical energy field that controls my destiny. It's all a lot of simple tricks and nonsense.
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions SlideFade 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Click Me to 
          </Text>
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            show
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots Transitions Stagger 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        alignItems="center"
        minH={220}
        style={
          Array [
            Object {
              "alignItems": "center",
              "minHeight": 220,
            },
          ]
        }
      />
      <View
        _text={
          Object {
            "color": "lightText",
          }
        }
        accessible={true}
        bg="primary.500"
        borderRadius="lg"
        colorScheme="primary"
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onHoverIn={[Function]}
        onHoverOut={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        p={3}
        rounded="full"
        style={
          Array [
            Object {
              "backgroundColor": "#06b6d4",
              "borderRadius": 9999,
              "paddingBottom": 12,
              "paddingLeft": 12,
              "paddingRight": 12,
              "paddingTop": 12,
            },
          ]
        }
        variant="ghost"
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "gray.50",
                "fontSize": 24,
              },
              undefined,
              Object {
                "fontFamily": "material-community",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          󰁦
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots VStack Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      style={
        Array [
          Object {
            "alignItems": "center",
          },
        ]
      }
    >
      <Text
        color="muted.700"
        fontSize="3xl"
        fontStyle="normal"
        fontWeight="bold"
        style={
          Array [
            Object {
              "color": "#404040",
              "fontSize": 30,
              "fontStyle": "normal",
              "fontWeight": "700",
            },
          ]
        }
      >
        VStack
      </Text>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="primary.400"
        display="flex"
        justifyContent="center"
        rounded="md"
        size={16}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#22d3ee",
              "borderRadius": 4,
              "display": "flex",
              "height": 64,
              "justifyContent": "center",
              "width": 64,
            },
            Object {
              "elevation": 4,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
            },
          ]
        }
      >
        <Text
          color="white"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Box 1
        </Text>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="secondary.400"
        display="flex"
        justifyContent="center"
        rounded="md"
        size={16}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#f472b6",
              "borderRadius": 4,
              "display": "flex",
              "height": 64,
              "justifyContent": "center",
              "width": 64,
            },
            Object {
              "elevation": 4,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
            },
          ]
        }
      >
        <Text
          color="white"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Box 2
        </Text>
      </View>
      <View
        height={4}
        style={
          Array [
            Object {
              "height": 16,
            },
          ]
        }
      />
      <View
        alignItems="center"
        bg="emerald.400"
        display="flex"
        justifyContent="center"
        rounded="md"
        size={16}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#34d399",
              "borderRadius": 4,
              "display": "flex",
              "height": 64,
              "justifyContent": "center",
              "width": 64,
            },
            Object {
              "elevation": 4,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.23,
              "shadowRadius": 2.62,
            },
          ]
        }
      >
        <Text
          color="white"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Box 3
        </Text>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ZStack Basic ZStack 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      h="40"
      mx="auto"
      style={
        Array [
          Object {
            "height": 160,
            "marginLeft": "auto",
            "marginRight": "auto",
          },
        ]
      }
    >
      <View
        ml={-20}
        mt={3}
        style={
          Array [
            Object {
              "marginLeft": -80,
              "marginTop": 12,
            },
          ]
        }
      >
        <View
          bg="primary.400"
          position="absolute"
          rounded="lg"
          size={20}
          style={
            Array [
              Object {
                "backgroundColor": "#22d3ee",
                "borderRadius": 6,
                "height": 80,
                "position": "absolute",
                "width": 80,
              },
              Object {
                "elevation": 4,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 2,
                  "width": 0,
                },
                "shadowOpacity": 0.23,
                "shadowRadius": 2.62,
              },
            ]
          }
        />
        <View
          bg="secondary.400"
          ml={5}
          mt={5}
          position="absolute"
          rounded="lg"
          size={20}
          style={
            Array [
              Object {
                "backgroundColor": "#f472b6",
                "borderRadius": 6,
                "height": 80,
                "marginLeft": 20,
                "marginTop": 20,
                "position": "absolute",
                "width": 80,
              },
              Object {
                "elevation": 6,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 3,
                  "width": 0,
                },
                "shadowOpacity": 0.27,
                "shadowRadius": 4.65,
              },
            ]
          }
        />
        <View
          bg="emerald.400"
          ml={10}
          mt={10}
          position="absolute"
          rounded="lg"
          size={20}
          style={
            Array [
              Object {
                "backgroundColor": "#34d399",
                "borderRadius": 6,
                "height": 80,
                "marginLeft": 40,
                "marginTop": 40,
                "position": "absolute",
                "width": 80,
              },
              Object {
                "elevation": 8,
                "shadowColor": "#000000",
                "shadowOffset": Object {
                  "height": 4,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 4.65,
              },
            ]
          }
        />
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots ZStack ZStack items centered 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      alignItems="center"
      justifyContent="center"
      style={
        Array [
          Object {
            "alignItems": "center",
            "justifyContent": "center",
          },
        ]
      }
    >
      <View
        bg="primary.400"
        position="absolute"
        rounded="lg"
        size={64}
        style={
          Array [
            Object {
              "backgroundColor": "#22d3ee",
              "borderRadius": 6,
              "height": 256,
              "position": "absolute",
              "width": 256,
            },
          ]
        }
      />
      <View
        bg="secondary.400"
        position="absolute"
        rounded="lg"
        size={48}
        style={
          Array [
            Object {
              "backgroundColor": "#f472b6",
              "borderRadius": 6,
              "height": 192,
              "position": "absolute",
              "width": 192,
            },
            Object {
              "elevation": 9,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 0.32,
              "shadowRadius": 5.46,
            },
          ]
        }
      />
      <View
        bg="emerald.400"
        position="absolute"
        rounded="lg"
        size={32}
        style={
          Array [
            Object {
              "backgroundColor": "#34d399",
              "borderRadius": 6,
              "height": 128,
              "position": "absolute",
              "width": 128,
            },
            Object {
              "elevation": 9,
              "shadowColor": "#000000",
              "shadowOffset": Object {
                "height": 4,
                "width": 0,
              },
              "shadowOpacity": 0.32,
              "shadowRadius": 5.46,
            },
          ]
        }
      />
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useAccessibleColors Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.50"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ecfeff",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.100"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#cffafe",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.200"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#a5f3fc",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.300"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#67e8f9",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.400"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.600"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.700"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#0e7490",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.800"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#155e75",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.900"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#164e63",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="secondary.500"
      borderRadius="lg"
      colorScheme="secondary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mt={2}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ec4899",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 8,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Toggle Accessible Colors
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useBreakpointValue Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      bg="blue.200"
      style={
        Array [
          Object {
            "backgroundColor": "#bfdbfe",
            "width": 100,
          },
        ]
      }
      w="100px"
    >
      <Text
        color="darkText"
        fontSize="md"
        fontStyle="normal"
        fontWeight={400}
        style={
          Array [
            Object {
              "color": "#000000",
              "fontSize": 16,
              "fontStyle": "normal",
              "fontWeight": "400",
            },
          ]
        }
      >
        This is a box
      </Text>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useClipboard Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <View
        flexDirection="row"
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
          ]
        }
      >
        <TextInput
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          borderColor="muted.200"
          borderRadius="lg"
          borderWidth={1}
          color="black"
          editable={true}
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Copy From"
          placeholderTextColor="#a3a3a3"
          px={4}
          py={3}
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 6,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
                "width": "60%",
              },
            ]
          }
          underlineColorAndroid="transparent"
          value="Copy Me"
          variant="outline"
          w="60%"
        />
        <View
          style={
            Array [
              Object {
                "width": 12,
              },
            ]
          }
          width={3}
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Copy
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        height={2}
        style={
          Array [
            Object {
              "height": 8,
            },
          ]
        }
      />
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          color="muted.700"
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          style={
            Array [
              Object {
                "color": "#404040",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
              },
            ]
          }
        >
          Press here
        </Text>
        <View
          height={3}
          style={
            Array [
              Object {
                "height": 12,
              },
            ]
          }
        />
        <TextInput
          accessible={true}
          allowFontScaling={true}
          background="transparent"
          borderColor="muted.200"
          borderRadius="lg"
          borderWidth={1}
          color="black"
          editable={true}
          fontSize="md"
          fontStyle="normal"
          fontWeight={400}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Paste To"
          placeholderTextColor="#a3a3a3"
          px={4}
          py={3}
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "borderColor": "#e5e5e5",
                "borderRadius": 6,
                "borderWidth": 1,
                "color": "#000000",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
                "width": "60%",
              },
            ]
          }
          underlineColorAndroid="transparent"
          value=""
          variant="outline"
          w="60%"
        />
        <View
          height={3}
          style={
            Array [
              Object {
                "height": 12,
              },
            ]
          }
        />
        <View
          _text={
            Object {
              "color": "lightText",
            }
          }
          accessibilityRole="button"
          accessible={true}
          alignItems="center"
          bg="primary.500"
          borderRadius="lg"
          colorScheme="primary"
          flexDirection="row"
          focusable={true}
          justifyContent="center"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onHoverIn={[Function]}
          onHoverOut={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          px={4}
          py={3}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#06b6d4",
                "borderRadius": 6,
                "flexDirection": "row",
                "justifyContent": "center",
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
            ]
          }
          variant="solid"
        >
          <View
            alignItems="center"
            flexDirection="row"
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {},
                ]
              }
            >
              <Text
                color="lightText"
                fontSize="md"
                fontStyle="normal"
                fontWeight={600}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 16,
                      "fontStyle": "normal",
                      "fontWeight": "600",
                    },
                  ]
                }
              >
                Paste
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useColorMode Basic 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useColorModeValue Basic 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useContrastText Basic 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="gray.900"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#18181b",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="gray.50"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#fafafa",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useContrastText Variations 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.50"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ecfeff",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.100"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#cffafe",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.200"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#a5f3fc",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="darkText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.300"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#67e8f9",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "darkText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.400"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#22d3ee",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.600"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#0891b2",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.700"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#0e7490",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.800"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#155e75",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.900"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mb={1}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#164e63",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginBottom": 4,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            NativeBase
          </Text>
        </View>
      </View>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="secondary.500"
      borderRadius="lg"
      colorScheme="secondary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      mt={2}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#ec4899",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "marginTop": 8,
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Toggle Accessible Colors
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useDisclose Usage 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessibilityRole="button"
      accessible={true}
      alignItems="center"
      bg="primary.500"
      borderRadius="lg"
      colorScheme="primary"
      flexDirection="row"
      focusable={true}
      justifyContent="center"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      px={4}
      py={3}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#06b6d4",
            "borderRadius": 6,
            "flexDirection": "row",
            "justifyContent": "center",
            "paddingBottom": 12,
            "paddingLeft": 16,
            "paddingRight": 16,
            "paddingTop": 12,
          },
        ]
      }
      variant="solid"
    >
      <View
        alignItems="center"
        flexDirection="row"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            color="lightText"
            fontSize="md"
            fontStyle="normal"
            fontWeight={600}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 16,
                  "fontStyle": "normal",
                  "fontWeight": "600",
                },
              ]
            }
          >
            Open Modal
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery MaxHeight 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      color="muted.700"
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      style={
        Array [
          Object {
            "color": "#404040",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
          },
        ]
      }
    >
      Height larger than 512
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery MinWidth 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      color="muted.700"
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      style={
        Array [
          Object {
            "color": "#404040",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
          },
        ]
      }
    >
      Width larger than 512
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useMediaQuery Orientation 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    alignItems="center"
    bg="gray.50"
    flex={1}
    justifyContent="center"
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fafafa",
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <View
      _text={
        Object {
          "color": "lightText",
        }
      }
      accessible={true}
      bg="transparent"
      borderRadius="lg"
      colorScheme="primary"
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onHoverIn={[Function]}
      onHoverOut={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      p={2}
      position="absolute"
      right={8}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "borderRadius": 6,
            "paddingBottom": 8,
            "paddingLeft": 8,
            "paddingRight": 8,
            "paddingTop": 8,
            "position": "absolute",
            "right": 32,
            "top": 48,
          },
        ]
      }
      top={12}
      variant="ghost"
    >
      <RNSVGSvgView
        accessibilityRole="image"
        align="xMidYMid"
        bbHeight={32}
        bbWidth={32}
        color={4280690214}
        focusable={false}
        meetOrSlice={0}
        minX={0}
        minY={0}
        size={8}
        stroke=""
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            Array [
              Object {
                "color": "#262626",
                "height": 32,
                "width": 32,
              },
            ],
            Object {
              "flex": 0,
              "height": 32,
              "width": 32,
            },
          ]
        }
        tintColor={4280690214}
        vbHeight={24}
        vbWidth={24}
      >
        <RNSVGGroup
          propList={
            Array [
              "stroke",
            ]
          }
          stroke={null}
        >
          <RNSVGGroup>
            <RNSVGPath
              d="M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z"
              fill={
                Array [
                  2,
                ]
              }
              propList={
                Array [
                  "fill",
                  "stroke",
                ]
              }
              stroke={null}
            />
          </RNSVGGroup>
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
    <Text
      color="muted.700"
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      style={
        Array [
          Object {
            "color": "#404040",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
          },
        ]
      }
    >
      Landscape Mode: false
    </Text>
    <Text
      color="muted.700"
      fontSize="md"
      fontStyle="normal"
      fontWeight={400}
      style={
        Array [
          Object {
            "color": "#404040",
            "fontSize": 16,
            "fontStyle": "normal",
            "fontWeight": "400",
          },
        ]
      }
    >
      Portrait Mode: true
    </Text>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Storyshots useSafeArea Fixed 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useSafeArea Flexible 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;

exports[`Storyshots useSafeArea Hook 1`] = `
<View>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  />
</View>
`;
