{"version":3,"sources":["../../../basic/Icon/index.js"],"names":["Icon","n","props","name","indexOf","m","OS","active","ios","default","android","_root","c","getIconName","getName","propTypes","style","PropTypes","object","string","bool","StyledIcon"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { Platform } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\n\nimport { IconNB } from '../IconNB';\nimport ic from './NBIcons.json';\n\nimport mapPropsToStyleNames from '../../Utils/mapPropsToStyleNames';\n\nclass Icon extends Component {\n\n  getName() {\n    let n = this.props.name.indexOf('ios-');\n    let m = this.props.name.indexOf('md-');\n    if(n != -1 || m != -1){\n      return this.props.name;\n    }\n    else {\n      if (Platform.OS === 'ios') {\n        return (this.props.active) ? ic[this.props.name].ios.active : ic[this.props.name].ios.default;\n      } else {\n        return (this.props.active) ?\n        ic[this.props.name].android.active : ic[this.props.name].android.default;\n      }\n    }\n  }\n\n  getIconName() {\n    if (Platform.OS === 'ios') {\n      if (this.props.ios) {\n        return this.props.ios;\n      } else {\n        return (this.props.active) ?\n        ic[this.props.name].ios.active : ic[this.props.name].ios.default;\n      }\n    } else if(this.props.android) {\n      return this.props.android;\n    } else {\n      return (this.props.active) ?\n      ic[this.props.name].android.active : ic[this.props.name].android.default;\n    }\n  }\n\n  render() {\n    if (this.props.ios && this.props.android) {\n      return (\n        <IconNB ref={c => this._root = c} {...this.props} name={(Platform.OS === 'ios') ? this.props.ios : this.props.android} />\n      );\n    } else if (this.props.name && (this.props.android || this.props.ios)) {\n      return (\n        <IconNB ref={c => this._root = c} {...this.props} name={this.getIconName()} />\n      );\n    } else {\n      return (\n        <IconNB ref={c => this._root = c} {...this.props} name={this.getName()} />\n      );\n    }\n  }\n}\n\nIcon.propTypes = {\n  ...IconNB.propTypes,\n  style: React.PropTypes.object,\n  name: React.PropTypes.string,\n  ios: React.PropTypes.string,\n  android: React.PropTypes.string,\n  active: React.PropTypes.bool,\n};\n\nconst StyledIcon = connectStyle('NativeBase.Icon', {}, mapPropsToStyleNames)(Icon);\n\nexport {\n  StyledIcon as Icon,\n};\n"]}