{"version":3,"sources":["../../../src/basic/DeckSwiper.js"],"names":["SWIPE_THRESHOLD","DeckSwiper","props","state","pan","ValueXY","pan2","enter","Value","selectedItem","dataSource","selectedItem2","card1Top","card2Top","fadeAnim","looping","disabled","length","lastCard","topCard","position","top","right","left","currentIndex","newIdx","newIdx2","indexOf","setState","setTimeout","nextIndexes","findNextIndexes","onSwiping","timing","toValue","start","spring","friction","selectNext","decay","velocity","x","y","deceleration","_resetState","bind","_panResponder","create","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","evt","gestureState","Math","abs","dx","onPanResponderGrant","e","setOffset","_value","setValue","onPanResponderMove","val","opa","event","onPanResponderRelease","vx","vy","onSwipeRight","undefined","onSwipeLeft","translateX","translateY","rotate","interpolate","inputRange","outputRange","opacity","scale","animatedCardStyles","transform","animatedCardStyles2","_root","c","flexDirection","renderEmpty","getCardStyles","getInitialStyle","panHandlers","renderItem","renderBottom","renderTop","propTypes","style","PropTypes","object","array","StyledDeckSwiper"],"mappings":"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","file":"DeckSwiper.js","sourcesContent":["import React, { Component } from 'react';\nimport { View, Animated, PanResponder, ViewPropTypes } from 'react-native';\nimport clamp from 'clamp';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\nconst SWIPE_THRESHOLD = 120;\n\nclass DeckSwiper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pan: new Animated.ValueXY(),\n            pan2: new Animated.ValueXY(),\n            enter: new Animated.Value(0.8),\n            selectedItem: this.props.dataSource[0],\n            selectedItem2: this.props.dataSource[1],\n            card1Top: true,\n            card2Top: false,\n            fadeAnim: new Animated.Value(0.8),\n            looping: this.props.looping || true,\n            disabled: this.props.dataSource.length === 0,\n            lastCard: this.props.dataSource.length === 1\n        }\n    }\n\n    getInitialStyle() {\n        return {\n            topCard: {\n                position: 'absolute',\n                top: 0,\n                right: 0,\n                left: 0\n            }\n        }\n    }\n\n    findNextIndexes(currentIndex) {\n        let newIdx = currentIndex + 1;\n        let newIdx2 = currentIndex + 2;\n\n        if (newIdx2 > this.props.dataSource.length - 1 && newIdx === this.props.dataSource.length - 1) {\n            return [newIdx, 0];\n        } else if (newIdx > this.props.dataSource.length - 1) {\n            return [0, 1];\n        } else {\n            return [newIdx, newIdx2];\n        }\n    }\n\n    selectNext() {\n        const dataSource = this.props.dataSource;\n        let currentIndex = dataSource.indexOf(this.state.selectedItem);\n\n        // if not looping, check for these conditionals and if true return from selectNext()\n        if (!this.state.looping) {\n            // reached end -> only display static renderEmpty() -> no swiping\n            if (currentIndex === dataSource.length - 1) {\n                return this.setState({\n                    disabled: true\n                });\n            } else if (currentIndex === dataSource.length - 2) {\n                // show last card with renderEmpty() component behind it\n                return setTimeout(() => {\n                    this.setState({\n                        selectedItem: dataSource[currentIndex + 1]\n                    });\n                    setTimeout(() => {\n                        this.setState({\n                            lastCard: true\n                        });\n                    }, 350);\n                }, 50);\n            }\n        }\n\n        let nextIndexes = this.findNextIndexes(currentIndex);\n        setTimeout(() => {\n            this.setState({\n                selectedItem: this.props.dataSource[nextIndexes[0]]\n            });\n            setTimeout(() => {\n                this.setState({\n                    selectedItem2: this.props.dataSource[nextIndexes[1]]\n                });\n            }, 350);\n        }, 50);\n\n    }\n\n\n    swipeRight() {\n        if (this.props.onSwiping)\n            this.props.onSwiping('right');\n        setTimeout(() => {\n            Animated.timing(\n                this.state.fadeAnim,\n                { toValue: 1 }\n            ).start();\n            Animated.spring(\n                this.state.enter,\n                { toValue: 1, friction: 7 }\n            ).start();\n            this.selectNext();\n            Animated.decay(this.state.pan, {\n                velocity: { x: 8, y: 1 },\n                deceleration: 0.98\n            }).start(this._resetState.bind(this))\n        }, 300);\n    }\n\n    swipeLeft() {\n        if (this.props.onSwiping)\n            this.props.onSwiping('left');\n        setTimeout(() => {\n            Animated.timing(\n                this.state.fadeAnim,\n                { toValue: 1 }\n            ).start();\n            Animated.spring(\n                this.state.enter,\n                { toValue: 1, friction: 7 }\n            ).start();\n            this.selectNext();\n            Animated.decay(this.state.pan, {\n                velocity: { x: -8, y: 1 },\n                deceleration: 0.98\n            }).start(this._resetState.bind(this))\n        }, 300);\n    }\n\n    componentWillMount() {\n        this._panResponder = PanResponder.create({\n            onMoveShouldSetResponderCapture: () => true,\n            onMoveShouldSetPanResponderCapture: (evt, gestureState) => {\n                return Math.abs(gestureState.dx) > 5;\n            },\n\n            onPanResponderGrant: (e, gestureState) => {\n                this.state.pan.setOffset({ x: this.state.pan.x._value, y: this.state.pan.y._value });\n                this.state.pan.setValue({ x: 0, y: 0 });\n            },\n\n\n            onPanResponderMove: (e, gestureState) => {\n                if (gestureState.dx > 20) {\n                    if (this.props.onSwiping)\n                        this.props.onSwiping('right', gestureState.dx);\n                }\n                else if (gestureState.dx < -20) {\n                    if (this.props.onSwiping)\n                        this.props.onSwiping('left', gestureState.dx);\n                }\n                let val = Math.abs((gestureState.dx * .0013));\n                let opa = Math.abs((gestureState.dx * .0022));\n                if (val > 0.2) {\n                    val = 0.2;\n                }\n                Animated.timing(\n                    this.state.fadeAnim,\n                    { toValue: 0.8 + val }\n                ).start();\n                Animated.spring(\n                    this.state.enter,\n                    { toValue: 0.8 + val, friction: 7 }\n                ).start();\n                Animated.event([\n                    null, { dx: this.state.pan.x },\n                ])(e, gestureState)\n            },\n\n            onPanResponderRelease: (e, { vx, vy }) => {\n                if (this.props.onSwiping)\n                    this.props.onSwiping(null);\n                var velocity;\n\n                if (vx >= 0) {\n                    velocity = clamp(vx, 4.5, 10);\n                } else if (vx < 0) {\n                    velocity = clamp(vx * -1, 4.5, 10) * -1;\n                }\n\n                if (Math.abs(this.state.pan.x._value) > SWIPE_THRESHOLD) {\n\n                    if (velocity > 0) {\n                        (this.props.onSwipeRight) ? this.props.onSwipeRight(this.state.selectedItem) : undefined;\n                        this.selectNext();\n                    } else {\n                        (this.props.onSwipeLeft) ? this.props.onSwipeLeft(this.state.selectedItem) : undefined;\n                        this.selectNext();\n                    }\n\n                    Animated.decay(this.state.pan, {\n                        velocity: { x: velocity, y: vy },\n                        deceleration: 0.98\n                    }).start(this._resetState.bind(this))\n                } else {\n                    Animated.spring(this.state.pan, {\n                        toValue: { x: 0, y: 0 },\n                        friction: 4\n                    }).start()\n                }\n            }\n        })\n    }\n\n    _resetState() {\n        this.state.pan.setValue({ x: 0, y: 0 });\n        this.state.enter.setValue(0.8);\n        this.state.fadeAnim.setValue(0.8);\n        this.setState({\n            card1Top: !this.state.card1Top,\n            card2Top: !this.state.card2Top\n        });\n        if (this.props.onSwiping)\n            this.props.onSwiping(null);\n\n    }\n\n    getCardStyles() {\n\n        let { pan, pan2, enter } = this.state;\n\n        let [translateX, translateY] = [pan.x, pan.y];\n        // let [translateX, translateY] = [pan2.x, pan2.y];\n\n        let rotate = pan.x.interpolate({ inputRange: [-700, 0, 700], outputRange: ['-10deg', '0deg', '10deg'] });\n\n        let opacity = pan.x.interpolate({ inputRange: [-320, 0, 320], outputRange: [0.9, 1, 0.9] })\n        let scale = enter;\n\n        let animatedCardStyles = { transform: [{ translateX }, { translateY }, { rotate }], opacity };\n        let animatedCardStyles2 = { transform: [{ scale }] };\n\n        return [animatedCardStyles, animatedCardStyles2]\n    }\n\n    render() {\n\n        if (this.state.disabled) {\n            // disable swiping and renderEmpty\n            return (\n                <View ref={c => this._root = c} style={{ position: 'relative', flexDirection: 'column' }}>\n                    {\n                        <View>\n                            {\n                                this.props.renderEmpty && this.props.renderEmpty()\n                            }\n                        </View>\n                    }\n                </View>\n            );\n        } else if (this.state.lastCard) {\n            // display renderEmpty underneath last viable card\n            return (\n                <View ref={c => this._root = c} style={{ position: 'relative', flexDirection: 'column' }}>{(this.state.selectedItem) === undefined ? (<View />) :\n                    (\n                        <View>\n                            <Animated.View style={[this.getCardStyles()[1], this.getInitialStyle().topCard, { opacity: this.state.fadeAnim }]} {...this._panResponder.panHandlers}>\n                                {\n                                    this.props.renderEmpty && this.props.renderEmpty()\n                                }\n                            </Animated.View>\n                            <Animated.View style={[this.getCardStyles()[0], this.getInitialStyle().topCard]} {...this._panResponder.panHandlers} >\n                                {\n                                    this.props.renderItem(this.state.selectedItem)\n                                }\n                            </Animated.View>\n                        </View>\n                    )\n                }\n                </View>\n            );\n        } else {\n            return (\n                <View ref={c => this._root = c} style={{ position: 'relative', flexDirection: 'column' }}>{(this.state.selectedItem) === undefined ? (<View />) :\n                    (<View>\n                        <Animated.View style={[this.getCardStyles()[1], this.getInitialStyle().topCard, { opacity: this.state.fadeAnim }]} {...this._panResponder.panHandlers}>\n                            {(this.props.renderBottom) ?\n                                this.props.renderBottom(this.state.selectedItem2)\n                                :\n                                this.props.renderItem(this.state.selectedItem2)\n                            }\n                        </Animated.View>\n                        <Animated.View style={[this.getCardStyles()[0], this.getInitialStyle().topCard]} {...this._panResponder.panHandlers} >\n                            {(this.props.renderTop) ?\n                                this.props.renderTop(this.state.selectedItem)\n                                :\n                                this.props.renderItem(this.state.selectedItem)\n                            }\n                        </Animated.View>\n                    </View>\n                    )\n                }\n                </View>\n            );\n        }\n\n    }\n\n}\n\nDeckSwiper.propTypes = {\n    ...ViewPropTypes,\n    style: React.PropTypes.object,\n    dataSource: React.PropTypes.array,\n};\n\nconst StyledDeckSwiper = connectStyle('NativeBase.DeckSwiper', {}, mapPropsToStyleNames)(DeckSwiper);\n\nexport {\n    StyledDeckSwiper as DeckSwiper,\n};\n"]}