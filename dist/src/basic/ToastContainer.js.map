{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","props","state","modalVisible","fadeAnim","Value","position","opacity","width","top","undefined","bottom","config","setState","text","buttonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","duration","setTimeout","timing","toValue","start","getToastStyle","closeToast","toastInstance","_root","showToast","propTypes","PropTypes","object","StyledToastContainer"],"mappings":"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","file":"ToastContainer.js","sourcesContent":["/* @flow */\n\nimport React, { Component } from \"react\";\nimport { View, Modal, Platform, ViewPropTypes, Animated } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Button } from \"./Button\";\nimport { ViewNB } from \"./View\";\nimport { Toast } from \"./Toast\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      fadeAnim: new Animated.Value(0)\n    };\n  }\n  static toastInstance;\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  getToastStyle() {\n    return {\n      position: \"absolute\",\n      opacity: this.state.fadeAnim,\n      width: \"90%\",\n      top: this.state.position === \"top\" ? 30 : undefined,\n      bottom: this.state.position === \"bottom\" ? 30 : undefined\n    };\n  }\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: config.buttonText,\n      type: config.type,\n      position: config.position ? config.position : \"bottom\",\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle\n    });\n    if (config.duration > 0) {\n      setTimeout(() => {\n        Animated.timing(this.state.fadeAnim, {\n          toValue: 0,\n          duration: 200\n        }).start();\n        setTimeout(() => {\n          this.setState({\n            modalVisible: false\n          });\n        }, 500);\n      }, config.duration);\n    }\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 1,\n      duration: 200\n    }).start();\n  }\n  closeToast() {\n    Animated.timing(this.state.fadeAnim, {\n      toValue: 0,\n      duration: 200\n    }).start();\n    setTimeout(() => {\n      this.setState({\n        modalVisible: false\n      });\n    }, 500);\n  }\n  render() {\n    if (this.state.modalVisible) {\n      return (\n        <Animated.View style={this.getToastStyle()}>\n          <Toast\n            style={this.state.style}\n            danger={this.state.type == \"danger\" ? true : false}\n            success={this.state.type == \"success\" ? true : false}\n            warning={this.state.type == \"warning\" ? true : false}\n          >\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {this.state.buttonText &&\n              <Button\n                style={this.state.buttonStyle}\n                onPress={() => this.closeToast()}\n              >\n                <Text style={this.state.buttonTextStyle}>\n                  {this.state.buttonText}\n                </Text>\n              </Button>}\n\n          </Toast>\n        </Animated.View>\n      );\n    } else return null;\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes,\n  style: React.PropTypes.object\n};\n\nconst StyledToastContainer = connectStyle(\n  \"NativeBase.ToastContainer\",\n  {},\n  mapPropsToStyleNames\n)(ToastContainer);\n\nexport { StyledToastContainer as ToastContainer };\n"]}