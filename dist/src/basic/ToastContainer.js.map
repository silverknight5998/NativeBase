{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","props","state","modalVisible","duration","nextProps","console","log","setState","showToast","autoHide","warn","position","alert","margin","OS","flex","justifyContent","danger","success","warning","children","buttonText","buttonPress","undefined","propTypes","style","PropTypes","object"],"mappings":";;;AAGA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mE;;;AAGMA,c;AACJ,wBAAYC,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,aAAc,KADH;AAEXC,SAAU,IAFC,CAAb,CAFiB;;AAMlB,C;AACyBC,S,CAAW;AACnCC,QAAQC,GAAR,CAAY,YAAZ,CAA0B,KAAKN,KAA/B;AACA,KAAKO,QAAL,CAAc;AACZL,aAAcE,UAAUI,SADZ,CAAd;;;;;;;;;;;;;;;;AAiBD,C;AACmB;AAClB,GAAI,CAAC,KAAKR,KAAL,CAAWS,QAAZ,EAAwB,KAAKT,KAAL,CAAWG,QAAvC,CAAiD;AAC/CE,QAAQK,IAAR;AACD;AACF,C;AACQ;AACP;AACE;AACE,cAAgB,KAAKV,KAAL,CAAWW,QAAX,EAAqB,QAAtB,CAAkC,OAAlC,CAA4C,MAD7D;AAEE,YAAa,IAFf;AAGE,QAAS,KAAKV,KAAL,CAAWC,YAHtB;AAIE,eAAgB,yBAAM,CAACU,MAAM,wBAAN,EAAgC,CAJzD;;AAME,iDAAM,MAAO;AACTC,OAAS,sBAASC,EAAT,GAAc,KAAf,CAAwB,EAAxB,CAA6B,CAD5B;AAETC,KAAM,CAFG;AAGTC,eAAiB,KAAKhB,KAAL,CAAWW,QAAX,GAAsB,KAAvB,CAAgC,YAAhC,CAAgD,KAAKX,KAAL,CAAWW,QAAX,GAAsB,QAAvB,CAAmC,UAAnC,CAAiD,KAAKX,KAAL,CAAWW,QAAX,GAAsB,QAAvB,CAAmC,QAAnC,CAA8C,YAHpJ,CAAb;AAIE;AACE,OAAS,KAAKX,KAAL,CAAWiB,MAAZ,CAAsB,IAAtB,CAA6B,KADvC;AAEE,QAAU,KAAKjB,KAAL,CAAWkB,OAAZ,CAAuB,IAAvB,CAA8B,KAFzC;AAGE,QAAU,KAAKlB,KAAL,CAAWmB,OAAZ,CAAuB,IAAvB,CAA8B,KAHzC;AAIG,KAAKnB,KAAL,CAAWoB,QAJd;AAKI,KAAKpB,KAAL,CAAWqB,UAAZ,EAA2B,8CAAQ,QAAS,kBAAM;AAC9C,OAAKrB,KAAL,CAAWsB,WAAZ,CAA2B,OAAKtB,KAAL,CAAWsB,WAAX,EAA3B,CAAsDC,SAAtD;AACD,CAFyB;AAG1B,8CAAO,KAAKvB,KAAL,CAAWqB,UAAlB,CAH0B,CAL9B,CAJF,CANF,CADF;;;;;;;AA0BD,C;;;AAGHtB,eAAeyB,SAAf;AACK,kBAAKA,SADV;AAEEC,MAAO,gBAAMC,SAAN,CAAgBC,MAFzB,G;;;;AAME5B,c,CAAAA,c","file":"ToastContainer.js","sourcesContent":["/* @flow */\n\n\nimport React, { Component } from 'react';\nimport { View, Modal, Platform } from 'react-native';\nimport { connectStyle } from '@shoutem/theme';\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { ViewNB } from './View';\nimport { Toast } from './Toast';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      duration: 2500\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    console.log('this.props', this.props);\n    this.setState({\n      modalVisible: nextProps.showToast\n    });\n    // if (nextProps.autoHide) {\n    //   setTimeout(()=> {\n    //     this.setState({\n    //       modalVisible: false\n    //     });\n    //   }, this.state.duration);\n    // }\n    // else if (nextProps.autoHide && nextProps.duration) {\n    //   setTimeout(()=> {\n    //     this.setState({\n    //       modalVisible: false\n    //     });\n    //   }, nextProps.duration);\n    // }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n  render() {\n    return (\n      <Modal\n        animationType={(this.props.position=='bottom') ? \"slide\" : \"fade\"}\n        transparent={true}\n        visible={this.state.modalVisible}\n        onRequestClose={() => {alert(\"Modal has been closed.\")}}\n        >\n        <View style={{\n            margin: (Platform.OS==='ios') ? 20 : 0,\n            flex: 1,\n            justifyContent: (this.props.position==='top') ? 'flex-start' : (this.props.position==='bottom') ? 'flex-end' : (this.props.position==='center') ? 'center' : 'flex-start'}}>\n          <Toast\n            danger={(this.props.danger) ? true : false}\n            success={(this.props.success) ? true : false}\n            warning={(this.props.warning) ? true : false}>\n            {this.props.children}\n            {(this.props.buttonText) && <Button onPress={() => {\n                (this.props.buttonPress) ? this.props.buttonPress() : undefined\n              }}>\n              <Text>{this.props.buttonText}</Text>\n            </Button>}\n\n          </Toast>\n        </View>\n      </Modal>\n    );\n  }\n}\n\nToastContainer.propTypes = {\n  ...View.propTypes,\n  style: React.PropTypes.object,\n};\n\nexport {\n  ToastContainer,\n};\n"]}