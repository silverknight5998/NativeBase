{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","props","state","modalVisible","config","setState","text","buttonText","type","position","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","duration","setTimeout","autoHide","console","warn","margin","OS","flex","justifyContent","toastInstance","_root","showToast","propTypes","PropTypes","object","StyledToastContainer"],"mappings":"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","file":"ToastContainer.js","sourcesContent":["/* @flow */\n\n\nimport React, { Component } from 'react';\nimport { View, Modal, Platform, ViewPropTypes } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { ViewNB } from './View';\nimport { Toast } from './Toast';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\n\nclass ToastContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false\n    }\n  }\n  static toastInstance;\n  static show({ ...config }) {\n    this.toastInstance._root.showToast({ config });\n  }\n  showToast({ config }) {\n    this.setState({\n      modalVisible: true,\n      text: config.text,\n      buttonText: config.buttonText,\n      type: config.type,\n      position: config.position,\n      supportedOrientations: config.supportedOrientations,\n      style: config.style,\n      buttonTextStyle: config.buttonTextStyle,\n      buttonStyle: config.buttonStyle,\n      textStyle: config.textStyle,\n    });\n    if (config.duration > 0) {\n      setTimeout(() => {\n        this.setState({\n          modalVisible: false,\n        });\n      }, config.duration);\n    }\n  }\n  componentDidMount() {\n    if (!this.props.autoHide && this.props.duration) {\n      console.warn(`It's not recommended to set autoHide false with duration`);\n    }\n  }\n  render() {\n    return (\n      <Modal\n        supportedOrientations={this.state.supportedOrientations || null}\n        animationType={(this.state.position == 'bottom') ? \"slide\" : \"fade\"}\n        transparent={true}\n        visible={this.state.modalVisible}\n        onRequestClose={() => {\n          this.setState({\n            modalVisible: false\n          });\n        }}\n      >\n        <View style={{\n          margin: (Platform.OS === 'ios') ? 20 : 0,\n          flex: 1,\n          justifyContent: (this.state.position === 'top') ? 'flex-start' : (this.state.position === 'bottom') ? 'flex-end' : (this.state.position === 'center') ? 'center' : 'flex-start'\n        }}>\n          <Toast\n            style={this.state.style}\n            danger={(this.state.type == 'danger') ? true : false}\n            success={(this.state.type == 'success') ? true : false}\n            warning={(this.state.type == 'warning') ? true : false}>\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\n            {(this.state.buttonText) && <Button\n              style={this.state.buttonStyle} onPress={() => {\n                this.setState({\n                  modalVisible: false,\n                });\n              }}>\n              <Text style={this.state.buttonTextStyle}>{this.state.buttonText}</Text>\n            </Button>}\n\n          </Toast>\n        </View>\n      </Modal>\n    );\n  }\n}\n\nToastContainer.propTypes = {\n  ...ViewPropTypes,\n  style: React.PropTypes.object,\n};\n\nconst StyledToastContainer = connectStyle('NativeBase.ToastContainer', {}, mapPropsToStyleNames)(ToastContainer);\n\nexport {\n  StyledToastContainer as ToastContainer,\n};\n"]}