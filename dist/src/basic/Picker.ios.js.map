{"version":3,"sources":["../../../src/basic/Picker.ios.js"],"names":["PickerNB","props","state","modalVisible","currentLabel","getLabel","dataSource","children","nextProps","nextLabel","currentDS","nextDS","setState","picker","pickerItem","visible","defaultProps","style","getInitialStyle","itemStyle","item","find","child","value","selectedValue","get","cloneElement","iosIcon","fontSize","lineHeight","color","onPress","_setModalVisible","text","placeholder","renderButton","textStyle","note","undefined","renderIcon","renderHeader","headerStyle","shadowOffset","shadowColor","shadowRadius","shadowOpacity","headerBackButtonStyle","headerBackButtonText","headerTitleStyle","iosHeader","_root","c","supportedOrientations","onValueChange","current","label","itemTextStyle","Item","createClass","render","propTypes","StyledPickerNB"],"mappings":"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","file":"Picker.ios.js","sourcesContent":["/* @flow */\n\nimport React, { Component } from 'react';\nimport { Picker, Modal, View, ListView, ViewPropTypes } from 'react-native';\nimport _ from 'lodash';\nimport { Text } from './Text';\nimport { List } from './List';\nimport { IconNB as Icon } from './IconNB';\nimport { Radio } from './Radio';\nimport { Container } from './Container';\nimport { Content } from './Content';\nimport { ListItem } from './ListItem';\nimport { Button } from './Button';\nimport { Header } from './Header';\nimport { Title } from './Title';\nimport { Left } from './Left';\nimport { Right } from './Right';\nimport { Body } from './Body';\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport computeProps from '../Utils/computeProps';\n\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\n\nclass PickerNB extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalVisible: false,\n      currentLabel: this.getLabel(props),\n      dataSource: props.children\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentLabel = this.state.currentLabel;\n    const nextLabel = this.getLabel(nextProps);\n    const currentDS = this.state.dataSource;\n    const nextDS = nextProps.children\n\n    if (currentLabel !== nextLabel) {\n      this.setState({\n        currentLabel: nextLabel,\n      });\n    }\n    if (currentDS !== nextDS) {\n      this.setState({\n        dataSource: nextDS,\n      });\n    }\n  }\n\n  getInitialStyle() {\n    return {\n      picker: {\n        // alignItems: 'flex-end'\n      },\n      pickerItem: {\n\n      },\n    };\n  }\n  _setModalVisible(visible) {\n    this.setState({ modalVisible: visible });\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().picker,\n      itemStyle: this.getInitialStyle().pickerItem,\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  getLabel(props) {\n    const item = _.find(props.children, child => child.props.value === props.selectedValue);\n    return _.get(item, 'props.label');\n  }\n\n  renderIcon() {\n    return React.cloneElement(this.props.iosIcon, { style: { fontSize: 22, lineHeight: 26, color: '#7a7a7a' } });\n  }\n\n  renderButton() {\n    const onPress = () => { this._setModalVisible(true); };\n    const text = this.state.currentLabel ? this.state.currentLabel : this.props.placeholder;\n    if (this.props.renderButton) {\n      return this.props.renderButton(onPress, text, this);\n    }\n    return <Button\n      style={this.props.style}\n      dark\n      picker\n      transparent\n      onPress={onPress}\n    >\n      {(this.state.currentLabel) ?\n        <Text style={this.props.textStyle} note={(this.props.note)}>{this.state.currentLabel}</Text>\n        :\n        <Text style={this.props.textStyle} note>{this.props.placeholder}</Text>\n      }\n      {(this.props.iosIcon === undefined) ? null : this.renderIcon()}\n    </Button>;\n  }\n\n  renderHeader() {\n    return (this.props.renderHeader) ? this.props.renderHeader(() => this._setModalVisible(false)) : (<Header style={this.props.headerStyle} >\n      <Left><Button\n        style={{ shadowOffset: null, shadowColor: null, shadowRadius: null, shadowOpacity: null, ...this.props.headerBackButtonStyle }}\n        transparent onPress={() => { this._setModalVisible(false); }}\n      ><Text>{this.props.headerBackButtonText || 'Back'}</Text></Button></Left>\n      <Body><Title style={this.props.headerTitleStyle}>{this.props.iosHeader || 'Select One'}</Title></Body>\n      <Right />\n    </Header>);\n  }\n\n  render() {\n    return (\n      <View ref={c => this._root = c}>\n        {this.renderButton()}\n        <Modal\n          supportedOrientations={this.props.supportedOrientations || null}\n          animationType=\"slide\"\n          transparent={false}\n          visible={this.state.modalVisible}\n          onRequestClose={() => { this._setModalVisible(false); }}\n        >\n          <Container>\n            {this.renderHeader()}\n            <Content>\n              <List\n                dataArray={this.state.dataSource}\n                renderRow={child =>\n                  <ListItem\n                    selected={(child.props.value === this.props.selectedValue) ? true : false}\n                    button\n                    style={this.props.itemStyle}\n                    onPress={() => {\n                      this._setModalVisible(false); this.props.onValueChange(child.props.value);\n                      this.setState({ current: child.props.label });\n                    }}\n                  >\n                    <Text style={this.props.itemTextStyle} >{child.props.label}</Text>\n                    <Right>\n                      {(child.props.value === this.props.selectedValue) ?\n                        (<Radio selected={true} />)\n                        :\n                        (<Radio selected={false} />)\n                      }\n                    </Right>\n                  </ListItem>\n                }\n              />\n            </Content>\n          </Container>\n        </Modal>\n      </View>\n    );\n  }\n\n}\n\nPickerNB.Item = React.createClass({\n\n  render() {\n    return (\n      <Picker.Item {...this.props() } />\n    );\n  },\n});\n\nPickerNB.propTypes = {\n  ...ViewPropTypes,\n};\n\nconst StyledPickerNB = connectStyle('NativeBase.PickerNB', {}, mapPropsToStyleNames)(PickerNB);\n\nexport {\n  StyledPickerNB as PickerNB,\n};\n"]}