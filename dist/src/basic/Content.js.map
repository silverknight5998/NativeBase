{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","props","state","orientation","val","maxComp","Math","max","deviceWidth","deviceHeight","width","setState","mode","inSet","inset","undefined","Inset","InsetValues","portrait","landscape","leftPadder","style","padding","paddingLeft","leftInset","rightPadder","paddingRight","rightInset","variables","context","theme","isIphoneX","disableKBDismissScroll","x","y","keyboardShouldPersistTaps","_scrollview","c","_root","layoutChange","e","nativeEvent","layout","calculateLeft","children","contextTypes","object","propTypes","oneOfType","number","array","padder","bool","enableResetScrollToCoords","string","StyledContent"],"mappings":"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","file":"Content.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variable from \"../theme/variables/platform\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: \"portrait\"\n    };\n  }\n  layoutChange(val) {\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\n    else {\n      this.setState({ orientation: \"portrait\" });\n    }\n  }\n\n  calculateLeft(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let leftPadder = null;\n    if (this.props.style[1] !== undefined) {\n      if (\n        this.props.style[1].padding !== undefined ||\n        this.props.style[1].paddingLeft !== undefined\n      ) {\n        leftPadder =\n          (this.props.style[1].paddingLeft\n            ? this.props.style[1].paddingLeft\n            : this.props.style[1].padding) + InsetValues.leftInset;\n      }\n    } else if (\n      this.props.style.padding !== undefined ||\n      this.props.style.paddingLeft !== undefined\n    ) {\n      leftPadder =\n        (this.props.style.paddingLeft\n          ? this.props.style.paddingLeft\n          : this.props.style.padding) + InsetValues.leftInset;\n    } else {\n      leftPadder = InsetValues.leftInset;\n    }\n    return leftPadder;\n  }\n  calculateRight(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let rightPadder = null;\n    if (this.props.style[1] !== undefined) {\n      if (\n        this.props.style[1].padding !== undefined ||\n        this.props.style[1].paddingRight !== undefined\n      ) {\n        rightPadder =\n          (this.props.style[1].paddingRight\n            ? this.props.style[1].paddingRight\n            : this.props.style[1].padding) + InsetValues.rightInset;\n      }\n    } else if (\n      this.props.style.padding !== undefined ||\n      this.props.style.paddingRight !== undefined\n    ) {\n      rightPadder =\n        (this.props.style.paddingRight\n          ? this.props.style.paddingRight\n          : this.props.style.padding) + InsetValues.rightInset;\n    } else {\n      rightPadder = InsetValues.rightInset;\n    }\n    return rightPadder;\n  }\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n      : variable;\n    return variable.isIphoneX ? (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\n        }\n        keyboardShouldPersistTaps={\n          this.props.keyboardShouldPersistTaps\n            ? this.props.keyboardShouldPersistTaps\n            : \"handled\"\n        }\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n        {...this.props}\n        onLayout={e => this.layoutChange(e.nativeEvent.layout)}\n        style={[\n          this.props.style,\n          {\n            paddingLeft: this.calculateLeft(\n              this.state.orientation,\n              variables.Inset\n            )\n          }\n        ]}\n      >\n        {this.props.children}\n      </KeyboardAwareScrollView>\n    ) : (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={\n          this.props.disableKBDismissScroll ? null : { x: 0, y: 0 }\n        }\n        keyboardShouldPersistTaps={\n          this.props.keyboardShouldPersistTaps\n            ? this.props.keyboardShouldPersistTaps\n            : \"handled\"\n        }\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n        {...this.props}\n      >\n        {this.props.children}\n      </KeyboardAwareScrollView>\n    );\n  }\n}\n\nContent.propTypes = {\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  padder: PropTypes.bool,\n  disableKBDismissScroll: PropTypes.bool,\n  enableResetScrollToCoords: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string\n};\n\nconst StyledContent = connectStyle(\n  \"NativeBase.Content\",\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]}