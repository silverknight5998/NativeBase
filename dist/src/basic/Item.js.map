{"version":3,"sources":["../../../src/basic/Item.js"],"names":["Item","props","state","text","topAnim","Animated","Value","opacAnim","isFocused","floatingLabel","inputProps","value","setState","floatUp","getRef","_inputRef","nextProps","childrenArray","React","Children","toArray","children","_","remove","item","type","displayName","timing","toValue","duration","start","e","label","labelProps","createElement","Label","labelStyle","StyleSheet","flatten","fontSize","lineHeight","style","cloneElement","key","float","floatBack","inputElement","ref","c","onFocus","onBlur","length","onChangeText","Input","labelChild","inputChild","icon","iconProps","newChildren","forEach","push","iconItem","isRight","position","left","last","hasIcon","right","top","opacity","paddingTop","Platform","OS","undefined","paddingBottom","renderLabel","renderInput","console","log","iconComponent","unshift","stackedLabel","flexDirection","flex","width","variables","deviceWidth","roundedInputGroup","borderWidth","rounded","borderRadius","inputGroupRoundedBorderRadius","defaultProps","getInitialStyle","_root","prepareRootProps","renderChildren","Component","childrenType","propName","component","error","prop","Error","propTypes","TouchableOpacity","PropTypes","oneOfType","object","number","array","inlineLabel","bool","fixedLabel","success","StyledItem","mapPropsToStyleNames"],"mappings":"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","file":"Item.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  TouchableOpacity,\n  Animated,\n  Platform,\n  View,\n  StyleSheet\n} from \"react-native\";\nimport { Input } from \"./Input\";\nimport { Label } from \"./Label\";\nimport { Icon } from \"./Icon\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variables from \"../theme/variables/platform\";\nimport computeProps from \"../utils/computeProps\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport _ from \"lodash\";\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      topAnim: new Animated.Value(18),\n      opacAnim: new Animated.Value(1),\n      isFocused: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.floatingLabel) {\n      if (this.inputProps && this.inputProps.value) {\n        this.setState({ isFocused: true });\n        this.floatUp(-16);\n      }\n      if (this.inputProps && this.inputProps.getRef) {\n        this.inputProps.getRef(this._inputRef);\n      }\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const childrenArray = React.Children.toArray(nextProps.children);\n    _.remove(childrenArray, (item) => {\n      if (item.type.displayName === 'Styled(Input)') {\n        this.inputProps = item.props;\n        return item;\n      }\n      return false;\n    });\n    if (this.props.floatingLabel) {\n      if (this.inputProps && this.inputProps.value) {\n        this.setState({ isFocused: true });\n        this.floatUp(-16);\n      }\n      if (this.inputProps && this.inputProps.getRef) {\n        this.inputProps.getRef(this._inputRef);\n      }\n    }\n  }\n\n  floatBack() {\n    Animated.timing(this.state.topAnim, {\n      toValue: 18,\n      duration: 150,\n    }).start();\n    Animated.timing(this.state.opacAnim, {\n      toValue: 1,\n      duration: 150,\n    }).start();\n  }\n\n  floatUp(e) {\n    Animated.timing(this.state.topAnim, {\n      toValue: e || -22,\n      duration: 150,\n    }).start();\n    Animated.timing(this.state.opacAnim, {\n      toValue: 0.7,\n      duration: 150,\n    }).start();\n  }\n\n  renderLabel(label, labelProps) {\n    if (!label) {\n      return React.createElement(Label, { ...labelProps });\n    }\n\n    if (this.props.floatingLabel) {\n      if (this.state.isFocused) {\n        const labelStyle = StyleSheet.flatten(\n          { fontSize: 15, lineHeight: 30 },\n          labelProps.style,\n        );\n        this.floatUp(-16);\n        return React.cloneElement(label, {\n          ...labelProps,\n          key: 'newFLabel',\n          float: true,\n          style: labelStyle,\n        });\n      }\n      this.floatBack();\n      return label;\n    }\n    return React.cloneElement(label, {\n      ...labelProps,\n      key: 'newLabel',\n    });\n  }\n\n  renderInput(inputElement, inputProps) {\n    const props = {\n      value: this.state.text,\n      ...inputProps,\n      ref: (c) => { this._inputRef = c; },\n      key: 'l2',\n      onFocus: () => {\n        this.setState({ isFocused: true });\n        inputProps.onFocus && inputProps.onFocus();\n      },\n      onBlur: () => {\n        inputProps.value\n          ? this.setState({\n            isFocused: true,\n          })\n          : !this.state.text.length && this.setState({ isFocused: false });\n        inputProps.onBlur && inputProps.onBlur();\n      },\n      onChangeText: (text) => {\n        this.setState({ text });\n        inputProps.onChangeText && this.inputProps.onChangeText(text);\n      },\n    };\n\n    if (!inputElement) {\n      return React.createElement(Input, props);\n    }\n    return React.cloneElement(inputElement, props);\n  }\n\n  renderChildren() {\n    let labelChild = null;\n    let labelProps = {};\n    let inputChild = null;\n    let inputProps = {};\n    const icon = [];\n    let iconProps = {};\n    let newChildren = [];\n\n    React.Children.toArray(this.props.children)\n      .forEach((item) => {\n        if (item.type.displayName === 'Styled(Label)') {\n          labelChild = item;\n          labelProps = item.props;\n        } else if (item.type.displayName === 'Styled(Input)') {\n          inputChild = item;\n          inputProps = item.props;\n          this.inputProps = item.props;\n        } else if (item.type.displayName === 'Styled(Icon)') {\n          icon.push({ iconItem: item, isRight: !!inputChild });\n          iconProps = item.props;\n        }\n      });\n\n    // if (this.props.floatingLabel && icon.length) {\n    //   let isIcon = false;\n    //   for (let i = 0; i < this.props.children.length; i++) {\n    //     if (this.props.children[i].props.name && this.props.children[i].type.displayName !== \"Styled(Input)\") {\n    //       isIcon = true;\n    //       newChildren.push(\n    //         <Icon key={[i]} {...this.props.children[i].props} />\n    //       );\n    //     }\n    //     if (this.props.children[i].props.children) {\n    //       newChildren.push(\n    //         <Animated.View\n    //           key=\"float\"\n    //           style={{\n    //             position: \"absolute\",\n    //             left:\n    //               this.props.last && isIcon\n    //                 ? 40\n    //                 : this.props.last\n    //                   ? 15\n    //                   : isIcon\n    //                     ? 26\n    //                     : 0,\n    //             right: 0,\n    //             top: this.state.topAnim,\n    //             opacity: this.state.opacAnim,\n    //             paddingTop: Platform.OS === \"ios\" ? undefined : undefined,\n    //             paddingBottom: Platform.OS === \"ios\" ? undefined : 12\n    //           }}\n    //         >\n    //           <Label {...labelProps}>\n    //             {this.renderLabel(label, labelProps)}\n    //           </Label>\n    //         </Animated.View>\n    //       );\n    //       newChildren.push(\n    //         <Input\n    //           ref={c => (this._inputRef = c)}\n    //           key=\"l2\"\n    //           {...inputProps}\n    //           onFocus={() => {\n    //             this.setState({ isFocused: true });\n    //             inputProps.onFocus && inputProps.onFocus();\n    //           }}\n    //           onBlur={() => {\n    //             inputProps.value\n    //               ? this.setState({\n    //                 isFocused: true\n    //               })\n    //               : !this.state.text.length &&\n    //               this.setState({ isFocused: false });\n    //             inputProps.onBlur && inputProps.onBlur();\n    //           }}\n    //           onChangeText={text => {\n    //             this.setState({ text });\n    //             inputProps.onChangeText && inputProps.onChangeText(text);\n    //           }}\n    //         />\n    //       );\n    //     }\n    //   }\n    // }\n\n    if (this.props.floatingLabel) {\n      newChildren.push(\n        <Animated.View\n          key=\"float\"\n          style={{\n            position: 'absolute',\n            left:\n              this.props.last && hasIcon\n                ? 40\n                : this.props.last\n                  ? 15\n                  : hasIcon\n                    ? 26\n                    : 0,\n            right: 0,\n            top: this.state.topAnim,\n            opacity: this.state.opacAnim,\n            paddingTop: Platform.OS === 'ios' ? undefined : undefined,\n            paddingBottom: Platform.OS === 'ios' ? undefined : 12,\n          }}\n        >\n          {this.renderLabel(labelChild, labelProps)}\n        </Animated.View>,\n      );\n      newChildren.push(this.renderInput(inputChild, inputProps));\n      const hasIcon = icon && icon.length;\n      if (hasIcon) {\n        icon.forEach(({ iconItem, isRight }) => {\n          console.log('iconItem', iconItem);\n          console.log('isRight', isRight);\n          const iconComponent = <Icon key={iconItem.key} {...iconItem.props} />;\n          if (isRight) {\n            newChildren.push(iconComponent);\n          } else {\n            newChildren.unshift(iconComponent);\n          }\n        });\n      }\n    } else if (this.props.stackedLabel && icon.length) {\n      newChildren.push(\n        <View\n          key=\"s\"\n          style={{\n            flexDirection: 'row',\n            flex: 1,\n            width: variables.deviceWidth - 15,\n          }}\n        >\n          <Icon key=\"s1\" {...iconProps} />\n          <View style={{ flexDirection: 'column' }}>\n            <Label key=\"s2\" {...labelProps} />\n            {React.cloneElement(inputChild, {\n              ...inputProps,\n              key: 's3',\n              style: { width: variables.deviceWidth - 40 },\n            })}\n          </View>\n        </View>,\n      );\n    } else {\n      newChildren = this.props.children;\n    }\n    return newChildren;\n  }\n  \n  getInitialStyle() {\n    return {\n      roundedInputGroup: {\n        borderWidth: this.props.rounded ? variables.borderWidth * 2 : undefined,\n        borderRadius: this.props.rounded\n          ? variables.inputGroupRoundedBorderRadius\n          : undefined,\n      },\n    };\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getInitialStyle().roundedInputGroup,\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n\n  render() {\n    return (\n      <TouchableOpacity\n        ref={(c) => { this._root = c; }}\n        {...this.prepareRootProps()}\n        activeOpacity={1}\n      >\n        {this.renderChildren()}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst childrenType = function (props, propName, component) {\n  let error;\n  const prop = props[propName];\n  if (!props.children.length) {\n    error = new Error(\n      `${component} should have both Label and Input components`\n    );\n  } else if (\n    props.children[0].type.displayName !== \"Styled(Label)\" ||\n    props.children[1].type.displayName !== \"Styled(Input)\"\n  ) {\n    error = new Error(\n      `${component} should have Label and Input components only`\n    );\n  }\n  return error;\n};\n\nItem.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  inlineLabel: PropTypes.bool,\n  floatingLabel: PropTypes.bool,\n  stackedLabel: PropTypes.bool,\n  fixedLabel: PropTypes.bool,\n  success: PropTypes.bool,\n  error: PropTypes.bool\n};\n\nconst StyledItem = connectStyle(\"NativeBase.Item\", {}, mapPropsToStyleNames)(\n  Item\n);\n\nexport { StyledItem as Item };\n"]}